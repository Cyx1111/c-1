<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.VCCodeModel</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.MFCDialogNumberVariableExtender">
      <summary>提供对 MFC 对话框中数值类型变量的最小范围和最大范围的访问。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.MFCDialogNumberVariableExtender.Initialize(System.Object,EnvDTE.IExtenderSite,System.Int32)">
      <summary>仅由 Microsoft 内部使用。</summary>
      <param name="ExtendeeObject">要初始化的 Extendee 对象</param>
      <param name="ExtenderSite">扩展程序的站点</param>
      <param name="Cookie">提供的 Cookie</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.MFCDialogNumberVariableExtender.MaxValue">
      <summary>获取或设置由父对象表示的数值类型变量的最大值。</summary>
      <returns>一个表示最大数值的字符串。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.MFCDialogNumberVariableExtender.MinValue">
      <summary>获取或设置由父对象表示的数值类型变量的最小值。</summary>
      <returns>一个表示最小数值的字符串。</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.MFCDialogStringVariableExtender">
      <summary>提供对 MFC 对话框中字符串类型变量的最大字符范围的访问。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.MFCDialogStringVariableExtender.Initialize(System.Object,EnvDTE.IExtenderSite,System.Int32)">
      <summary>仅由 Microsoft 内部使用。</summary>
      <param name="ExtendeeObject">用于初始化的输入对象</param>
      <param name="ExtenderSite">扩展程序的站点</param>
      <param name="Cookie">输入 Cookie</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.MFCDialogStringVariableExtender.MaxChars">
      <summary>获取或设置由父对象表示的字符串类型变量的最大字符数。</summary>
      <returns>一个表示最大字符数的字符串。</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.MFCDialogVariableExtender">
      <summary>提供对现有 MFC 对话框中变量代码元素的访问。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.MFCDialogVariableExtender.ControlID">
      <summary>获取表示对话成员变量的控件 ID。</summary>
      <returns>表示控件 ID 的字符串。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.MFCDialogVariableExtender.IDType">
      <summary>获取对话变量的类型。</summary>
      <returns>一个指示对话变量类型的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMMFCDialogVariableIDType" /> 枚举值。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.MFCDialogVariableExtender.Initialize(System.Object,EnvDTE.IExtenderSite,System.Int32)">
      <summary>仅由 Microsoft 内部使用。</summary>
      <param name="ExtendeeObject">输入对象</param>
      <param name="ExtenderSite">扩展程序的站点</param>
      <param name="Cookie">输入 Cookie</param>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.vcCMConstants">
      <summary>Visual C++ 代码模型定义一个 GUID 集合，用于实现自动化扩展程序。 自动化扩展程序允许您扩展属性，这些属性取决于您的需要，并由 Visual C++ 代码模型自动扩展。 有关自动延长器以及对其进行支持的更多信息，请参见 Automation Extenders。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDAttribute">
      <summary>表示一个代码属性。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDClass">
      <summary>表示代码类。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDDelegate">
      <summary>表示代码委托。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDEnum">
      <summary>表示代码枚举。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDEvent">
      <summary>表示代码事件。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDFunction">
      <summary>表示一个代码函数。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDIDLCoClass">
      <summary>表示代码 coclass。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDIDLImport">
      <summary>表示代码导入。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDIDLImportLib">
      <summary>表示代码导入库。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDIDLLibrary">
      <summary>表示一个代码库。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDImportStmt">
      <summary>表示代码导入语句。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDIncludeStmt">
      <summary>表示代码 include (C++) 语句。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDInterface">
      <summary>表示代码接口。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDMacro">
      <summary>表示代码宏。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDMap">
      <summary>表示代码映射。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDMapEntry">
      <summary>表示代码映射中的项。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDNamespace">
      <summary>表示代码命名空间。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDParameter">
      <summary>表示代码参数。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDProperty">
      <summary>表示代码属性。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDStruct">
      <summary>表示代码结构。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDTypeDef">
      <summary>表示代码类型定义 (typedef)。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDUnion">
      <summary>表示代码联合。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDUsingStmt">
      <summary>表示代码 using（C# 参考） 语句。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDVariable">
      <summary>表示代码变量。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMCATIDVCBase">
      <summary>表示代码 Visual C++ 基类。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMMFCDialogNumberVariableExtender">
      <summary>表示 MFC 对话框的数字变量的扩展程序。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMMFCDialogStringVariableExtender">
      <summary>表示 MFC 对话框的字符串变量的扩展程序。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMMFCDialogVariableExtender">
      <summary>表示 MFC 对话框的变量的扩展程序。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMConstants.vcCMVCDialogExtender">
      <summary>表示 MFC 对话框的扩展程序。</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.vcCMNameValidationOption">
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMNameValidationOption.vcCMNameValidationOptionStandard">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMNameValidationOption.vcCMNameValidationOptionPartial">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMNameValidationOption.vcCMNameValidationOptionDefinition">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vcCMNameValidationOption.vcCMNameValidationOptionForwardDeclaration">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute">
      <summary>提供对项特性的访问。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.AddParameter(System.String,System.String,System.Object)">
      <summary>创建新的参数代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeParameter" /> 对象。</returns>
      <param name="Name">必选。 参数名。</param>
      <param name="Value">参数的默认值。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.AddParameter(System.String,System.String,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.Children">
      <summary>获取指定特性的子代码元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合，集合中的每个元素表示一个代码元素。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 表示特性项目的代码模型的对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.Collection">
      <summary>获取一个集合，该集合包含支持此特性的代码元素。</summary>
      <returns>一个与代码特性相关的 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.Delete">
      <summary>移除特性。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.DisplayName">
      <summary>获取特性的全名。</summary>
      <returns>一个表示此特性的名称的字符串。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回父对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.Extender(System.String)">
      <summary>如果请求的扩展程序对象可用于此对象，则获取该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>一个扩展程序 ID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的数组。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.File">
      <summary>获取在其中声明该父对象的文件。</summary>
      <returns>文件名。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>返回标记代码元素定义的末尾的 <see cref="T:EnvDTE.TextPoint" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>返回定义代码元素定义的开始位置的 <see cref="T:EnvDTE.TextPoint" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.Index">
      <summary>获取特性块中特性的位置。</summary>
      <returns>一个指示特性块内特性位置的值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.InfoLocation">
      <summary>获取代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.IsCaseSensitive">
      <summary>获取表示代码元素是否区分大小写的值。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可以获取 <see cref="T:EnvDTE.CodeType" /> 对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.IsInjected">
      <summary>确定是否已通过特性或宏展开插入某个代码元素。</summary>
      <returns>如果已插入代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.IsReadOnly">
      <summary>获取表示包含父对象的文件是否是只读文件的值。</summary>
      <returns>如果包含父对象的文件是只读文件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与父代码元素相同。</summary>
      <returns>如果指定的代码元素与父代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 被比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.IsZombie">
      <summary>获取表示父对象是否存在的值。</summary>
      <returns>如果父对象不再存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回父对象声明的位置。</summary>
      <returns>父对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.Parameters">
      <summary>获取此项的参数集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>一个表示特性的父对象的 <see cref="T:EnvDTE.CodeElement" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.Project">
      <summary>获取与对象关联的 <see cref="T:EnvDTE.Project" />。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" />。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.RemoveParameter(System.Object)">
      <summary>从参数列表中移除参数。</summary>
      <param name="Element">必选。 一个 <see cref="T:EnvDTE.CodeElement" /> 对象，或它在集合中的名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回父对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeAttribute.Value">
      <summary>获取或设置该对象的数据。</summary>
      <returns>对象的值。</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeBase">
      <summary>一个对象，用于提供对父对象的基类列表的访问。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.Access">
      <summary>设置或获取此项的访问特性。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.Class">
      <summary>获取父对象的基类声明或实际基类声明。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeType" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" />。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeBase" /> 元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.DeclarationText">
      <summary>获取或设置父对象的声明。</summary>
      <returns>表示父对象声明的字符串。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.DisplayName">
      <summary>获取父对象的全名。</summary>
      <returns>父对象的全名。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.EndPoint">
      <summary>获取表示代码项结束位置的文本点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回父对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.Extender(System.String)">
      <summary>如果所请求的扩展程序对象可用于此对象，则返回该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.File">
      <summary>获取在其中包含此 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeBase" /> 的文件。</summary>
      <returns>文件名。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeBase" /> 的文件的完整路径。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>返回标记代码元素定义的末尾的 <see cref="T:EnvDTE.TextPoint" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>返回定义代码元素定义的开始位置的 <see cref="T:EnvDTE.TextPoint" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.InfoLocation">
      <summary>获取代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.IsCaseSensitive">
      <summary>获取表示代码元素是否区分大小写的值。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可以获取 <see cref="T:EnvDTE.CodeType" /> 对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.IsInjected">
      <summary>获取表示是否已通过特性或宏展开插入某个代码元素的值。</summary>
      <returns>如果已通过特性或宏展开插入某个代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.IsReadOnly">
      <summary>获取表示包含父对象的文件是否是只读文件的值。</summary>
      <returns>如果文件为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与父代码元素相同。</summary>
      <returns>如果指定的代码元素与父代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 父代码元素要与其进行比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.IsVirtual">
      <summary>设置或获取一个值，该值指示此父对象是否为虚拟对象。</summary>
      <returns>如果父对象为虚拟对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.IsZombie">
      <summary>获取表示 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeBase" /> 对象是否存在的值。</summary>
      <returns>如果它不存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.Kind">
      <summary>返回一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.Language">
      <summary>对于代码模型对象，请返回用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回父对象声明的位置。</summary>
      <returns>父对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeBase" /> 的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeType" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.Project">
      <summary>获取与对象关联的 <see cref="T:EnvDTE.Project" />。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" />。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.References">
      <summary>目前尚未实现。</summary>
      <returns>一个空的 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeBase.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取父对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeClass">
      <summary>一个对象，用于提供对收集在 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象中的任何类元素的访问。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Access">
      <summary>设置或获取此项的访问特性。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddAttribute(System.String,System.String,System.Object)">
      <summary>创建新的特性代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeAttribute" /> 对象。</returns>
      <param name="Name">必选。 新特性的名称。</param>
      <param name="Value">必选。 特性的值，该值可以是参数化属性的逗号分隔参数列表。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddAttribute(System.String,System.String,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddBase(System.Object,System.Object)">
      <summary>将某项添加到继承对象的列表中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElement" /> 对象。</returns>
      <param name="Base">必选。 从中派生实现的类。 对于 <see cref="T:EnvDTE.CodeClass" /> 对象，这是 <see cref="T:EnvDTE.CodeClass" /> 或完全限定类型名。 Visual C++ 要求其完全限定的类型名使用以冒号分隔 (::) 的格式。 所有其他语言都支持以句点分隔的格式。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddBase(System.Object,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddClass(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的类代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeClass" /> 对象。</returns>
      <param name="Name">必选。 类的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddClass(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">可选。 默认值 = 0。 一个包含完全限定类型名或 <see cref="T:EnvDTE.CodeClass" /> 对象（新类将从这些对象继承自己的实现）的 SafeArray。</param>
      <param name="ImplementedInterfaces">可选。 默认值 = 0。 一个包含完全限定类型名或 <see cref="T:EnvDTE.CodeInterface" /> 对象（每个对象都表示新类承诺实现的接口）的 SafeArray。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddDelegate(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的委托代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeDelegate" /> 对象。</returns>
      <param name="Name">必选。 要添加的委托的名称。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddDelegate(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddEnum(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的枚举代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeEnum" /> 对象。</returns>
      <param name="Name">必选。 要添加的枚举的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddEnum(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">可选。 默认为 Nothing。 一个保存 SafeArray 的变量，该 SafeArray 包含用于指定新建枚举的基础类型的完全限定类型名或 <see cref="T:EnvDTE.CodeType" /> 对象。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddEvent(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>仅由 Microsoft 内部使用。</summary>
      <returns>表示事件代码元素的对象。</returns>
      <param name="Name">事件名称</param>
      <param name="Type">事件类型</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddFunction(System.String,EnvDTE.vsCMFunction,System.Object,System.Object,EnvDTE.vsCMAccess,System.Object)">
      <summary>创建新的函数代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeFunction" /> 对象。</returns>
      <param name="Name">必选。 新函数的名称。</param>
      <param name="Kind">必选。 用于指示函数类型（例如，函数是 property-get、方法还是其他类型）的 <see cref="T:EnvDTE.vsCMFunction" /> 常数。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddFunction(System.String,EnvDTE.vsCMFunction,System.Object,System.Object,EnvDTE.vsCMAccess,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
      <param name="Location">可选。 要插入代码的位置。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddImplementedInterface(System.Object,System.Object)">
      <summary>将接口添加到继承对象的列表中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeInterface" /> 对象。</returns>
      <param name="Base">必选。 该类将实现的接口。 它可以是 <see cref="T:EnvDTE.CodeInterface" /> 或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddImplementedInterface(System.Object,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddMap(System.String,System.String,System.Object,System.Object)">
      <summary>将映射项添加到父对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeMap" /> 对象。</returns>
      <param name="Name">必选。 指定映射项的名称。</param>
      <param name="ParameterText">可选。 传递到映射对象的参数。</param>
      <param name="Position">可选。 默认值 = -1。 将在其后添加事件元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Location">可选。 位置。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddProperty(System.String,System.String,System.Object,System.Object,EnvDTE.vsCMAccess,System.Object)">
      <summary>创建新的属性代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeProperty" /> 对象。</returns>
      <param name="GetterName">必选。 获取属性值的函数名。</param>
      <param name="PutterName">必选。 设置该属性的函数名。</param>
      <param name="Type">必选。 属性的类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 值或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddProperty(System.String,System.String,System.Object,System.Object,EnvDTE.vsCMAccess,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 访问。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数值。</param>
      <param name="Location">可选。 位置。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddStruct(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的结构代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeStruct" /> 对象。</returns>
      <param name="Name">必选。 新结构的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">必选。 默认值为 Nothing 或 null。 一个保存 SafeArray 的变量，该 SafeArray 包含完全限定类型名或新接口派生自的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface" /> 对象。</param>
      <param name="ImplementedInterfaces">必选。 默认值为 Nothing 或 null。 一个包含完全限定类型名或 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface" /> 对象（每个对象都表示新类承诺实现的接口）的 SafeArray。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddTemplateParameter(System.String,System.Object,System.Object)">
      <summary>向模板定义添加一个参数。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeParameter" /> 对象。</returns>
      <param name="Name">必选。 新模板参数的名称。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddTemplateParameter(System.String,System.Object,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddTypedef(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>将 Typedef 语句添加到父对象中。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef" /> 对象。</returns>
      <param name="Name">必选。 指定别名的名称。</param>
      <param name="Type">必选。 别名的类型。</param>
      <param name="Position">必选。 默认值 = -1。 将在其后添加事件元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddUnion(System.String,System.Object,EnvDTE.vsCMAccess)">
      <summary>将 union 语句添加到父对象中。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion" /> 对象。</returns>
      <param name="Name">必选。 指定联合的名称。</param>
      <param name="Position">必选。 默认值 = -1。 将在其后添加事件元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddVariable(System.String,System.Object,System.Object,EnvDTE.vsCMAccess,System.Object)">
      <summary>创建新的变量代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeVariable" /> 对象。</returns>
      <param name="Name">必选。 新变量的名称。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddVariable(System.String,System.Object,System.Object,EnvDTE.vsCMAccess,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
      <param name="Location">可选。 新变量定义的路径和文件名。 根据语言的不同，文件名是项目文件的相对名称或绝对名称。 如果该文件还不是项目项，则将该文件添加到项目中。 如果无法创建该文件并将其添加到项目中，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.AddVariable(System.String,System.Object,System.Object,EnvDTE.vsCMAccess,System.Object)" /> 失败。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Attributes">
      <summary>获取父对象的所有特性的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Bases">
      <summary>获取该项派生自的类的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.BodyText">
      <summary>获取或设置父对象的正文。</summary>
      <returns>父对象的正文。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Classes">
      <summary>获取父对象的类集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Comment">
      <summary>获取或设置与 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeClass" /> 关联的注释。</summary>
      <returns>与 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeClass" /> 关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.DataTypeKind">
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.DeclarationText">
      <summary>获取或设置父对象的声明。</summary>
      <returns>父对象的声明。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.DerivedTypes">
      <summary>获取从该对象派生的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.DisplayName">
      <summary>获取父对象的全名。</summary>
      <returns>父对象的全名。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.DocComment">
      <summary>获取或设置当前代码模型元素的文档注释。</summary>
      <returns>当前代码模型元素的文档注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取父对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Enums">
      <summary>获取父对象的枚举集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Events">
      <summary>获取父对象的事件的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Extender(System.String)">
      <summary>如果请求的扩展程序对象可用于此对象，则获取该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>一个表示对象的 CATID 的 GUID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序对象的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.File">
      <summary>获取在其中声明 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeClass" /> 的文件。</summary>
      <returns>在其中声明 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeClass" /> 的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Functions">
      <summary>获取父对象的函数集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>返回标记代码元素定义的末尾的 <see cref="T:EnvDTE.TextPoint" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>返回定义代码元素定义的开始位置的 <see cref="T:EnvDTE.TextPoint" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.ImplementedInterfaces">
      <summary>获取由此对象实现的接口的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.InfoLocation">
      <summary>获取代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.IsAbstract">
      <summary>获取或设置一个值，该值指示某一项是否声明为抽象项。</summary>
      <returns>如果该项声明为抽象项，该值为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.IsCaseSensitive">
      <summary>获取一个值，该值指示代码元素是否区分大小写。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可以获取 <see cref="T:EnvDTE.CodeType" /> 对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.IsDerivedFrom(System.String)">
      <summary>获取一个值，该值指示一个对象是否以另一个对象作为基。</summary>
      <returns>如果对象有另一个对象作为其基对象，则为 true，否则为 false。</returns>
      <param name="FullName">必选。 要在此类型的沿袭中搜索的类型。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.IsInjected">
      <summary>获取一个值，该值指示是否已通过特性或宏展开插入某个代码元素。</summary>
      <returns>如果已通过特性或宏展开插入某个代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.IsManaged">
      <summary>获取或设置一个值，指示 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeClass" /> 对象是否为托管对象。</summary>
      <returns>如果 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeClass" /> 对象为托管对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.IsReadOnly">
      <summary>获取一个值，该值指示包含 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeClass" /> 对象的文件是否为只读文件。</summary>
      <returns>如果包含 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeClass" /> 对象的文件为只读文件，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.IsSealed">
      <summary>获取或设置一个值，指示 __sealed 关键字是否应用于父对象。</summary>
      <returns>如果 __sealed 关键字应用于父对象，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与父代码元素相同。</summary>
      <returns>如果指定的代码元素与父代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 被比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.IsTemplate">
      <summary>获取一个值，该值指示 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeClass" /> 对象是否为模板。</summary>
      <returns>如果 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeClass" /> 对象为模板，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.IsValue">
      <summary>获取或设置一个值，指示 __value 关键字是否应用于 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeClass" /> 对象。</summary>
      <returns>如果 __value 关键字应用于 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeClass" /> 对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.IsZombie">
      <summary>获取一个值，该值指示 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeClass" /> 对象是否存在。</summary>
      <returns>如果该对象不存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeClass" /> 对象声明的位置。</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeClass" /> 对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Maps">
      <summary>获取 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeClass" /> 对象的映射集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Members">
      <summary>获取此元素包含的项的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeClass" /> 的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Namespace">
      <summary>获取一个定义父命名空间的对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeNamespace" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElement" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Parts">
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Project">
      <summary>获取与对象关联的 <see cref="T:EnvDTE.Project" />。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Properties">
      <summary>获取父对象的属性集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.References">
      <summary>目前尚未实现。</summary>
      <returns>一个空的 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.RemoveBase(System.Object)">
      <summary>从基列表中移除一个对象。</summary>
      <param name="Element">必选。 一个 <see cref="T:EnvDTE.CodeElement" />，或它在集合中的名称。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.RemoveInterface(System.Object)">
      <summary>从实现的接口列表中移除一个接口。</summary>
      <param name="Element">必选。 一个 <see cref="T:EnvDTE.CodeElement" />，或它在集合中的名称。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.RemoveMember(System.Object)">
      <summary>移除成员代码构造。</summary>
      <param name="Element">必选。 一个 <see cref="T:EnvDTE.CodeElement" /> 对象，或它在集合中的名称。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.RemoveTemplateParameter(System.Object)">
      <summary>从模板定义中移除参数。</summary>
      <param name="Element">要移除的参数的索引或名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回父对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Structs">
      <summary>获取 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeClass" /> 对象的结构元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.TemplateParameters">
      <summary>获取类模板中包含的参数的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Templatizations">
      <summary>仅由 Microsoft 内部使用。</summary>
      <returns>表示源文件中代码构造的对象集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Typedefs">
      <summary>获取父对象的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef" /> 元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Unions">
      <summary>获取 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeClass" /> 对象的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion" /> 元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.ValidateMember(System.String,EnvDTE.vsCMElement,System.String)">
      <summary>验证所建议的名称是否是父对象上下文中给定类型的有效 C++ 名称。</summary>
      <returns>如果对象名称有效，则为 true；否则为 false。</returns>
      <param name="bstrName">必选。 所验证的对象的名称。</param>
      <param name="Kind">必选。 一个 <see cref="T:EnvDTE.vsCMElement" /> 值，表示要验证的对象的类型。</param>
      <param name="bstrType">可选。 所验证的对象的类型。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.ValidateMemberName(System.String,EnvDTE.vsCMElement,Microsoft.VisualStudio.VCCodeModel.vcCMNameValidationOption)">
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeClass.Variables">
      <summary>获取 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeClass" /> 对象的变量集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate">
      <summary>表示委托代码元素（用 __delegate 关键字声明）的对象。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.Access">
      <summary>获取或设置此项的访问特性。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.AddAttribute(System.String,System.String,System.Object)">
      <summary>创建新的特性代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeAttribute" /> 对象。</returns>
      <param name="Name">必选。 新特性的名称。</param>
      <param name="Value">必选。 特性的值，该值可以是参数化属性的逗号分隔参数列表。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.AddAttribute(System.String,System.String,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.AddBase(System.Object,System.Object)">
      <summary>将某项添加到继承对象的列表中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElement" /> 对象。</returns>
      <param name="Base">必选。 从中派生实现的类。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.AddBase(System.Object,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.AddParameter(System.String,System.Object,System.Object)">
      <summary>创建新的参数代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeParameter" /> 对象。</returns>
      <param name="Name">必选。 参数名。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" />常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.AddParameter(System.String,System.Object,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.Attributes">
      <summary>获取父对象的所有特性的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.BaseClass">
      <summary>获取此对象派生自的类。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeClass" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.Bases">
      <summary>获取该项派生自的类的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与代码元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.DerivedTypes">
      <summary>获取从该对象派生的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.DisplayName">
      <summary>获取父对象的全名。</summary>
      <returns>父对象的全名。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.DocComment">
      <summary>获取或设置当前代码模型元素的文档注释。</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate" /> 的文档注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回父对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.Extender(System.String)">
      <summary>如果请求的扩展程序对象可用于此对象，则获取该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.File">
      <summary>获取在其中声明 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate" /> 对象的文件。</summary>
      <returns>在其中声明 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate" /> 对象的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.InfoLocation">
      <summary>获取代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.IsCaseSensitive">
      <summary>获取一个值，该值指示代码元素是否区分大小写。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可以获取 <see cref="T:EnvDTE.CodeType" /> 对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.IsDerivedFrom(System.String)">
      <summary>获取一个值，该值指示一个对象是否以另一个对象作为基。</summary>
      <returns>如果对象有另一个对象作为其基对象，则为 true，否则为 false。</returns>
      <param name="FullName">必选。 要在此类型的沿袭中搜索的类型。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.IsInjected">
      <summary>获取一个值，该值指示是否已通过特性或宏展开插入某个代码元素。</summary>
      <returns>如果已通过特性或宏展开插入某个代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.IsReadOnly">
      <summary>获取一个值，该值指示包含 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate" /> 对象的文件是否为只读文件。</summary>
      <returns>如果包含 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate" /> 对象的文件为只读文件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与父代码元素相同。</summary>
      <returns>如果指定的代码元素与父代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 将与指定的代码元素进行比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.IsZombie">
      <summary>获取一个值，该值指示 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate" /> 对象是否存在。</summary>
      <returns>如果该对象不再存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取父对象声明的位置。</summary>
      <returns>父对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.Members">
      <summary>获取此元素包含的项的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.Namespace">
      <summary>获取一个定义父命名空间的对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeNamespace" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.Parameters">
      <summary>获取此项的参数集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElement" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.Project">
      <summary>获取与该对象关联的 <see cref="T:EnvDTE.Project" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.Prototype(System.Int32)">
      <summary>返回一个字符串，它包含此对象的存根 (stub) 定义。</summary>
      <returns>返回一个描述该元素的字符串。</returns>
      <param name="Flags">可选。 一个 <see cref="T:EnvDTE.vsCMPrototype" /> 值，该值指示字符串内容应是什么，例如仅参数名、参数类型和完整的唯一签名等。 默认情况下，所有标志都设置为 Off。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.RemoveBase(System.Object)">
      <summary>从基列表中移除一个对象。</summary>
      <param name="Element">必选。 一个 <see cref="T:EnvDTE.CodeElement" />，或它在集合中的名称。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.RemoveMember(System.Object)">
      <summary>移除成员代码构造。</summary>
      <param name="Element">必选。 一个 <see cref="T:EnvDTE.CodeElement" /> 对象，或它在集合中的名称。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.RemoveParameter(System.Object)">
      <summary>从参数列表中移除参数。</summary>
      <param name="Element">必选。 一个 CodeElement 对象，或它在集合中的名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取父对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.Type">
      <summary>获取或设置表示编程类型的对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeTypeRef" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeDelegate.TypeString">
      <summary>获取或设置以类型的字符串表示形式表示的父对象类型。</summary>
      <returns>父对象的类型</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeElement">
      <summary>一个对象，用于提供对源文件中任何代码元素的访问。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.Attributes">
      <summary>获取父对象的所有特性的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与代码元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.DisplayName">
      <summary>获取 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeElement" /> 对象的显示名称。</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeElement" /> 对象的全名。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeElement" /> 对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.Extender(System.String)">
      <summary>如果所请求的扩展程序对象可用于此对象，则返回该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.File">
      <summary>获取与此 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeElement" /> 对象关联的文件。</summary>
      <returns>与此 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeElement" /> 对象关联的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.InfoLocation">
      <summary>描述代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.IsCaseSensitive">
      <summary>获取一个值，该值指示代码元素是否区分大小写。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可获取 <see cref="T:EnvDTE.CodeType" /> 对象，则返回 true；否则返回 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.IsInjected">
      <summary>获取一个值，该值指示是否已通过特性或宏展开插入某个代码元素。</summary>
      <returns>如果已通过特性或宏展开插入某个代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.IsReadOnly">
      <summary>获取一个值，该值指示包含 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeElement" /> 对象的文件是否为只读文件。</summary>
      <returns>如果包含 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeElement" /> 对象的文件为只读文件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与另一个代码元素相同。</summary>
      <returns>如果指定的代码元素与另一个代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 将与指定的代码元素进行比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.IsZombie">
      <summary>获取一个值，该值指示 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeElement" /> 对象是否存在。</summary>
      <returns>如果该对象不再存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取父对象声明的位置。</summary>
      <returns>父对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>父对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.Project">
      <summary>获取与该对象关联的 <see cref="T:EnvDTE.Project" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.References">
      <summary>目前尚未实现。</summary>
      <returns>一个空的 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElement.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取父对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeElements">
      <summary>一个或多个源文件中表示各个代码元素的对象的集合。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElements.Count">
      <summary>获取一个值，该值指示集合中对象的数目。</summary>
      <returns>一个指示集合中对象数的值。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeElements.CreateUniqueID(System.String,System.String@)">
      <summary>创建不与该范围中的其他标识符相冲突的编程标识符，并遵守当前的语言命名规则。 此方法未在 Visual C# 中实现。</summary>
      <returns>如果名称是唯一标识符，则为 true；如果不是则为 false。</returns>
      <param name="Prefix">必选。 要检查的前缀字符串或整个名称，以查看对于代码元素的集合它是否为唯一的。</param>
      <param name="NewName">可选。 如果提供，则返回保证唯一的名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElements.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeElements.Find(System.String)">
      <summary>返回父对象的指定代码元素。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeReference" /> 对象。</returns>
      <param name="bstrSearch">必选。 要搜索的代码元素的名称。 字符串必须括在双引号内。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeElements.GetEnumerator">
      <summary>获取 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeElements" /> 集合中项的枚举器。</summary>
      <returns>枚举数。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeElements.Item(System.Object)">
      <summary>返回父对象的指定代码元素。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElement" /> 对象。</returns>
      <param name="index">一个对象，它表示集合中项的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeElements.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>父对象。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeElements.Reserved1(System.Object)">
      <summary>仅由 Microsoft 内部使用。</summary>
      <param name="Element">对象</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeElements.Sort(Microsoft.VisualStudio.VCCodeModel.vsCMSort)">
      <summary>对元素的集合进行排序。</summary>
      <param name="vsCMSort">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMSort" /> 值，该值表示要执行的排序的类型（按字母数字或源文件中的位置排序）。</param>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum">
      <summary>表示解决方案源代码中的枚举代码元素的对象。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.Access">
      <summary>获取或设置此项的访问特性。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.AddAttribute(System.String,System.String,System.Object)">
      <summary>创建新的特性代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeAttribute" /> 对象。</returns>
      <param name="Name">必选。 新特性的名称。</param>
      <param name="Value">必选。 特性的值，该值可以是参数化属性的逗号分隔参数列表。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.AddAttribute(System.String,System.String,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.AddBase(System.Object,System.Object)">
      <summary>将某项添加到继承对象的列表中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElement" /> 对象。</returns>
      <param name="Base">必选。 从中派生实现的类。 对于 <see cref="T:EnvDTE.CodeEnum" /> 对象，<paramref name="Base" /> 是一个变量，该变量中包含完全限定的类型名或者新枚举所基于的 <see cref="T:EnvDTE.CodeType" /> 对象。 对于 C#，这是枚举的基础类型。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.AddBase(System.Object,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.AddMember(System.String,System.Object,System.Object)">
      <summary>创建新的成员代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeVariable" /> 对象。</returns>
      <param name="Name">必选。 新成员的名称。</param>
      <param name="Value">可选。 返回 <see cref="T:EnvDTE.CodeVariable" /> 对象的 <see cref="P:EnvDTE.CodeVariable.InitExpression" />。 可作为字符串或作为表达式对象传入。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.AddMember(System.String,System.Object,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.Attributes">
      <summary>获取父对象的所有特性的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.Bases">
      <summary>获取该项派生自的类的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.BodyText">
      <summary>获取或设置父对象的正文。</summary>
      <returns>父对象的正文。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" />。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.DeclarationText">
      <summary>获取或设置父对象的声明。</summary>
      <returns>父对象的声明。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.DerivedTypes">
      <summary>获取从该对象派生的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.DisplayName">
      <summary>获取父对象的全名。</summary>
      <returns>父对象的全名。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.DocComment">
      <summary>获取或设置当前代码模型元素的文档注释。</summary>
      <returns>当前代码模型元素的文档注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回父对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.Extender(System.String)">
      <summary>如果请求的扩展程序对象可用于此对象，则获取该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.File">
      <summary>获取在其中声明该父对象的文件。</summary>
      <returns>在其中声明父对象的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.InfoLocation">
      <summary>描述代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.IsCaseSensitive">
      <summary>获取一个值，该值指示代码元素是否区分大小写。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可获取 <see cref="T:EnvDTE.CodeType" /> 对象，则返回 true；否则返回 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.IsDerivedFrom(System.String)">
      <summary>获取一个值，该值指示一个对象是否以另一个对象作为基。</summary>
      <returns>如果对象有另一个对象作为其基对象，则为 true，否则为 false。</returns>
      <param name="FullName">必选。 要在此类型的沿袭中搜索的类型。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.IsInjected">
      <summary>获取一个值，该值指示是否已通过特性或宏展开插入某个代码元素。</summary>
      <returns>如果已通过特性或宏展开插入某个代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.IsManaged">
      <summary>获取或设置一个值，该值指示父对象是否为托管对象。</summary>
      <returns>如果父对象为托管对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.IsReadOnly">
      <summary>获取一个值，该值指示包含该父对象的文件是否为只读文件。</summary>
      <returns>如果包含父对象的文件是只读文件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与父代码元素相同。</summary>
      <returns>如果指定的代码元素与父代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 将与指定的代码元素进行比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.IsValue">
      <summary>获取或设置一个值，指示 __value 关键字是否应用于父对象。</summary>
      <returns>如果 __value 关键字应用于父对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.IsZombie">
      <summary>获取一个值，该值指示 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum" /> 对象是否存在。</summary>
      <returns>如果该对象不再存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象声明的位置。</summary>
      <returns>对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.Members">
      <summary>获取此元素包含的项的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.Namespace">
      <summary>获取一个定义命名空间的对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeNamespace" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.Parent">
      <summary>获取 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum" /> 对象的直接父对象。</summary>
      <returns>直接父对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.Project">
      <summary>获取与该对象关联的 <see cref="T:EnvDTE.Project" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.References">
      <summary>目前尚未实现。</summary>
      <returns>一个空的 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.RemoveBase(System.Object)">
      <summary>从基列表中移除一个对象。</summary>
      <param name="Element">必选。 一个 <see cref="T:EnvDTE.CodeElement" />，或它在集合中的名称。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.RemoveMember(System.Object)">
      <summary>移除成员代码构造。</summary>
      <param name="Element">必选。 一个 <see cref="T:EnvDTE.CodeElement" /> 对象，或它在集合中的名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取父对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.ValidateMember(System.String,EnvDTE.vsCMElement,System.String)">
      <summary>验证所建议的名称是否是父对象上下文中给定类型的有效 C++ 名称。</summary>
      <returns>如果名称是有效的 C++ 名称，则为 true；否则为 false。</returns>
      <param name="bstrName">必选。 所验证的对象的名称。</param>
      <param name="Kind">必选。 一个 <see cref="T:EnvDTE.vsCMElement" /> 值，表示要验证的对象的类型。</param>
      <param name="bstrType">可选。 所验证的对象的类型。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeEnum.ValidateMemberName(System.String,EnvDTE.vsCMElement,Microsoft.VisualStudio.VCCodeModel.vcCMNameValidationOption)">
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent">
      <summary>表示事件代码元素（用 __event 关键字声明）的对象。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.AddAttribute(System.String,System.String,System.Object)">
      <summary>创建新的特性代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeAttribute" /> 对象。</returns>
      <param name="Name">必选。 新特性的名称。</param>
      <param name="Value">必选。 特性的值，该值可以是参数化属性的逗号分隔参数列表。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.AddAttribute(System.String,System.String,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.Attributes">
      <summary>获取父对象的所有特性的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" />。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与代码元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.DeclarationText">
      <summary>获取或设置父对象的声明。</summary>
      <returns>父对象的声明。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.DisplayName">
      <summary>获取父对象的全名。</summary>
      <returns>父对象的全名。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取父对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.Extender(System.String)">
      <summary>如果请求的扩展程序对象可用于此对象，则获取该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.File">
      <summary>获取在其中声明该对象的文件。</summary>
      <returns>在其中声明该对象的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.Functions">
      <summary>获取事件的已实现子方法集合（e.g. ‘Add’, ‘Throw’, ‘Remove’, ‘Raise’）。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.InfoLocation">
      <summary>获取代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.IsCaseSensitive">
      <summary>获取一个值，该值指示代码元素是否区分大小写。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可以获取 <see cref="T:EnvDTE.CodeType" /> 对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.IsInjected">
      <summary>获取一个值，该值指示是否已通过特性或宏展开插入某个代码元素。</summary>
      <returns>如果已通过特性或宏展开插入某个代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.IsReadOnly">
      <summary>获取一个值，该值指示包含该对象的文件是否为只读文件。</summary>
      <returns>如果包含该对象的文件是只读文件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与另一个代码元素相同。</summary>
      <returns>如果指定的代码元素与另一个代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 被比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.IsShared">
      <summary>如果使用 static 关键字声明了事件，则 <see cref="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.IsShared" /> 为 true。</summary>
      <returns>如果使用 static 关键字声明了事件，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.IsVirtual">
      <summary>如果使用 virtual 关键字声明了事件，则 <see cref="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.IsVirtual" /> 为 true。</summary>
      <returns>如果使用 virtual 关键字声明了事件，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.IsZombie">
      <summary>获取一个值，该值指示该对象是否存在。</summary>
      <returns>如果该对象不存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象声明的位置。</summary>
      <returns>对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.Namespace">
      <summary>获取一个定义命名空间的对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeNamespace" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>父对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.Project">
      <summary>获取与该对象关联的 <see cref="T:EnvDTE.Project" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取父对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeEvent.TypeString">
      <summary>获取或设置以类型的字符串表示形式表示的对象类型。</summary>
      <returns>对象的类型。</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction">
      <summary>定义源文件中函数构造的对象。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.Access">
      <summary>获取或设置此项的访问特性。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.AddAttribute(System.String,System.String,System.Object)">
      <summary>创建新的特性代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeAttribute" /> 对象。</returns>
      <param name="Name">必选。 新特性的名称。</param>
      <param name="Value">必选。 特性的值，该值可以是参数化属性的逗号分隔参数列表。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.AddAttribute(System.String,System.String,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.AddInitializer(System.String)">
      <summary>将一个 C++ 初始值设定项添加到构造函数的成员初始值设定项列表。</summary>
      <param name="bstrText">必选。 初始值设定项的完整文本。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.AddParameter(System.String,System.Object,System.Object)">
      <summary>创建新的参数代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeParameter" /> 对象。</returns>
      <param name="Name">必选。 参数名。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.AddParameter(System.String,System.Object,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.AddTemplateParameter(System.String,System.Object,System.Object)">
      <summary>向模板定义添加一个参数。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeParameter" /> 对象。</returns>
      <param name="Name">必选。 新模板参数的名称。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.AddTemplateParameter(System.String,System.Object,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.Attributes">
      <summary>获取父对象的所有特性的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.BodyText">
      <summary>获取或设置父对象的正文。</summary>
      <returns>父对象的正文。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.CanOverride">
      <summary>获取或设置一个值，该值指示是否可以重写函数。</summary>
      <returns>如果可以重写函数，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与代码元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.DeclarationText">
      <summary>获取或设置对象的声明。</summary>
      <returns>对象的声明。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.DisplayName">
      <summary>获取在用户界面中用于此输出组的名称。</summary>
      <returns>用户界面中用于此输出组的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.DocComment">
      <summary>获取或设置当前代码模型元素的文档注释。</summary>
      <returns>当前代码模型元素的文档注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取父对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.Extender(System.String)">
      <summary>如果请求的扩展程序对象可用于此对象，则获取该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.File">
      <summary>获取在其中定义此对象的文件。</summary>
      <returns>在其中定义此对象的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.FunctionKind">
      <summary>获取一个描述函数使用方法的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMFunction" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.InfoLocation">
      <summary>获取代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.IsCaseSensitive">
      <summary>获取一个值，该值指示代码元素是否区分大小写。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可以获取 <see cref="T:EnvDTE.CodeType" /> 对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.IsConstant">
      <summary>获取或设置一个值，该值指示该项是否为常数。</summary>
      <returns>如果该项是常数，则为 true，否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.IsInjected">
      <summary>获取一个值，该值指示是否已通过特性或宏展开插入某个代码元素。</summary>
      <returns>如果已通过特性或宏展开插入某个代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.IsInline">
      <summary>获取或设置函数对象的内联属性。</summary>
      <returns>如果该函数定义为内联，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.IsOverloaded">
      <summary>获取一个值，该值指示函数是否已重载。</summary>
      <returns>如果函数已重载，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.IsReadOnly">
      <summary>获取一个值，该值指示包含该父对象的文件是否为只读文件。</summary>
      <returns>如果包含父对象的文件是只读文件，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.IsSealed">
      <summary>设置或获取函数上的 IsSealed 关键字。</summary>
      <returns>确定包含父对象的文件是否是只读文件</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与父代码元素相同。</summary>
      <returns>如果指定的代码元素与父代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 将与指定的代码元素进行比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.IsShared">
      <summary>获取或设置一个值，该值指示该项是否是静态定义的，即：该项是对此对象类型的所有实例通用，还是只对此对象可用。</summary>
      <returns>如果该方法是共享方法，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.IsTemplate">
      <summary>获取一个值，该值指示父对象是否为模板。</summary>
      <returns>如果父对象为模板，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.IsVirtual">
      <summary>获取或设置一个值，该值指示父对象是否为虚拟对象。</summary>
      <returns>如果父对象为虚拟对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.IsZombie">
      <summary>获取一个值，该值指示该对象是否存在。</summary>
      <returns>如果该对象不存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.Kind">
      <summary>获取一个指示对象类型的枚举值。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象声明的位置。</summary>
      <returns>对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.MustImplement">
      <summary>获取或设置该项是否被声明为抽象项而需要实现。</summary>
      <returns>如果方法声明为抽象方法，需要实现，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.Namespace">
      <summary>获取一个定义命名空间的对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeNamespace" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.Overloads">
      <summary>获取此项的重载方法集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.Parameters">
      <summary>获取此项的参数集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>父对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.Project">
      <summary>获取与对象关联的 <see cref="T:EnvDTE.Project" />。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.Prototype(System.Int32)">
      <summary>获取一个字符串，该字符串包含此对象的存根 (stub) 定义。</summary>
      <returns>一个描述该元素的字符串。</returns>
      <param name="Flags">可选。 一个 <see cref="T:EnvDTE.vsCMPrototype" /> 值，该值指示字符串内容应是什么，例如仅参数名、参数类型和完整的唯一签名等。 默认情况下，所有标志都设置为 Off。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.References">
      <summary>目前尚未实现。</summary>
      <returns>一个空的 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.RemoveParameter(System.Object)">
      <summary>从参数列表中移除参数。</summary>
      <param name="Element">必选。 一个 <see cref="T:EnvDTE.CodeElement" /> 对象，或它在集合中的名称。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.RemoveTemplateParameter(System.Object)">
      <summary>从模板定义中移除参数。</summary>
      <param name="Element">要移除的参数。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取父对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.TemplateParameters">
      <summary>获取类模板中包含的参数的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.Templatizations">
      <summary>仅由 Microsoft 内部使用。</summary>
      <returns>表示源文件中代码构造的对象集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.Type">
      <summary>获取或设置表示编程类型的对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeTypeRef" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeFunction.TypeString">
      <summary>获取或设置以类型的字符串表示形式表示的对象类型。</summary>
      <returns>以类型的字符串表示形式表示的对象类型。</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass">
      <summary>一个在 .idl 文件中定义 CoClass 元素的对象。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.AddAttribute(System.String,System.String,System.Object)">
      <summary>创建新的特性代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeAttribute" /> 对象。</returns>
      <param name="Name">必选。 新特性的名称。</param>
      <param name="Value">必选。 特性的值，该值可以是参数化属性的逗号分隔参数列表。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.AddAttribute(System.String,System.String,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.Attributes">
      <summary>获取对象的所有特性的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.BodyText">
      <summary>获取或设置对象的正文。</summary>
      <returns>对象的正文。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与代码元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.DeclarationText">
      <summary>获取或设置对象的声明。</summary>
      <returns>对象的声明。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.DisplayName">
      <summary>获取对象的全名。</summary>
      <returns>对象的全名。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取父对象的终点。</summary>
      <returns>文本文档中的文本位置。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.Extender(System.String)">
      <summary>如果请求的扩展程序对象可用于此对象，则获取该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.File">
      <summary>获取在其中声明该对象的文件。</summary>
      <returns>在其中声明该对象的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.InfoLocation">
      <summary>获取代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.IsCaseSensitive">
      <summary>获取一个值，该值指示代码元素是否区分大小写。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可获取 <see cref="T:EnvDTE.CodeType" /> 对象，则返回 true；否则返回 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.IsInjected">
      <summary>获取一个值，该值指示是否已通过特性或宏展开插入某个代码元素。</summary>
      <returns>如果已通过特性或宏展开插入某个代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.IsReadOnly">
      <summary>获取一个值，该值指示包含该对象的文件是否为只读文件。</summary>
      <returns>如果包含该对象的文件是只读文件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与另一个代码元素相同。</summary>
      <returns>如果指定的代码元素与另一个代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 被比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.IsZombie">
      <summary>获取一个值，该值指示父对象是否存在。</summary>
      <returns>如果该对象不再存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象声明的位置。</summary>
      <returns>对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.Parent">
      <summary>获取 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass" /> 对象的直接父对象。</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass" /> 对象的直接父对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.Project">
      <summary>获取与对象关联的 <see cref="T:EnvDTE.Project" />。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport">
      <summary>一个定义 .idl 文件中导入元素的对象。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与代码元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.DisplayName">
      <summary>获取在用户界面中用于此输出组的名称。</summary>
      <returns>用户界面中用于此输出组的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取父对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
      <param name="Where">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.Extender(System.String)">
      <summary>如果请求的扩展程序对象可用于此对象，则获取该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.File">
      <summary>获取在其中定义此对象的文件。</summary>
      <returns>在其中定义此对象的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.InfoLocation">
      <summary>获取代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.IsCaseSensitive">
      <summary>获取一个值，该值指示代码元素是否区分大小写。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可以获取 <see cref="T:EnvDTE.CodeType" /> 对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.IsInjected">
      <summary>获取一个值，该值指示是否已通过特性或宏展开插入某个代码元素。</summary>
      <returns>如果已通过特性或宏展开插入某个代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.IsReadOnly">
      <summary>获取一个值，该值指示包含该对象的文件是否为只读文件。</summary>
      <returns>如果包含该对象的文件是只读文件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与另一个代码元素相同。</summary>
      <returns>如果指定的代码元素与另一个代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 被比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.IsZombie">
      <summary>获取一个值，该值指示该父对象是否存在。</summary>
      <returns>如果该对象不存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象声明的位置。</summary>
      <returns>对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.Parent">
      <summary>获取给定对象的直接对象。</summary>
      <returns>父对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.Project">
      <summary>获取与该对象关联的 <see cref="T:EnvDTE.Project" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.Project" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取父对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib">
      <summary>一个定义 .idl 文件中 importlib 元素的对象。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与代码元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.DisplayName">
      <summary>获取在用户界面中用于此输出组的名称。</summary>
      <returns>用户界面中用于此输出组的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取父对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.Extender(System.String)">
      <summary>如果请求的扩展程序对象可用于此对象，则获取该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.File">
      <summary>获取在其中声明该对象的文件。</summary>
      <returns>在其中声明该对象的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.InfoLocation">
      <summary>获取代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.IsCaseSensitive">
      <summary>获取一个值，该值指示代码元素是否区分大小写。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可以获取 <see cref="T:EnvDTE.CodeType" /> 对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.IsInjected">
      <summary>获取一个值，该值指示是否已通过特性或宏展开插入某个代码元素。</summary>
      <returns>如果已通过特性或宏展开插入某个代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.IsReadOnly">
      <summary>获取一个值，该值指示包含该对象的文件是否为只读文件。</summary>
      <returns>如果包含该对象的文件是只读文件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与另一个代码元素相同。</summary>
      <returns>如果指定的代码元素与另一个代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 被比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.IsZombie">
      <summary>获取一个值，该值指示该对象是否存在。</summary>
      <returns>如果该对象不存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象声明的位置。</summary>
      <returns>对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.Project">
      <summary>获取与该对象关联的 <see cref="T:EnvDTE.Project" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" />。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取父对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary">
      <summary>在 .idl 文件中定义库元素的对象。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.AddAttribute(System.String,System.String,System.Object)">
      <summary>创建新的特性代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeAttribute" /> 对象。</returns>
      <param name="Name">必选。 新特性的名称。</param>
      <param name="Value">必选。 特性的值，该值可以是参数化属性的逗号分隔参数列表。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.AddAttribute(System.String,System.String,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.AddEnum(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的枚举代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeEnum" /> 对象。</returns>
      <param name="Name">必选。 要添加的枚举的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.AddEnum(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">可选。 默认为 Nothing。 一个保存 SafeArray 的变量，该 SafeArray 包含用于指定新建枚举的基础类型的完全限定类型名或 <see cref="T:EnvDTE.CodeType" /> 对象。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.AddFunction(System.String,EnvDTE.vsCMFunction,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的函数代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeFunction" /> 对象。</returns>
      <param name="Name">必选。 新函数的名称。</param>
      <param name="Kind">必选。 用于指示函数类型（例如，函数是 property-get、方法还是其他类型）的 <see cref="T:EnvDTE.vsCMFunction" /> 常数。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.AddFunction(System.String,EnvDTE.vsCMFunction,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.AddIDLCoClass(System.String,System.Object)">
      <summary>将新的 CoClass 语句添加到对象的 .idl 文件。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLCoClass" /> 对象。</returns>
      <param name="Name">必选。 指定由 <see cref="P:Microsoft.VisualStudio.VsWizard.IControl.CoClass" /> 语句表示的组件对象的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.AddIDLImportLib(System.String,System.Object)">
      <summary>将新的 importlib 语句添加到对象的 .idl 文件。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImportLib" /> 对象。</returns>
      <param name="Name">必选。 指定要由 importlib 语句导入的库的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.AddInterface(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的接口代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeInterface" /> 对象。</returns>
      <param name="Name">必选。 新接口的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.AddInterface(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">可选。 默认值为 Nothing。 一个保存 SafeArray 的变量，该 SafeArray 包含完全限定类型名或新接口派生自的 <see cref="T:EnvDTE.CodeInterface" /> 对象。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.AddStruct(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的结构代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeStruct" /> 对象。</returns>
      <param name="Name">必选。 新结构的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.AddStruct(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">必选。 默认值为 Nothing 或 null。 一个保存 SafeArray 的变量，该 SafeArray 包含完全限定类型名或新接口派生自的 <see cref="T:EnvDTE.CodeInterface" /> 对象。</param>
      <param name="ImplementedInterfaces">必选。 默认值为 Nothing。 一个包含完全限定类型名或 <see cref="T:EnvDTE.CodeInterface" /> 对象（每个对象都表示新类承诺实现的接口）的 SafeArray。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.AddTypedef(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>将 typedef 语句添加到父对象中。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef" /> 对象。</returns>
      <param name="Name">必选。 指定别名的名称。</param>
      <param name="Type">必选。 别名的类型。</param>
      <param name="Position">必选。 默认值 = -1。 将在其后添加事件元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.AddUnion(System.String,System.Object,EnvDTE.vsCMAccess)">
      <summary>将 union 语句添加到该对象中。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion" /> 对象。</returns>
      <param name="Name">必选。 指定联合的名称。</param>
      <param name="Position">必选。 默认值 = -1。 将在其后添加事件元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.AddVariable(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的变量代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeVariable" /> 对象。</returns>
      <param name="Name">必选。 新变量的名称。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.AddVariable(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.Attributes">
      <summary>获取对象的所有特性的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.BodyText">
      <summary>获取或设置对象的正文。</summary>
      <returns>对象的正文。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与代码元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.DeclarationText">
      <summary>获取或设置对象的声明。</summary>
      <returns>对象的声明。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.DisplayName">
      <summary>获取在用户界面中用于此输出组的名称。</summary>
      <returns>用户界面中用于此输出组的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取父对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.Enums">
      <summary>获取对象的枚举集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.Extender(System.String)">
      <summary>如果请求的扩展程序对象可用于此对象，则获取该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.File">
      <summary>获取在其中定义此对象的文件。</summary>
      <returns>在其中定义此对象的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.Functions">
      <summary>获取对象的函数集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.IDLCoClasses">
      <summary>从父对象的 .idl 文件获取 CoClass 语句的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.IDLImportLibs">
      <summary>从父对象的 .idl 文件获取 importlib 语句的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.InfoLocation">
      <summary>描述代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.Interfaces">
      <summary>获取父对象的接口的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.IsCaseSensitive">
      <summary>获取一个值，该值指示代码元素是否区分大小写。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可以获取 <see cref="T:EnvDTE.CodeType" /> 对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.IsInjected">
      <summary>获取一个值，该值指示是否已通过特性或宏展开插入某个代码元素。</summary>
      <returns>如果已通过特性或宏展开插入某个代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.IsReadOnly">
      <summary>获取一个值，该值指示包含该对象的文件是否为只读文件。</summary>
      <returns>如果包含该对象的文件是只读文件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与另一个代码元素相同。</summary>
      <returns>如果指定的代码元素与另一个代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 被比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.IsZombie">
      <summary>获取一个值，该值指示该对象是否不再存在。</summary>
      <returns>如果该对象不再存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象声明的位置。</summary>
      <returns>对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.Members">
      <summary>获取此元素包含的项的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>直接父对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.Project">
      <summary>获取与该对象关联的 <see cref="T:EnvDTE.Project" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.Structs">
      <summary>获取对象的结构元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.Typedefs">
      <summary>获取对象的 typedef 元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.Unions">
      <summary>获取对象的 Union 元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.ValidateMember(System.String,EnvDTE.vsCMElement,System.String)">
      <summary>验证所建议的名称是否是对象上下文中给定类型的有效 C++ 名称。</summary>
      <returns>如果名称是有效的 C++ 名称，则为 true；否则为 false。</returns>
      <param name="bstrName">必选。 所验证的对象的名称。</param>
      <param name="Kind">必选。 一个 <see cref="T:EnvDTE.vsCMElement" /> 值，表示要验证的对象的类型。</param>
      <param name="bstrType">可选。 所验证的对象的类型。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.ValidateMemberName(System.String,EnvDTE.vsCMElement,Microsoft.VisualStudio.VCCodeModel.vcCMNameValidationOption)">
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary.Variables">
      <summary>获取对象的变量集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeImport">
      <summary>表示解决方案源代码中 #import 代码元素的对象。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与代码元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.DisplayName">
      <summary>获取对象的全名。</summary>
      <returns>对象的全名。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.Extender(System.String)">
      <summary>如果请求的扩展程序对象可用于此对象，则获取该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.File">
      <summary>获取在其中定义此对象的文件。</summary>
      <returns>在其中定义此对象的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.InfoLocation">
      <summary>获取代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.IsCaseSensitive">
      <summary>获取一个值，该值指示代码元素是否区分大小写。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可以获取 <see cref="T:EnvDTE.CodeType" /> 对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.IsInjected">
      <summary>获取一个值，该值指示是否已通过特性或宏展开插入某个代码元素。</summary>
      <returns>如果已通过特性或宏展开插入某个代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.IsReadOnly">
      <summary>获取一个值，该值指示包含该对象的文件是否为只读文件。</summary>
      <returns>如果包含该对象的文件是只读文件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.IsSelf(System.Object)">
      <summary>获取一个值，该值指示指定代码元素是否与另一代码元素相同。</summary>
      <returns>如果指定的代码元素与另一个代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 被比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.IsZombie">
      <summary>获取一个值，该值指示该对象是否不再存在。</summary>
      <returns>如果该对象不再存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象声明的位置。</summary>
      <returns>对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>直接父对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.Project">
      <summary>获取与该对象关联的 <see cref="T:EnvDTE.Project" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" />。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeImport.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude">
      <summary>表示解决方案源代码中 #include 代码元素的对象。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与代码元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.DisplayName">
      <summary>获取对象的全名。</summary>
      <returns>对象的全名。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.Extender(System.String)">
      <summary>如果请求的扩展程序对象可用于此对象，则获取该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.File">
      <summary>获取在其中定义此对象的文件。</summary>
      <returns>在其中定义此对象的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.InfoLocation">
      <summary>获取代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.IsCaseSensitive">
      <summary>获取一个值，该值指示代码元素是否区分大小写。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可以获取 <see cref="T:EnvDTE.CodeType" /> 对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.IsInjected">
      <summary>获取一个值，该值指示是否已通过特性或宏展开插入某个代码元素。</summary>
      <returns>如果已通过特性或宏展开插入某个代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.IsReadOnly">
      <summary>获取一个值，该值指示包含该对象的文件是否为只读文件。</summary>
      <returns>如果包含该对象的文件是只读文件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与另一个代码元素相同。</summary>
      <returns>如果指定的代码元素与另一个代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 被比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.IsZombie">
      <summary>获取一个值，该值指示该对象是否存在。</summary>
      <returns>如果该对象不再存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象声明的位置。</summary>
      <returns>对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>直接父对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.Project">
      <summary>获取与该对象关联的 <see cref="T:EnvDTE.Project" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface">
      <summary>一个对象，表示解决方案源代码中的标准 .idl 接口、dispinterface 代码元素或用 __interface 关键字修改的代码元素。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.Access">
      <summary>获取或设置此项的访问特性。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.AddAttribute(System.String,System.String,System.Object)">
      <summary>创建新的特性代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeAttribute" /> 对象。</returns>
      <param name="Name">必选。 新特性的名称。</param>
      <param name="Value">必选。 特性的值，该值可以是参数化属性的逗号分隔参数列表。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.AddAttribute(System.String,System.String,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.AddBase(System.Object,System.Object)">
      <summary>将某项添加到继承对象的列表中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElement" /> 对象。</returns>
      <param name="Base">必选。 从中派生实现的类。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.AddBase(System.Object,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.AddFunction(System.String,EnvDTE.vsCMFunction,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的函数代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeFunction" /> 对象。</returns>
      <param name="Name">必选。 新函数的名称。</param>
      <param name="Kind">必选。 用于指示函数类型（例如，函数是 property-get、方法还是其他类型）的 <see cref="T:EnvDTE.vsCMFunction" /> 常数。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.AddFunction(System.String,EnvDTE.vsCMFunction,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.AddProperty(System.String,System.String,System.Object,System.Object,EnvDTE.vsCMAccess,System.Object)">
      <summary>创建新的属性代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeProperty" /> 对象。</returns>
      <param name="GetterName">必选。 获取属性值的函数名。</param>
      <param name="PutterName">必选。 设置该属性的函数名。</param>
      <param name="Type">必选。 属性的类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 值或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.AddProperty(System.String,System.String,System.Object,System.Object,EnvDTE.vsCMAccess,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 访问。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数值。</param>
      <param name="Location">可选。 位置。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.AddVariable(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的变量代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeVariable" /> 对象。</returns>
      <param name="Name">必选。 新变量的名称。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.AddVariable(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.Attributes">
      <summary>获取对象的所有特性的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.Bases">
      <summary>获取该项派生自的类的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.BodyText">
      <summary>获取或设置对象的正文。</summary>
      <returns>对象的正文。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与代码元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.DeclarationText">
      <summary>获取或设置对象的声明。</summary>
      <returns>对象的声明。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.DerivedTypes">
      <summary>获取从该对象派生的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.DisplayName">
      <summary>获取对象的全名。</summary>
      <returns>对象的全名。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.DocComment">
      <summary>获取或设置当前代码模型元素的文档注释。</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface" /> 的文档注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.Extender(System.String)">
      <summary>如果请求的扩展程序对象可用于此对象，则获取该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序对象的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.File">
      <summary>获取在其中声明该对象的文件。</summary>
      <returns>在其中声明该对象的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.Functions">
      <summary>获取对象的函数集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.InfoLocation">
      <summary>获取代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.IsCaseSensitive">
      <summary>获取一个值，该值指示当前语言是否区分大小写。</summary>
      <returns>如果当前语言区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可获取 <see cref="T:EnvDTE.CodeType" /> 对象，则返回 true；否则返回 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.IsDerivedFrom(System.String)">
      <summary>获取一个值，该值指示一个对象是否以另一个对象作为基。</summary>
      <returns>如果对象有另一个对象作为其基对象，则为 true；否则为 false。</returns>
      <param name="FullName">必选。 要在此类型的沿袭中搜索的类型。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.IsInjected">
      <summary>获取一个值，该值指示是否已通过特性或宏展开插入某个代码元素。</summary>
      <returns>如果已通过特性或宏展开插入某个代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.IsManaged">
      <summary>获取或设置一个值，指示对象是否为托管对象。</summary>
      <returns>如果对象为托管对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.IsReadOnly">
      <summary>获取一个值，该值指示包含该对象的文件是否为只读文件。</summary>
      <returns>如果包含该对象的文件是只读文件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与另一个代码元素相同。</summary>
      <returns>如果指定的代码元素与另一个代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 被比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.IsZombie">
      <summary>获取一个值，该值指示该对象是否不再存在。</summary>
      <returns>如果该对象不再存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象声明的位置。</summary>
      <returns>对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.Members">
      <summary>获取此元素包含的项的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.Namespace">
      <summary>获取一个定义命名空间的对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeNamespace" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>直接父对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.Project">
      <summary>获取与该对象关联的 <see cref="T:EnvDTE.Project" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.References">
      <summary>目前尚未实现。</summary>
      <returns>一个空的 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.RemoveBase(System.Object)">
      <summary>从基列表中移除一个对象。</summary>
      <param name="Element">必选。 一个 <see cref="T:EnvDTE.CodeElement" />，或它在集合中的名称。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.RemoveMember(System.Object)">
      <summary>移除成员代码构造。</summary>
      <param name="Element">必选。 一个 <see cref="T:EnvDTE.CodeElement" /> 对象，或它在集合中的名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.ValidateMember(System.String,EnvDTE.vsCMElement,System.String)">
      <summary>验证所建议的名称是否是父对象上下文中给定类型的有效 C++ 名称。</summary>
      <returns>如果该名称有效，则为 true；否则为 false。</returns>
      <param name="bstrName">必选。 所验证的对象的名称。</param>
      <param name="Kind">必选。 一个 <see cref="T:EnvDTE.vsCMElement" /> 值，表示要验证的对象的类型。</param>
      <param name="bstrType">可选。 所验证的对象的类型。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.ValidateMemberName(System.String,EnvDTE.vsCMElement,Microsoft.VisualStudio.VCCodeModel.vcCMNameValidationOption)">
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeInterface.Variables">
      <summary>获取对象的变量集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro">
      <summary>表示解决方案源代码中宏（#define 语句）代码元素的对象。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.AddParameter(System.String,System.Object)">
      <summary>创建新的参数代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeParameter" /> 对象。</returns>
      <param name="Name">必选。 参数名。 可选。 默认值 = 0。 将在其后添加事件元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.AddParameter(System.String,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" />。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与代码元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.DisplayName">
      <summary>获取对象的全名。</summary>
      <returns>对象的全名。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.Extender(System.String)">
      <summary>如果请求的扩展程序对象可用于此对象，则获取该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.File">
      <summary>获取在其中定义此对象的文件。</summary>
      <returns>在其中定义此对象的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.InfoLocation">
      <summary>获取代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.IsCaseSensitive">
      <summary>获取一个值，该值指示代码元素是否区分大小写。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可以获取 <see cref="T:EnvDTE.CodeType" /> 对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.IsInjected">
      <summary>获取一个值，该值指示是否已通过特性或宏展开插入某个代码元素。</summary>
      <returns>如果已通过特性或宏展开插入某个代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.IsReadOnly">
      <summary>获取一个值，该值指示包含该对象的文件是否为只读文件。</summary>
      <returns>如果包含该对象的文件是只读文件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与另一个代码元素相同。</summary>
      <returns>如果指定的代码元素与另一个代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 被比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.IsZombie">
      <summary>获取一个值，该值指示该对象是否存在。</summary>
      <returns>如果该对象不存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象声明的位置。</summary>
      <returns>对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.Parameters">
      <summary>获取此项的参数集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>直接父对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.Project">
      <summary>获取与对象关联的 <see cref="T:EnvDTE.Project" />。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.References">
      <summary>目前尚未实现。</summary>
      <returns>一个空的 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.RemoveParameter(System.Object)">
      <summary>从参数列表中移除参数。</summary>
      <param name="Element">必选。 一个 <see cref="T:EnvDTE.CodeElement" /> 对象，或它在集合中的名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro.Value">
      <summary>获取或设置该对象的数据。</summary>
      <returns>对象的数据。</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeMap">
      <summary>表示解决方案源代码中映射代码元素的对象。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.AddEntry(System.String,System.Object)">
      <summary>将映射项插入到由 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeMap" /> 对象表示的映射代码元素。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry" /> 对象。</returns>
      <param name="Name">必选。 映射项的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加事件元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.BodyText">
      <summary>获取或设置对象的正文。</summary>
      <returns>对象的正文。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与代码元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.DisplayName">
      <summary>获取对象的全名。</summary>
      <returns>对象的全名。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.Entries">
      <summary>获取 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeMap" /> 对象的项。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.Extender(System.String)">
      <summary>如果请求的扩展程序对象可用于此对象，则获取该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.File">
      <summary>获取在其中定义此对象的文件。</summary>
      <returns>在其中定义此对象的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.InfoLocation">
      <summary>获取代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.IsCaseSensitive">
      <summary>获取一个值，该值指示代码元素是否区分大小写。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可以获取 <see cref="T:EnvDTE.CodeType" /> 对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.IsInjected">
      <summary>获取一个值，该值指示是否已通过特性或宏展开插入某个代码元素。</summary>
      <returns>如果已通过特性或宏展开插入某个代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.IsReadOnly">
      <summary>获取一个值，该值指示包含该对象的文件是否为只读文件。</summary>
      <returns>如果包含该对象的文件是只读文件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与另一个代码元素相同。</summary>
      <returns>如果指定的代码元素与另一个代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 被比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.IsZombie">
      <summary>获取一个值，该值指示该对象是否存在。</summary>
      <returns>如果该对象不再存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象声明的位置。</summary>
      <returns>对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.Namespace">
      <summary>获取一个定义命名空间的对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeNamespace" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.Parameters">
      <summary>获取此项的参数集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>直接父对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.Project">
      <summary>获取与对象关联的 <see cref="T:EnvDTE.Project" />。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.RemoveEntry(System.Object)">
      <summary>从由 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeMap" /> 对象表示的映射代码元素中移除指定映射项。</summary>
      <param name="Element">必选。 要移除的映射项。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMap.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry">
      <summary>用于定义源文件中映射条目构造的对象。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.AddParameter(System.String,System.Object)">
      <summary>创建新的参数代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeParameter" /> 对象。</returns>
      <param name="Value">必选。 参数名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加事件元素的代码元素。 如果该值为 CodeElement，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与代码元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.DisplayName">
      <summary>获取在用户界面中用于此输出组的名称。</summary>
      <returns>用户界面中用于此输出组的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.Extender(System.String)">
      <summary>如果请求的扩展程序对象可用于此对象，则获取该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.File">
      <summary>获取在其中定义此对象的文件。</summary>
      <returns>在其中定义此对象的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.InfoLocation">
      <summary>获取代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.IsCaseSensitive">
      <summary>获取一个值，该值指示代码元素是否区分大小写。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可以获取 <see cref="T:EnvDTE.CodeType" /> 对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.IsInjected">
      <summary>获取一个值，该值指示是否已通过特性或宏展开插入某个代码元素。</summary>
      <returns>如果已通过特性或宏展开插入某个代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.IsReadOnly">
      <summary>获取一个值，该值指示包含该对象的文件是否为只读文件。</summary>
      <returns>如果包含该对象的文件是只读文件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与另一个代码元素相同。</summary>
      <returns>如果指定的代码元素与另一个代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 被比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.IsZombie">
      <summary>获取一个值，该值指示该对象是否不再存在。</summary>
      <returns>如果该对象不再存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象声明的位置。</summary>
      <returns>对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.Namespace">
      <summary>获取一个定义命名空间的对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeNamespace" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.Parameters">
      <summary>获取此项的参数集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeMap" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.Project">
      <summary>获取与该对象关联的 <see cref="T:EnvDTE.Project" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.RemoveParameter(System.Object)">
      <summary>从参数列表中移除参数。</summary>
      <param name="Element">必选。 一个 <see cref="T:EnvDTE.CodeElement" /> 对象，或它在集合中的名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeMapEntry.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel">
      <summary>一个对象，用于提供对包含的任何代码元素的项目级别访问。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AbortTransaction">
      <summary>取消当前事务。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddAttribute(System.String,System.Object,System.String,System.Object)">
      <summary>创建新的特性代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeAttribute" /> 对象。</returns>
      <param name="Name">必选。 新特性的名称。</param>
      <param name="Location">必选。 新属性的路径和文件名。 根据语言的不同，文件名是项目文件的相对名称或绝对名称。 如果该文件还不是项目项，则将该文件添加到项目中。 如果无法创建该文件并将其添加到项目中，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddAttribute(System.String,System.Object,System.String,System.Object)" /> 失败。</param>
      <param name="Value">必选。 特性的值，该值可以是参数化属性的逗号分隔参数列表。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddAttribute(System.String,System.Object,System.String,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddClass(System.String,System.Object,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的类代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeClass" /> 对象。</returns>
      <param name="Name">必选。 类的名称。</param>
      <param name="Location">必选。 新类定义的路径和文件名。 根据语言的不同，文件名是项目文件的相对名称或绝对名称。 如果该文件还不是项目项，则将该文件添加到项目中。 如果无法创建该文件并将其添加到项目中，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddClass(System.String,System.Object,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 失败。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddClass(System.String,System.Object,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">必选。 默认值 = 0。 一个包含完全限定类型名或 <see cref="T:EnvDTE.CodeClass" /> 对象（新类将从这些对象继承自己的实现）的 SafeArray。</param>
      <param name="ImplementedInterfaces">必选。 默认值 = 0。 一个包含完全限定类型名或 <see cref="T:EnvDTE.CodeInterface" /> 对象（每个对象都表示新类承诺实现的接口）的 SafeArray。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddDelegate(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的委托代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeDelegate" /> 对象。</returns>
      <param name="Name">必选。 要添加的委托的名称。</param>
      <param name="Location">必选。 新委托定义的路径和文件名。 根据语言的不同，文件名是项目文件的相对名称或绝对名称。 如果该文件还不是项目项，则将该文件添加到项目中。 如果无法创建该文件并将其添加到项目中，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddDelegate(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 失败。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 该值可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddDelegate(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddEnum(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的枚举代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeEnum" /> 对象。</returns>
      <param name="Name">必选。 要添加的枚举的名称。</param>
      <param name="Location">必选。 新枚举定义的路径和文件名。 根据语言的不同，文件名是项目文件的相对名称或绝对名称。 如果该文件还不是项目项，则将该文件添加到项目中。 如果无法创建该文件并将其添加到项目中，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddEnum(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 失败。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddEnum(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">可选。 默认为 Nothing。 一个保存 SafeArray 的变量，该 SafeArray 包含用于指定新建枚举的基础类型的完全限定类型名或 <see cref="T:EnvDTE.CodeType" /> 对象。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddFunction(System.String,System.Object,EnvDTE.vsCMFunction,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的函数代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeFunction" /> 对象。</returns>
      <param name="Name">必选。 新函数的名称。</param>
      <param name="Location">必选。 新函数定义的路径和文件名。 根据语言的不同，文件名是项目文件的相对名称或绝对名称。 如果该文件还不是项目项，则将该文件添加到项目中。 如果无法创建该文件并将其添加到项目中，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddFunction(System.String,System.Object,EnvDTE.vsCMFunction,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 失败。</param>
      <param name="Kind">必选。 用于指示函数类型（例如，函数是 property-get、方法还是其他类型）的 <see cref="T:EnvDTE.vsCMFunction" /> 常数。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddFunction(System.String,System.Object,EnvDTE.vsCMFunction,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddIDLImport(System.String,System.Object,System.Object)">
      <summary>将新的 import 语句添加到特定 .idl 文件。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport" /> 对象。</returns>
      <param name="Name">必选。 指定要导入的头文件、IDL 文件或 ODL 文件的名称（放在引号中）。</param>
      <param name="Location">必选。 要修改的 .idl 文件的路径或文件名。 如果文件不存在，则自动创建该文件。 如果该文件还不是项目项，则将该文件添加到项目中。 如果无法创建该文件并将其添加到项目中，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddIDLImport(System.String,System.Object,System.Object)" /> 失败。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddIDLLibrary(System.String,System.Object,System.Object)">
      <summary>将新的 library 语句添加到特定 .idl 文件。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary" /> 对象。</returns>
      <param name="Name">必选。 指定新库的名称。</param>
      <param name="Location">必选。 要修改的 .idl 文件的路径或文件名。 如果文件不存在，则自动创建该文件。 如果该文件还不是项目项，则将该文件添加到项目中。 如果无法创建该文件并将其添加到项目中，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddIDLLibrary(System.String,System.Object,System.Object)" /> 失败。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddImport(System.String,System.Object,System.Object,System.String)">
      <summary>将一个 #import 元素添加到特定文件。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeImport" /> 对象。</returns>
      <param name="Name">必选。 指定要导入的类型库的名称（放在引号中或尖括号 &lt;&gt; 之间）。</param>
      <param name="Location">必选。 要修改的文件的路径或文件名。 如果文件不存在，则自动创建该文件。 如果该文件还不是项目项，则将该文件添加到项目中。 如果无法创建该文件并将其添加到项目中，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddImport(System.String,System.Object,System.Object,System.String)" /> 失败。</param>
      <param name="Position">必选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Attributes">可选。 一个或多个 #import 特性。 有关完整列表的信息，请参见 #import Directive 的 #import Attributes 部分。 用空格或逗号分隔每个特性。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddInclude(System.String,System.Object,System.Object)">
      <summary>将一个 #include 元素添加到特定文件。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude" /> 对象。</returns>
      <param name="Name">必选。 指定要包括的文件的名称（放在引号或尖括号中）。</param>
      <param name="Location">必选。 要修改的文件的路径或文件名。 如果文件不存在，则自动创建该文件。 如果该文件还不是项目项，则将该文件添加到项目中。 如果无法创建该文件并将其添加到项目中，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddInclude(System.String,System.Object,System.Object)" /> 失败。</param>
      <param name="Position">必选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddInterface(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的接口代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeInterface" /> 对象。</returns>
      <param name="Name">必选。 要添加的接口的名称。</param>
      <param name="Location">必选。 新接口定义的路径和文件名。 根据语言的不同，文件名是项目文件的相对名称或绝对名称。 如果该文件还不是项目项，则将该文件添加到项目中。 如果无法创建该文件并将其添加到项目中，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddInterface(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 失败。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddInterface(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">可选。 默认值为 Nothing 或 null。 一个保存 SafeArray 的变量，该 SafeArray 包含完全限定类型名或新接口派生自的 <see cref="T:EnvDTE.CodeInterface" /> 对象。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddMacro(System.String,System.Object,System.String,System.Object)">
      <summary>将一个 #define 元素添加到特定文件。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro" /> 对象。</returns>
      <param name="Name">必选。 指定宏的名称。</param>
      <param name="Location">必选。 要修改的文件的路径或文件名。 如果文件不存在，则自动创建该文件。 如果该文件还不是项目项，则将该文件添加到项目中。 如果无法创建该文件并将其添加到项目中，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddMacro(System.String,System.Object,System.String,System.Object)" /> 失败。</param>
      <param name="Value">可选。 宏的定义文本。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddMap(System.String,System.Object,System.String,System.Object)">
      <summary>将映射项添加到对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeMap" /> 对象。</returns>
      <param name="Name">必选。 指定映射项的名称。</param>
      <param name="Location">可选。 位置。</param>
      <param name="ParameterText">可选。 传递到映射对象的参数。</param>
      <param name="Position">可选。 默认值 = -1。 将在其后添加事件元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddNamespace(System.String,System.Object,System.Object)">
      <summary>创建新的命名空间代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeNamespace" /> 对象。</returns>
      <param name="Name">必选。 新命名空间的名称。</param>
      <param name="Location">必选。 新命名空间定义的路径和文件名。 根据语言的不同，文件名是项目文件的相对名称或绝对名称。 如果该文件还不是项目项，则将该文件添加到项目中。 如果无法创建该文件并将其添加到项目中，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddNamespace(System.String,System.Object,System.Object)" /> 失败。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddNamespace(System.String,System.Object,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddStruct(System.String,System.Object,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的结构代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeStruct" /> 对象。</returns>
      <param name="Name">必选。 新结构的名称。</param>
      <param name="Location">必选。 新结构定义的路径和文件名。 根据语言的不同，文件名是项目文件的相对名称或绝对名称。 如果该文件还不是项目项，则将该文件添加到项目中。 如果无法创建该文件并将其添加到项目中，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddStruct(System.String,System.Object,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 失败。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddStruct(System.String,System.Object,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">必选。 默认值为 Nothing 或 null。 一个保存 SafeArray 的变量，该 SafeArray 包含完全限定类型名或新接口派生自的 <see cref="T:EnvDTE.CodeInterface" /> 对象。</param>
      <param name="ImplementedInterfaces">必选。 默认值为 Nothing 或 null。 一个包含完全限定类型名或 CodeInterface（表示新类承诺实现的接口）的 SafeArray。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddTypedef(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>将一个 typedef 元素添加到特定文件。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef" /> 对象。</returns>
      <param name="Name">必选。 类型声明的名称（或标识符）。</param>
      <param name="Location">必选。 要修改的文件的路径或文件名。 如果文件不存在，则自动创建该文件。 如果该文件还不是项目项，则将该文件添加到项目中。 如果无法创建该文件并将其添加到项目中，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddTypedef(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 失败。</param>
      <param name="Type">必选。 元素的类型。 可以是任何标准 C++ 类型。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 Visual C++ 代码模型并不使用。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddUnion(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>将 union 元素添加到 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象中。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion" /> 对象。</returns>
      <param name="Name">必选。 联合元素的名称（或标识符）。</param>
      <param name="Location">必选。 要修改的文件的路径或文件名。 如果文件不存在，则自动创建该文件。 如果该文件还不是项目项，则将该文件添加到项目中。 如果无法创建该文件并将其添加到项目中，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddUnion(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 失败。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 Visual C++ 代码模型并不使用。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddUsing(System.String,System.Object,System.Object)">
      <summary>将一个 #using 元素添加到特定文件。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing" /> 对象。</returns>
      <param name="Name">必选。 指定正在导入的程序集的名称。</param>
      <param name="Location">必选。 要修改的文件的路径或文件名。 如果文件不存在，则自动创建该文件。 如果该文件还不是项目项，则将该文件添加到项目中。 如果无法创建该文件并将其添加到项目中，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddUsing(System.String,System.Object,System.Object)" /> 失败。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddVariable(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的变量代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeVariable" /> 对象。</returns>
      <param name="Name">必选。 新变量的名称。</param>
      <param name="Location">可选。 新变量定义的路径和文件名。 根据语言的不同，文件名是项目文件的相对名称或绝对名称。 如果该文件还不是项目项，则将该文件添加到项目中。 如果无法创建该文件并将其添加到项目中，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddVariable(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 失败。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.AddVariable(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.Attributes">
      <summary>获取对象的所有特性的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.Classes">
      <summary>获取对象的类集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.CodeElementFromFullName(System.String)">
      <summary>获取对象的指定代码元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
      <param name="Name">必选。 要检索的元素的全名。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.CodeElementFromFullName2(System.String)">
      <summary>获取对象的指定代码元素的集合。 它与 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.CodeElementFromFullName(System.String)" /> 相同，但它在查找时忽略命名空间。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
      <param name="Name">必选。 要检索的元素的全名。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.CodeElements">
      <summary>获取代码元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.CodeTypeFromFullName(System.String)">
      <summary>基于完全限定名返回一个代码元素。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeType" /> 对象。</returns>
      <param name="Name">必选。 完全限定符号名称，如 Namespace1.Namespace2.Class1.Member1。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.CodeTypeFromFullName2(System.String)">
      <summary>基于完全限定名返回一个代码元素。 它与 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.CodeTypeFromFullName(System.String)" /> 相同，但它将尝试 typedef 解析。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeType" /> 对象。</returns>
      <param name="Name">必选。 完全限定符号名称，如 Namespace1.Namespace2.Class1.Member1。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.CommitTransaction">
      <summary>提交对象的当前事务。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.CreateCodeTypeRef(System.Object)">
      <summary>基于所传递的数据类型指示器的 <see cref="T:EnvDTE.CodeTypeRef" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeTypeRef" /> 对象。</returns>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.Delegates">
      <summary>获取对象的委托的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.DialogClasses(System.String)">
      <summary>获取对话类的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
      <param name="Filter">可选。 如果提供，这将仅返回其资源 ID 匹配 <paramref name="Filter" /> 的值的对话类。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.DotNetNameFromLanguageSpecific(System.String)">
      <summary>将命名空间转换为 .NET 形式。</summary>
      <returns>完全限定的 .NET 命名空间。</returns>
      <param name="LanguageName">要转换为完全限定 .NET 命名空间的语言名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.ElementFromID(System.String)">
      <summary>未实现。</summary>
      <returns>源文件中的代码元素或构造。</returns>
      <param name="ID">用于查找的输入 ID。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.Enums">
      <summary>获取对象的枚举集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.Functions">
      <summary>获取对象的函数集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.GetClassesDerivedFrom(System.String)">
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.IDLImports">
      <summary>从父对象的 .idl 文件获取 Import 语句的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.IDLLibraries">
      <summary>获取对象上 Library 元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.Imports">
      <summary>获取父对象的 #import 语句的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.Includes">
      <summary>获取对象的 #include 语句的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.Interfaces">
      <summary>获取对象的接口的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.IsCaseSensitive">
      <summary>获取一个值，该值指示代码元素是否区分大小写。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.IsSynchronized">
      <summary>确定 VCCodeModel 是否与解决方案的源代码同步。</summary>
      <returns>类型：<see cref="System.Boolean" /></returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.IsValidID(System.String)">
      <summary>返回某指定名称是否为当前语言的有效编程标识符。</summary>
      <returns>标识符有效时为 true；无效（如它是关键字）时为 false。</returns>
      <param name="Name">必选。 要检查的标识符的名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.LanguageSpecificNameFromDotNet(System.String)">
      <summary>从完全限定的名称转换为非托管命名空间形式。</summary>
      <returns>非托管命名空间。</returns>
      <param name="DotNETName">完全限定的命名空间名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.Macros">
      <summary>获取对象的宏（#define 语句）的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.Maps">
      <summary>获取对象的映射集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.Namespaces">
      <summary>获取对象的命名空间的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.Remove(System.Object)">
      <summary>从解决方案中移除指定的项目。</summary>
      <param name="Element">必选。 要从解决方案中移除的项目。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.RemoveEx(System.Object,System.Int32)">
      <summary>从解决方案中移除指定的项目。</summary>
      <param name="Element">必选。 要从解决方案中移除的项目。</param>
      <param name="Delete">如果要删除项目，则为 True；否则为 false。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.StartTransaction(System.String)">
      <summary>开始事务。</summary>
      <param name="bstrName">必选。 事务的名称。 此名称标识一旦事务完成时放置在撤消堆栈上的项。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.Structs">
      <summary>获取对象的结构元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.Synchronize">
      <summary>将解决方案中的所有代码模型对象与源文件的编辑结果进行同步。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.SynchronizeCancellable(System.String,System.String)">
      <summary>显示具有进度栏的对话框。 用户可取消等待并取消线程锁定。</summary>
      <param name="Caption">对话框的标题栏中的标题。</param>
      <param name="Message">对话框中的消息。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.SynchronizeFiles">
      <summary>确保项目文件上的 FileCodeModel 属性不为 null。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.Typedefs">
      <summary>获取对象的 Typedef 元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.Unions">
      <summary>获取对象的 Union 元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.Usings">
      <summary>获取对象的 #using 元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.ValidateMember(System.String,EnvDTE.vsCMElement,System.String)">
      <summary>验证所建议的名称是否是父对象上下文中给定类型的有效 C++ 名称。</summary>
      <returns>如果建议的名称是有效的 C++ 名称，则为 true；否则为 false。</returns>
      <param name="bstrName">必选。 所验证的对象的名称。</param>
      <param name="Kind">必选。 一个 <see cref="T:EnvDTE.vsCMElement" /> 值，表示要验证的对象的类型。</param>
      <param name="bstrType">可选。 所验证的对象的类型。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.ValidateMemberName(System.String,EnvDTE.vsCMElement,Microsoft.VisualStudio.VCCodeModel.vcCMNameValidationOption)">
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeModel.Variables">
      <summary>获取对象的变量集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace">
      <summary>表示解决方案源代码中命名空间元素的对象。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.AddClass(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的类代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeClass" /> 对象。</returns>
      <param name="Name">必选。 类的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.AddClass(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">可选。 默认值 = 0。 一个包含完全限定类型名或 <see cref="T:EnvDTE.CodeClass" /> 对象（新类将从这些对象继承自己的实现）的 SafeArray。</param>
      <param name="ImplementedInterfaces">可选。 默认值 = 0。 一个包含完全限定类型名或 <see cref="T:EnvDTE.CodeInterface" /> 对象（每个对象都表示新类承诺实现的接口）的 SafeArray。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.AddDelegate(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的委托代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeDelegate" /> 对象。</returns>
      <param name="Name">必选。 要添加的委托的名称。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.AddDelegate(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.AddEnum(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的枚举代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeEnum" /> 对象。</returns>
      <param name="Name">必选。 要添加的枚举的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.AddEnum(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">可选。 默认为 Nothing。 一个保存 SafeArray 的变量，该 SafeArray 包含用于指定新建枚举的基础类型的完全限定类型名或 <see cref="T:EnvDTE.CodeType" /> 对象。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.AddFunction(System.String,EnvDTE.vsCMFunction,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的函数代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeFunction" /> 对象。</returns>
      <param name="Name">必选。 新函数的名称。</param>
      <param name="Kind">必选。 用于指示函数类型（例如，函数是 property-get、方法还是其他类型）的 <see cref="T:EnvDTE.vsCMFunction" /> 常数。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.AddFunction(System.String,EnvDTE.vsCMFunction,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.AddInterface(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的接口代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeInterface" /> 对象。</returns>
      <param name="Name">必选。 新接口的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.AddInterface(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">可选。 默认值为 Nothing 或 null。 一个保存 SafeArray 的变量，该 SafeArray 包含完全限定类型名或新接口派生自的 <see cref="T:EnvDTE.CodeInterface" /> 对象。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.AddMap(System.String,System.String,System.Object)">
      <summary>将映射添加到对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeMap" /> 对象。</returns>
      <param name="Name">必选。 指定映射代码元素的名称。</param>
      <param name="ParameterText">可选。 表示映射参数列表的文本字符串。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.AddNamespace(System.String,System.Object)">
      <summary>创建新的命名空间代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeNamespace" /> 对象。</returns>
      <param name="Name">必选。 新命名空间的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.AddNamespace(System.String,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.AddStruct(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的结构代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeStruct" /> 对象。</returns>
      <param name="Name">必选。 新结构的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.AddStruct(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">必选。 默认值为 Nothing 或 null。 一个保存 SafeArray 的变量，该 SafeArray 包含完全限定类型名或新接口派生自的 <see cref="T:EnvDTE.CodeInterface" /> 对象。</param>
      <param name="ImplementedInterfaces">必选。 默认值为 Nothing 或 null。 一个包含完全限定类型名或 <see cref="T:EnvDTE.CodeInterface" /> 对象（每个对象都表示新类承诺实现的接口）的 SafeArray。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.AddTypedef(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>将 typedef 语句添加到该对象中。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef" /> 对象。</returns>
      <param name="Name">必选。 指定别名的名称。</param>
      <param name="Type">必选。 别名的类型。</param>
      <param name="Position">必选。 默认值 = -1。 将在其后添加事件元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.AddUnion(System.String,System.Object,EnvDTE.vsCMAccess)">
      <summary>将 union 语句添加到该对象中。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion" /> 对象。</returns>
      <param name="Name">必选。 指定联合的名称。</param>
      <param name="Position">必选。 默认值 = -1。 将在其后添加事件元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.AddVariable(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的变量代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeVariable" /> 对象。</returns>
      <param name="Name">必选。 新变量的名称。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.AddVariable(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.BodyText">
      <summary>获取或设置对象的正文。</summary>
      <returns>对象的正文。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Classes">
      <summary>获取对象的类集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与代码元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.DeclarationText">
      <summary>获取或设置对象的声明。</summary>
      <returns>对象的声明。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.DialogClasses(System.String)">
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.DisplayName">
      <summary>获取在用户界面中用于此输出组的名称。</summary>
      <returns>用户界面中用于此输出组的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.DocComment">
      <summary>获取当前代码模型元素的文档注释。</summary>
      <returns>当前代码模型元素的文档注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回父对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Enums">
      <summary>获取对象的枚举集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Extender(System.String)">
      <summary>如果所请求的扩展程序对象可用于此对象，则返回该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.File">
      <summary>获取在其中声明该对象的文件。</summary>
      <returns>在其中声明该对象的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Functions">
      <summary>获取对象的函数集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.InfoLocation">
      <summary>获取代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Interfaces">
      <summary>获取对象的接口的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.IsCaseSensitive">
      <summary>获取表示代码元素是否区分大小写的值。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可以获取 <see cref="T:EnvDTE.CodeType" /> 对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.IsInjected">
      <summary>获取表示是否已通过特性或宏展开插入某个代码元素的值。</summary>
      <returns>如果已通过特性或宏展开插入某个代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.IsReadOnly">
      <summary>获取表示包含该对象的文件是否为只读文件的值。</summary>
      <returns>如果包含父对象的文件是只读文件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与另一个代码元素相同。</summary>
      <returns>如果指定的代码元素与另一个代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 将与指定的代码元素进行比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.IsZombie">
      <summary>获取表示对象是否存在的值。</summary>
      <returns>如果该对象不再存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回对象声明的位置。</summary>
      <returns>对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Macros">
      <summary>获取对象的宏（#define 语句）的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Maps">
      <summary>获取对象的映射集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Members">
      <summary>获取此元素包含的项的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Namespaces">
      <summary>获取对象的命名空间的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>直接父对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Project">
      <summary>获取与该对象关联的 <see cref="T:EnvDTE.Project" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.References">
      <summary>目前尚未实现。</summary>
      <returns>一个空的 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Remove(System.Object)">
      <summary>从解决方案中移除指定的项目。</summary>
      <param name="Element">必选。 要从解决方案中移除的项目。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Structs">
      <summary>获取对象的结构元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Typedefs">
      <summary>获取对象的 Typedef 元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Unions">
      <summary>获取对象的联合元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.ValidateMember(System.String,EnvDTE.vsCMElement,System.String)">
      <summary>验证所建议的名称是否是对象上下文中给定类型的有效 C++ 名称。</summary>
      <returns>如果建议的名称是有效的 C++ 名称，则为 true；否则为 false。</returns>
      <param name="bstrName">必选。 所验证的对象的名称。</param>
      <param name="Kind">必选。 一个 <see cref="T:EnvDTE.vsCMElement" /> 值，表示要验证的对象的类型。</param>
      <param name="bstrType">可选。 所验证的对象的类型。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.ValidateMemberName(System.String,EnvDTE.vsCMElement,Microsoft.VisualStudio.VCCodeModel.vcCMNameValidationOption)">
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeNamespace.Variables">
      <summary>获取对象的变量集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter">
      <summary>表示源文件中函数、属性等的参数的对象。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.AddAttribute(System.String,System.String,System.Object)">
      <summary>创建新的特性代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeAttribute" /> 对象。</returns>
      <param name="Name">必选。 新特性的名称。</param>
      <param name="Value">必选。 特性的值，该值可以是参数化属性的逗号分隔参数列表。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.AddAttribute(System.String,System.String,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.Attributes">
      <summary>获取父对象的所有特性的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.DefaultExpression">
      <summary>获取或设置对某个元素的初始化代码进行定义的对象。</summary>
      <returns>元素的初始化代码。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.DisplayName">
      <summary>获取在用户界面中用于此输出组的名称。</summary>
      <returns>用户界面中用于此输出组的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.DocComment">
      <summary>获取或设置当前代码模型元素的文档注释。</summary>
      <returns>当前代码模型元素的文档注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取父对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.Extender(System.String)">
      <summary>如果请求的扩展程序对象可用于此对象，则获取该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>对象的可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.File">
      <summary>获取在其中定义此对象的文件。</summary>
      <returns>在其中定义此对象的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.Index">
      <summary>获取参数在参数列表中的位置。</summary>
      <returns>该参数在参数列表中的位置。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.InfoLocation">
      <summary>描述代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.IsCaseSensitive">
      <summary>确定代码元素是否区分大小写。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可获取 <see cref="T:EnvDTE.CodeType" /> 对象，则返回 true；否则返回 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.IsConstant">
      <summary>获取或设置说明此项是否是常数的值。</summary>
      <returns>如果该项是常数，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.IsInjected">
      <summary>获取表示是否已通过特性或宏展开插入某个代码元素的值。</summary>
      <returns>如果已通过特性或宏展开插入某个代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.IsReadOnly">
      <summary>获取一个值，该值指示包含该对象的文件是否为只读文件。</summary>
      <returns>如果包含该对象的文件是只读文件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与该代码元素相同。</summary>
      <returns>如果指定的代码元素与该代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 该代码元素要与其进行比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.IsVolatile">
      <summary>获取或设置一个值，该值指示是否使用了 volatile 关键字。</summary>
      <returns>如果使用了 volatile 关键字，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.IsZombie">
      <summary>确定对象是否存在。</summary>
      <returns>如果该对象不再存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象声明的位置。</summary>
      <returns>对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>某个给定对象的直接父对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.Project">
      <summary>获取与该对象关联的 <see cref="T:EnvDTE.Project" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.StartPoint">
      <summary>返回定义代码项的起始的 <see cref="T:EnvDTE.TextPoint" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象的起点。</summary>
      <returns>对象的起点。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.Type">
      <summary>获取或设置表示编程类型的对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeTypeRef" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeParameter.TypeString">
      <summary>获取或设置以类型的字符串表示形式表示的对象类型。</summary>
      <returns>对象的类型。</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty">
      <summary>表示属性代码元素（用 __property 关键字声明）的对象。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.Access">
      <summary>定义此项的访问特性。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.AddAttribute(System.String,System.String,System.Object)">
      <summary>创建新的特性代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeAttribute" /> 对象。</returns>
      <param name="Name">必选。 新特性的名称。</param>
      <param name="Value">必选。 特性的值，该值可以是参数化属性的逗号分隔参数列表。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.AddAttribute(System.String,System.String,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.Attributes">
      <summary>获取对象的所有特性的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.Collection">
      <summary>返回包含某个对象的集合，该对象支持此属性或包含在该代码构造内。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与代码元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.DeclarationText">
      <summary>获取或设置对象的声明。</summary>
      <returns>对象的声明。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.DisplayName">
      <summary>获取或设置在用户界面中用于此输出组的名称。</summary>
      <returns>用户界面中用于此输出组的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.DocComment">
      <summary>获取或设置当前代码模型元素的文档注释。</summary>
      <returns>当前代码模型元素的文档注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.Extender(System.String)">
      <summary>如果所请求的扩展程序对象可用于此对象，则返回该扩展程序对象。</summary>
      <returns>扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.ExtenderCATID">
      <summary>返回对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.ExtenderNames">
      <summary>返回该对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.File">
      <summary>获取在其中定义此对象的文件。</summary>
      <returns>在其中定义此对象的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.Functions">
      <summary>获取父对象的函数集合。</summary>
      <returns>CodeElements 类型的函数的集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.Getter">
      <summary>获取或设置一个对象，该对象定义返回属性的代码。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeFunction" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.InfoLocation">
      <summary>描述代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.IsCaseSensitive">
      <summary>确定代码元素是否区分大小写。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可以获取 <see cref="T:EnvDTE.CodeType" /> 对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.IsInjected">
      <summary>获取表示是否已通过特性或宏展开插入某个代码元素的值。</summary>
      <returns>如果已通过特性或宏展开插入某个代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.IsReadOnly">
      <summary>获取一个值，该值指示包含该对象的文件是否为只读文件。</summary>
      <returns>如果包含该对象的文件是只读文件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与另一个代码元素相同。</summary>
      <returns>如果指定的代码元素与另一个代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 该代码元素要与其进行比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.IsShared">
      <summary>设置或获取表示属性上是否设置 IsShared 标志的值。</summary>
      <returns>如果属性为共享属性，则返回 true。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.IsTrivial">
      <summary>获取或设置一个值，该值指示属性是否为 trivial。</summary>
      <returns>如果属性是 trivial，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.IsVirtual">
      <summary>设置或获取一个值，该值指示此属性是否为虚拟属性。</summary>
      <returns>对于虚拟属性，返回 true，否则返回 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.IsZombie">
      <summary>确定对象是否存在。</summary>
      <returns>如果该对象不再存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.Kind">
      <summary>返回一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回对象声明的位置。</summary>
      <returns>对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.Namespace">
      <summary>获取一个定义命名空间的对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeNamespace" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.Parameters">
      <summary>获取此项的参数集合。</summary>
      <returns>返回一组类型为 CodeElements 的参数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>
        <see cref="T:EnvDTE.CodeClass" /> 属性。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.Project">
      <summary>获取与该对象关联的 <see cref="T:EnvDTE.Project" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.Prototype(System.Int32)">
      <summary>返回一个字符串，它包含此对象的存根 (stub) 定义。</summary>
      <returns>一个描述该元素的字符串。</returns>
      <param name="Flags">可选。 一个 <see cref="T:EnvDTE.vsCMPrototype" /> 值，该值指示字符串的内容，例如仅参数名、参数类型和完整的唯一签名等。 默认情况下，所有标志都设置为 Off。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.Setter">
      <summary>获取或设置一个对象，该对象定义设置属性的代码。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeFunction" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.Type">
      <summary>获取或设置表示编程类型的对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeTypeRef" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeProperty.TypeString">
      <summary>获取或设置以类型的字符串表示形式表示的对象类型。</summary>
      <returns>以类型的字符串表示形式表示的对象类型。</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeReference">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.Children">
      <summary>目前尚未实现。</summary>
      <returns>表示源文件中代码构造的对象集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.CodeModel">
      <summary>目前尚未实现。</summary>
      <returns>一个对象，用于提供对包含的任何代码元素的项目级别访问。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.Collection">
      <summary>目前尚未实现。</summary>
      <returns>表示源文件中代码构造的对象集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.Comment">
      <summary>目前尚未实现。</summary>
      <returns>批注。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.DisplayName">
      <summary>目前尚未实现。</summary>
      <returns>对可识别读取器有意义的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.DTE">
      <summary>目前尚未实现。</summary>
      <returns>表示环境级属性的对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.EndPoint">
      <summary>目前尚未实现。</summary>
      <returns>文本文档中的文本位置。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>目前尚未实现。</summary>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.Extender(System.String)">
      <summary>目前尚未实现。</summary>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.ExtenderCATID">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.ExtenderNames">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.File">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.FullName">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>目前尚未实现。</summary>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>目前尚未实现。</summary>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.InfoLocation">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.IsCaseSensitive">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.IsCodeType">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.IsInjected">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.IsReadOnly">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.IsSelf(System.Object)">
      <summary>目前尚未实现。</summary>
      <param name="pOther">输入比较对象</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.IsZombie">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.Kind">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.Language">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>目前尚未实现。</summary>
      <param name="Where">一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.Name">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.Parent">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.Picture">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.Project">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.ProjectItem">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.StartPoint">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeReference.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>目前尚未实现。</summary>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct">
      <summary>表示解决方案源代码中结构代码元素的对象。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Access">
      <summary>定义此项的访问特性。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddAttribute(System.String,System.String,System.Object)">
      <summary>创建新的特性代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeAttribute" /> 对象。</returns>
      <param name="Name">必选。 新特性的名称。</param>
      <param name="Value">必选。 特性的值，该值可以是参数化属性的逗号分隔参数列表。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddAttribute(System.String,System.String,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddBase(System.Object,System.Object)">
      <summary>将某项添加到继承对象的列表中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElement" /> 对象。</returns>
      <param name="Base">必选。 从中派生实现的类。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddBase(System.Object,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddClass(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的类代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeClass" /> 对象。</returns>
      <param name="Name">必选。 类的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddClass(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">可选。 默认值 = 0。 一个包含完全限定类型名或 <see cref="T:EnvDTE.CodeClass" /> 对象（新类将从这些对象继承自己的实现）的 SafeArray。</param>
      <param name="ImplementedInterfaces">可选。 默认值 = 0。 一个包含完全限定类型名或 <see cref="T:EnvDTE.CodeInterface" /> 对象（每个对象都表示新类承诺实现的接口）的 SafeArray。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddDelegate(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的委托代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeDelegate" /> 对象。</returns>
      <param name="Name">必选。 要添加的委托的名称。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddDelegate(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddEnum(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的枚举代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeEnum" /> 对象。</returns>
      <param name="Name">必选。 要添加的枚举的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddEnum(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">可选。 默认为 Nothing。 一个保存 SafeArray 的变量，该 SafeArray 包含用于指定新建枚举的基础类型的完全限定类型名或 <see cref="T:EnvDTE.CodeType" /> 对象。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddEvent(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>仅由 Microsoft 内部使用。</summary>
      <returns>表示事件代码元素的对象。</returns>
      <param name="Name">事件名称</param>
      <param name="Type">事件类型</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddFunction(System.String,EnvDTE.vsCMFunction,System.Object,System.Object,EnvDTE.vsCMAccess,System.Object)">
      <summary>创建新的函数代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeFunction" /> 对象。</returns>
      <param name="Name">必选。 新函数的名称。</param>
      <param name="Kind">必选。 用于指示函数类型（例如，函数是 property-get、方法还是其他类型）的 <see cref="T:EnvDTE.vsCMFunction" /> 常数。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddFunction(System.String,EnvDTE.vsCMFunction,System.Object,System.Object,EnvDTE.vsCMAccess,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
      <param name="Location">可选。 添加新函数的位置。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddImplementedInterface(System.Object,System.Object)">
      <summary>将接口添加到继承对象的列表中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeInterface" /> 对象。</returns>
      <param name="Base">必选。 该类将实现的接口。 它可以是 <see cref="T:EnvDTE.CodeInterface" /> 或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddImplementedInterface(System.Object,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddProperty(System.String,System.String,System.Object,System.Object,EnvDTE.vsCMAccess,System.Object)">
      <summary>创建新的属性代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeProperty" /> 对象。</returns>
      <param name="GetterName">必选。 获取属性值的函数名。</param>
      <param name="PutterName">必选。 设置该属性的函数名。</param>
      <param name="Type">必选。 属性的类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 值或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddProperty(System.String,System.String,System.Object,System.Object,EnvDTE.vsCMAccess,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 访问。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数值。</param>
      <param name="Location">可选。 位置。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddStruct(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的结构代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeStruct" /> 对象。</returns>
      <param name="Name">必选。 新结构的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddStruct(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">必选。 默认值为 Nothing 或 null。 一个保存 SafeArray 的变量，该 SafeArray 包含完全限定类型名或新接口派生自的 <see cref="T:EnvDTE.CodeInterface" /> 对象。</param>
      <param name="ImplementedInterfaces">必选。 默认值为 Nothing 或 null。 一个包含完全限定类型名或 <see cref="T:EnvDTE.CodeInterface" /> 对象（每个对象都表示新类承诺实现的接口）的 SafeArray。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddTemplateParameter(System.String,System.Object,System.Object)">
      <summary>向模板定义添加一个参数。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeParameter" /> 对象。</returns>
      <param name="Name">必选。 新模板参数的名称。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddTemplateParameter(System.String,System.Object,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddTypedef(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>将 typedef 语句添加到该对象中。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef" /> 对象。</returns>
      <param name="Name">必选。 指定别名的名称。</param>
      <param name="Type">必选。 别名的类型。</param>
      <param name="Position">必选。 默认值 = -1。 将在其后添加事件元素的代码元素。 如果该值为 CodeElement，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddUnion(System.String,System.Object,EnvDTE.vsCMAccess)">
      <summary>将 union 语句添加到该对象中。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion" /> 对象。</returns>
      <param name="Name">必选。 指定联合的名称。</param>
      <param name="Position">必选。 默认值 = -1。 将在其后添加事件元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddVariable(System.String,System.Object,System.Object,EnvDTE.vsCMAccess,System.Object)">
      <summary>创建新的变量代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeVariable" /> 对象。</returns>
      <param name="Name">必选。 新变量的名称。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddVariable(System.String,System.Object,System.Object,EnvDTE.vsCMAccess,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
      <param name="Location">可选。 新变量定义的路径和文件名。 根据语言的不同，文件名使用项目文件的相对路径或绝对路径。 如果该文件还不是项目项，则将该文件添加到项目中。 如果无法创建该文件并将其添加到项目中，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.AddVariable(System.String,System.Object,System.Object,EnvDTE.vsCMAccess,System.Object)" /> 失败。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Attributes">
      <summary>获取父对象的所有特性的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Bases">
      <summary>获取该项派生自的类的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.BodyText">
      <summary>获取或设置对象的正文。</summary>
      <returns>对象的正文。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Classes">
      <summary>获取父对象的类集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.CodeModel">
      <summary>返回项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与代码元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.DataTypeKind">
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.DeclarationText">
      <summary>获取或设置对象的声明。</summary>
      <returns>对象的声明。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.DerivedTypes">
      <summary>获取从该对象派生的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.DisplayName">
      <summary>获取对象的全名。</summary>
      <returns>对象的全名。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.DocComment">
      <summary>获取或设置当前代码模型元素的文档注释。</summary>
      <returns>当前代码模型元素的文档注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Enums">
      <summary>获取对象的枚举集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Events">
      <summary>获取对象的事件集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Extender(System.String)">
      <summary>如果所请求的扩展程序对象可用于此对象，则返回该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.File">
      <summary>获取在其中定义此对象的文件。</summary>
      <returns>在其中定义此对象的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Functions">
      <summary>获取对象的函数集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.ImplementedInterfaces">
      <summary>获取由此对象实现的接口的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.InfoLocation">
      <summary>描述代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.IsAbstract">
      <summary>获取或设置一个值，该值指示某一项是否声明为抽象项。</summary>
      <returns>如果该项声明为抽象项，该值为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.IsCaseSensitive">
      <summary>获取一个值，该值指示代码元素是否区分大小写。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可以获取 <see cref="T:EnvDTE.CodeType" /> 对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.IsDerivedFrom(System.String)">
      <summary>获取一个值，该值指示一个对象是否以另一个对象作为基。</summary>
      <returns>如果对象有另一个对象作为其基对象，则为 true，否则为 false。</returns>
      <param name="FullName">必选。 要在此类型的沿袭中搜索的类型。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.IsInjected">
      <summary>获取表示是否已通过特性或宏展开插入某个代码元素的值。</summary>
      <returns>如果已通过特性或宏展开插入某个代码元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.IsManaged">
      <summary>设置或获取表示对象是否为托管对象的值。</summary>
      <returns>如果对象为托管对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.IsReadOnly">
      <summary>获取表示包含该对象的文件是否为只读文件的值。</summary>
      <returns>如果包含该对象的文件是只读文件，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.IsSealed">
      <summary>设置或获取表示 __sealed 关键字是否应用于父对象的值。</summary>
      <returns>如果 __sealed 关键字应用于父对象，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与父代码元素相同。</summary>
      <returns>如果指定的代码元素与父代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 该代码元素要与其进行比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.IsTemplate">
      <summary>获取表示对象是否为模板的值。</summary>
      <returns>如果对象是模板，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.IsValue">
      <summary>设置或获取表示 __value 关键字是否应用于对象的值。</summary>
      <returns>如果 __value 关键字应用于对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.IsZombie">
      <summary>获取表示对象是否存在的值。</summary>
      <returns>如果该对象不再存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回对象声明的位置。</summary>
      <returns>对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Members">
      <summary>获取此元素包含的项的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Namespace">
      <summary>获取一个定义父命名空间的对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeNamespace" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>直接父对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Parts">
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Project">
      <summary>获取与对象关联的 <see cref="T:EnvDTE.Project" />。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Properties">
      <summary>获取对象的属性集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.References">
      <summary>目前尚未实现。</summary>
      <returns>一个空的 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.RemoveBase(System.Object)">
      <summary>从基列表中移除一个对象。</summary>
      <param name="Element">必选。 一个 <see cref="T:EnvDTE.CodeElement" />，或它在集合中的名称。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.RemoveInterface(System.Object)">
      <summary>从实现的接口列表中移除一个接口。</summary>
      <param name="Element">必选。 一个 <see cref="T:EnvDTE.CodeElement" />，或它在集合中的名称。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.RemoveMember(System.Object)">
      <summary>移除成员代码构造。</summary>
      <param name="Element">必选。 一个 <see cref="T:EnvDTE.CodeElement" /> 对象，或它在集合中的名称。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.RemoveTemplateParameter(System.Object)">
      <summary>从模板定义中移除参数。</summary>
      <param name="Element">要移除的参数。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Structs">
      <summary>获取对象的结构元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.TemplateParameters">
      <summary>模板参数的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Templatizations">
      <summary>仅由 Microsoft 内部使用。</summary>
      <returns>表示源文件中代码构造的对象集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Typedefs">
      <summary>获取对象的 Typedef 元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Unions">
      <summary>获取对象的 union 元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.ValidateMember(System.String,EnvDTE.vsCMElement,System.String)">
      <summary>验证所建议的名称是否是父对象上下文中给定类型的有效 Visual C++ 名称。</summary>
      <returns>如果建议的名称是有效的 Visual C++ 名称，则为 true；否则为 false。</returns>
      <param name="bstrName">必选。 所验证的对象的名称。</param>
      <param name="Kind">必选。 一个 <see cref="T:EnvDTE.vsCMElement" /> 值，表示要验证的对象的类型。</param>
      <param name="bstrType">可选。 所验证的对象的类型。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.ValidateMemberName(System.String,EnvDTE.vsCMElement,Microsoft.VisualStudio.VCCodeModel.vcCMNameValidationOption)">
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeStruct.Variables">
      <summary>获取对象的变量集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef">
      <summary>表示解决方案源代码中 typedef 代码元素的对象。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.Access">
      <summary>定义此项的访问特性。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.AddAttribute(System.String,System.String,System.Object)">
      <summary>创建新的特性代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeAttribute" /> 对象。</returns>
      <param name="Name">必选。 新特性的名称。</param>
      <param name="Value">必选。 特性的值，该值可以是参数化属性的逗号分隔参数列表。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.AddAttribute(System.String,System.String,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.Attributes">
      <summary>获取对象的所有特性的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.Collection">
      <summary>返回包含某个对象的集合，该对象支持此属性或包含在该代码构造内。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与代码元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.DisplayName">
      <summary>获取在用户界面中用于此输出组的名称。</summary>
      <returns>用户界面中用于此输出组的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.Extender(System.String)">
      <summary>如果所请求的扩展程序对象可用于此对象，则返回该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.File">
      <summary>获取与此 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef" /> 元素关联的文件。</summary>
      <returns>与此 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef" /> 元素关联的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.InfoLocation">
      <summary>获取代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.IsCaseSensitive">
      <summary>获取表示代码元素是否区分大小写的值。</summary>
      <returns>如果代码元素的名称区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可以获取 <see cref="T:EnvDTE.CodeType" /> 对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.IsInjected">
      <summary>获取一个值，该值指示是否已通过特性插入了某个代码元素。</summary>
      <returns>如果代码元素由特性自动生成，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.IsReadOnly">
      <summary>获取表示包含该对象的文件是否为只读文件的值。</summary>
      <returns>如果当前元素是只读元素，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与该代码元素相同。</summary>
      <returns>如果指定的代码元素与父代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 该代码元素要与其进行比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.IsZombie">
      <summary>获取表示对象是否存在的值。</summary>
      <returns>如果该对象不再存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回对象声明的位置。</summary>
      <returns>对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.Namespace">
      <summary>获取一个定义命名空间的对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeNamespace" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>直接父对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.Project">
      <summary>获取与该对象关联的 <see cref="T:EnvDTE.Project" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.References">
      <summary>目前尚未实现。</summary>
      <returns>一个空的 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef.TypeString">
      <summary>获取或设置以类型的字符串表示形式表示的对象类型。</summary>
      <returns>对象的类型。</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion">
      <summary>表示解决方案源代码中 union 代码元素的对象。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Access">
      <summary>设置或获取此项的访问特性。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.AddAttribute(System.String,System.String,System.Object)">
      <summary>创建新的特性代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeAttribute" /> 对象。</returns>
      <param name="Name">必选。 新特性的名称。</param>
      <param name="Value">必选。 特性的值，该值可以是参数化属性的逗号分隔参数列表。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.AddAttribute(System.String,System.String,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.AddBase(System.Object,System.Object)">
      <summary>将某项添加到继承对象的列表中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElement" /> 对象。</returns>
      <param name="Base">必选。 从中派生实现的类。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.AddBase(System.Object,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.AddClass(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的类代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeClass" /> 对象。</returns>
      <param name="Name">必选。 类的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.AddClass(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">可选。 默认值 = 0。 一个包含完全限定类型名或 <see cref="T:EnvDTE.CodeClass" /> 对象（新类将从这些对象继承自己的实现）的 SafeArray。</param>
      <param name="ImplementedInterfaces">可选。 默认值 = 0。 一个包含完全限定类型名或 <see cref="T:EnvDTE.CodeInterface" /> 对象（每个对象都表示新类承诺实现的接口）的 SafeArray。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.AddEnum(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的枚举代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeEnum" /> 对象。</returns>
      <param name="Name">必选。 要添加的枚举的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.AddEnum(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">可选。 默认为 Nothing。 一个保存 SafeArray 的变量，该 SafeArray 包含用于指定新建枚举的基础类型的完全限定类型名或 <see cref="T:EnvDTE.CodeType" /> 对象。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.AddFunction(System.String,EnvDTE.vsCMFunction,System.Object,System.Object,EnvDTE.vsCMAccess,System.Object)">
      <summary>创建新的函数代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeFunction" /> 对象。</returns>
      <param name="Name">必选。 新函数的名称。</param>
      <param name="Kind">必选。 用于指示函数类型（例如，函数是 property-get、方法还是其他类型）的 <see cref="T:EnvDTE.vsCMFunction" /> 常数。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.AddFunction(System.String,EnvDTE.vsCMFunction,System.Object,System.Object,EnvDTE.vsCMAccess,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
      <param name="Location">可选。 放置新函数的位置。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.AddStruct(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的结构代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeStruct" /> 对象。</returns>
      <param name="Name">必选。 新结构的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.AddStruct(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">必选。 默认值为 Nothing 或 null。 一个保存 SafeArray 的变量，该 SafeArray 包含完全限定类型名或新接口派生自的 <see cref="T:EnvDTE.CodeInterface" /> 对象。</param>
      <param name="ImplementedInterfaces">必选。 默认值为 Nothing 或 null。 一个包含完全限定类型名或 <see cref="T:EnvDTE.CodeInterface" /> 对象（每个对象都表示新类承诺实现的接口）的 SafeArray。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.AddTemplateParameter(System.String,System.Object,System.Object)">
      <summary>向模板定义添加一个参数。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeParameter" /> 对象。</returns>
      <param name="Name">必选。 新模板参数的名称。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.AddTemplateParameter(System.String,System.Object,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.AddTypedef(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>将 typedef 语句添加到该对象中。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef" /> 对象。</returns>
      <param name="Name">必选。 指定别名的名称。</param>
      <param name="Type">必选。 别名的类型。</param>
      <param name="Position">必选。 默认值 = -1。 将在其后添加事件元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.AddUnion(System.String,System.Object,EnvDTE.vsCMAccess)">
      <summary>将 union 语句添加到该对象中。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion" /> 对象。</returns>
      <param name="Name">必选。 指定联合的名称。</param>
      <param name="Position">必选。 默认值 = -1。 将在其后添加事件元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.AddVariable(System.String,System.Object,System.Object,EnvDTE.vsCMAccess,System.Object)">
      <summary>创建新的变量代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeVariable" /> 对象。</returns>
      <param name="Name">必选。 新变量的名称。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.AddVariable(System.String,System.Object,System.Object,EnvDTE.vsCMAccess,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
      <param name="Location">可选。 新变量定义的路径和文件名。 根据语言的不同，文件名是项目文件的相对名称或绝对名称。 如果该文件还不是项目项，则将该文件添加到项目中。 如果无法创建该文件并将其添加到项目中，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.AddVariable(System.String,System.Object,System.Object,EnvDTE.vsCMAccess,System.Object)" /> 失败。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Attributes">
      <summary>获取对象的所有特性的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Bases">
      <summary>获取该项派生自的类的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.BodyText">
      <summary>获取或设置对象的正文。</summary>
      <returns>对象的正文。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Classes">
      <summary>获取对象的类集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与代码元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.DeclarationText">
      <summary>获取或设置对象的声明。</summary>
      <returns>对象的声明。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.DerivedTypes">
      <summary>获取从该对象派生的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.DisplayName">
      <summary>获取显示给用户的格式化名称。</summary>
      <returns>显示给用户的格式化名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.DocComment">
      <summary>设置或获取当前代码模型元素的文档注释。</summary>
      <returns>当前代码模型元素的文档注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Enums">
      <summary>获取对象的枚举集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Extender(System.String)">
      <summary>如果所请求的扩展程序对象可用于此对象，则返回该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.File">
      <summary>获取与此 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion" /> 关联的文件。</summary>
      <returns>与此 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion" /> 关联的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Functions">
      <summary>获取对象的函数集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.InfoLocation">
      <summary>获取代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.IsCaseSensitive">
      <summary>获取表示代码元素是否区分大小写的值。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可以获取 <see cref="T:EnvDTE.CodeType" /> 对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.IsDerivedFrom(System.String)">
      <summary>获取一个值，该值指示一个对象是否以另一个对象作为基。</summary>
      <returns>如果对象有另一个对象作为其基对象，则为 true，否则为 false。</returns>
      <param name="FullName">必选。 要在此类型的沿袭中搜索的类型。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.IsInjected">
      <summary>获取一个值，该值指示是否已通过特性插入了某个代码元素。</summary>
      <returns>如果此元素由特性自动生成，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.IsReadOnly">
      <summary>获取表示包含该对象的文件是否为只读文件的值。</summary>
      <returns>如果当前元素是只读元素，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与该代码元素相同。</summary>
      <returns>如果指定的代码元素与该代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 该代码元素要与其进行比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.IsTemplate">
      <summary>获取表示该对象是否为模板的值。</summary>
      <returns>如果此元素为模板，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.IsZombie">
      <summary>获取表示对象是否存在的值。</summary>
      <returns>如果该对象不再存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回对象声明的位置。</summary>
      <returns>对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Members">
      <summary>获取此元素包含的项的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Namespace">
      <summary>获取一个定义命名空间的对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeNamespace" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>直接父对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Project">
      <summary>获取与对象关联的 <see cref="T:EnvDTE.Project" />。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" />。</summary>
      <returns>获取 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.References">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.RemoveBase(System.Object)">
      <summary>从基列表中移除一个对象。</summary>
      <param name="Element">必选。 一个 <see cref="T:EnvDTE.CodeElement" />，或它在集合中的名称。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.RemoveMember(System.Object)">
      <summary>移除成员代码构造。</summary>
      <param name="Element">必选。 一个 <see cref="T:EnvDTE.CodeElement" /> 对象，或它在集合中的名称。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.RemoveTemplateParameter(System.Object)">
      <summary>从模板定义中移除参数。</summary>
      <param name="Element">要移除的参数。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Structs">
      <summary>获取对象的结构元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.TemplateParameters">
      <summary>获取模板参数的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Templatizations">
      <summary>仅由 Microsoft 内部使用。</summary>
      <returns>表示源文件中代码构造的对象集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Typedefs">
      <summary>获取对象的 typedef 元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Unions">
      <summary>获取对象的 union 元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.ValidateMember(System.String,EnvDTE.vsCMElement,System.String)">
      <summary>验证所建议的名称是否是父对象上下文中给定类型的有效 C++ 名称。</summary>
      <returns>如果建议的元素名称是有效的 C++ 名称，则为 true；否则为 false。</returns>
      <param name="bstrName">必选。 所验证的对象的名称。</param>
      <param name="Kind">必选。 一个 <see cref="T:EnvDTE.vsCMElement" /> 值，表示要验证的对象的类型。</param>
      <param name="bstrType">可选。 所验证的对象的类型。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.ValidateMemberName(System.String,EnvDTE.vsCMElement,Microsoft.VisualStudio.VCCodeModel.vcCMNameValidationOption)">
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion.Variables">
      <summary>获取变量集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing">
      <summary>表示解决方案源代码中 #using 代码元素的对象。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与代码元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.DisplayName">
      <summary>获取在用户界面中用于此输出组的名称。</summary>
      <returns>用户界面中使用的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>获取父对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.Extender(System.String)">
      <summary>如果请求的扩展程序对象可用于此对象，则获取该扩展程序对象。</summary>
      <returns>扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.File">
      <summary>获取与此 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing" /> 元素关联的文件。</summary>
      <returns>与此 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing" /> 元素关联的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.InfoLocation">
      <summary>获取代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.IsCaseSensitive">
      <summary>获取一个值，该值指示代码元素是否区分大小写。</summary>
      <returns>如果 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing" /> 元素的名称区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可以获取 <see cref="T:EnvDTE.CodeType" /> 对象，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.IsInjected">
      <summary>获取一个值，该值指示是否已通过特性插入某个代码元素。</summary>
      <returns>如果此元素由特性自动生成，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.IsReadOnly">
      <summary>获取一个值，该值指示当前元素是否为只读。</summary>
      <returns>如果当前元素是只读元素，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.IsSelf(System.Object)">
      <summary>获取一个值，该值指示指定代码元素是否与该代码元素相同。</summary>
      <returns>如果指定的代码元素与该代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 该代码元素要与其进行比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.IsZombie">
      <summary>获取一个值，该值指示该对象是否存在。</summary>
      <returns>如果该对象不再存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回对象声明的位置。</summary>
      <returns>对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>直接父对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.Project">
      <summary>获取与该对象关联的 <see cref="T:EnvDTE.Project" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.StartPoint">
      <summary>返回定义代码项的起始的 <see cref="T:EnvDTE.TextPoint" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable">
      <summary>表示源文件中变量构造的对象。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.Access">
      <summary>设置或获取此项的访问特性。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.AddAttribute(System.String,System.String,System.Object)">
      <summary>创建新的特性代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeAttribute" /> 对象。</returns>
      <param name="Name">必选。 新特性的名称。</param>
      <param name="Value">必选。 特性的值，该值可以是参数化属性的逗号分隔参数列表。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.AddAttribute(System.String,System.String,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.Attributes">
      <summary>获取对象的所有特性的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.Children">
      <summary>获取此代码构造中包含的对象的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.CodeModel">
      <summary>获取项目的 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeModel" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.Collection">
      <summary>获取包含某个对象的集合，该对象支持此属性或包含在此代码构造中。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.Comment">
      <summary>获取或设置与代码元素关联的注释。</summary>
      <returns>与代码元素关联的注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.DeclarationText">
      <summary>获取或设置对象的声明。</summary>
      <returns>对象的声明。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.DisplayName">
      <summary>获取在用户界面中用于此输出组的名称。</summary>
      <returns>用户界面中用于此输出组的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.DocComment">
      <summary>获取当前代码模型元素的文档注释。</summary>
      <returns>当前代码模型元素的文档注释。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.EndPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回对象的终点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.Extender(System.String)">
      <summary>如果所请求的扩展程序对象可用于此对象，则返回该扩展程序对象。</summary>
      <returns>一个扩展程序对象。</returns>
      <param name="ExtenderName">必选。 要返回的扩展程序名称。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.ExtenderCATID">
      <summary>获取对象的扩展程序类别 ID (CATID)。</summary>
      <returns>扩展程序 CATID。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.ExtenderNames">
      <summary>获取对象的可用扩展程序的列表。</summary>
      <returns>可用扩展程序的列表。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.File">
      <summary>获取在其中定义此对象的文件。</summary>
      <returns>在其中定义此对象的文件。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.FullName">
      <summary>获取对象文件的完整路径和名称。</summary>
      <returns>对象文件的完整路径和名称。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.GetEndPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象标记代码元素定义的结束位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.GetStartPoint(EnvDTE.vsCMPart)">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码元素定义的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">可选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 常数，该常数指定要检索的代码部分。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.InfoLocation">
      <summary>获取代码模型的功能。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMInfoLocation" /> 常数值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.InitExpression">
      <summary>获取或设置对某个元素的初始化代码进行定义的对象。</summary>
      <returns>对该代码变量的初始化表达式进行定义的对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.IsCaseSensitive">
      <summary>获取一个值，该值指示代码元素是否区分大小写。</summary>
      <returns>如果代码元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.IsCodeType">
      <summary>获取一个值，该值指示是否可以从此对象中获取 <see cref="T:EnvDTE.CodeType" /> 对象。</summary>
      <returns>如果可获取 <see cref="T:EnvDTE.CodeType" /> 对象，则返回 true；否则返回 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.IsConstant">
      <summary>设置或获取表示该项是否为常数的值。</summary>
      <returns>如果该项是常数，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.IsInjected">
      <summary>获取一个值，该值指示是否已通过特性插入了某个代码元素。</summary>
      <returns>如果此元素由特性自动生成，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.IsReadOnly">
      <summary>确定包含该对象的文件是否为只读文件。</summary>
      <returns>如果当前元素是只读元素，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.IsSelf(System.Object)">
      <summary>确定指定的代码元素是否与当前代码元素相同。</summary>
      <returns>如果指定的代码元素与当前代码元素相同，则为 true；否则为 false。</returns>
      <param name="pOther">必选。 该代码元素要与其进行比较的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.IsShared">
      <summary>获取或设置一个值，该值指示该项是否是静态定义的，即：该项是对此对象类型的所有实例通用，还是只对此对象可用。</summary>
      <returns>如果该方法是共享方法，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.IsVolatile">
      <summary>获取或设置一个值，该值指示是否使用了 volatile 关键字。</summary>
      <returns>如果使用了 volatile 关键字，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.IsZombie">
      <summary>获取表示对象是否存在的值。</summary>
      <returns>如果该对象不再存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.Kind">
      <summary>获取一个指示对象类型的枚举。</summary>
      <returns>一个 <see cref="T:EnvDTE.vsCMElement" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.Location(Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>对象声明的位置。</summary>
      <returns>对象声明的位置。</returns>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定是返回声明的位置还是定义的位置。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.Name">
      <summary>获取或设置对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.Namespace">
      <summary>获取一个定义命名空间的对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeNamespace" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>直接父对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.Picture">
      <summary>获取将用作用户界面中的图标的图片动画对象。</summary>
      <returns>图片对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.Project">
      <summary>获取与该对象关联的 <see cref="T:EnvDTE.Project" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.Project" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.ProjectItem">
      <summary>获取与给定对象关联的 <see cref="T:EnvDTE.ProjectItem" /> 对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.Prototype(System.Int32)">
      <summary>返回一个字符串，它包含此对象的存根 (stub) 定义。</summary>
      <returns>一个描述该元素的字符串。</returns>
      <param name="Flags">可选。 一个 <see cref="T:EnvDTE.vsCMPrototype" /> 值，该值指示字符串内容应是什么，例如仅参数名、参数类型和完整的唯一签名等。 默认情况下，所有标志都设置为 Off。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.References">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.StartPointOf(EnvDTE.vsCMPart,Microsoft.VisualStudio.VCCodeModel.vsCMWhere)">
      <summary>返回对象的起点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
      <param name="Part">必选。 一个 <see cref="T:EnvDTE.vsCMPart" /> 值，指定使用定义或声明的哪一部分（特性块、正文等等）。</param>
      <param name="Where">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere" /> 值，指定 <see cref="T:EnvDTE.TextPoint" /> 对象是定义还是声明。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.Type">
      <summary>获取或设置表示编程类型的对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeTypeRef" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCCodeVariable.TypeString">
      <summary>获取或设置以类型的字符串表示形式表示的对象类型。</summary>
      <returns>对象的类型。</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCDesignElement">
      <summary>仅由 Microsoft 内部使用。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCDesignElement.DisplayName">
      <summary>仅由 Microsoft 内部使用。</summary>
      <returns>对可识别读取器有意义的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCDesignElement.DTE">
      <summary>仅由 Microsoft 内部使用。</summary>
      <returns>表示环境级属性的对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCDesignElement.IsCaseSensitive">
      <summary>仅由 Microsoft 内部使用。</summary>
      <returns>如果设计元素区分大小写，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCDesignElement.IsReadOnly">
      <summary>仅由 Microsoft 内部使用。</summary>
      <returns>如果设计元素是只读元素，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCDesignElement.IsSelf(System.Object)">
      <summary>仅由 Microsoft 内部使用。</summary>
      <returns>如果该模型元素和 <paramref name="pOther" /> 参数相同，则为 true；否则为 false 。</returns>
      <param name="pOther">用于比较的对象</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCDesignElement.IsZombie">
      <summary>仅由 Microsoft 内部使用。</summary>
      <returns>如果特定对象不再存在，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCDesignElement.Name">
      <summary>仅由 Microsoft 内部使用。</summary>
      <returns>设计元素的名称。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCDesignElement.Parent">
      <summary>仅由 Microsoft 内部使用。</summary>
      <returns>父对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCDesignElement.Picture">
      <summary>仅由 Microsoft 内部使用。</summary>
      <returns>返回表示父对象的图片对象。</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCDesignElements">
      <summary>仅由 Microsoft 内部使用。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCDesignElements.Count">
      <summary>仅由 Microsoft 内部使用。</summary>
      <returns>一个 Integer。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCDesignElements.DTE">
      <summary>仅由 Microsoft 内部使用。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCDesignElements.Find(System.String)">
      <summary>仅由 Microsoft 内部使用。</summary>
      <returns>一个对象。</returns>
      <param name="bstrSearch">搜索字符串。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCDesignElements.GetEnumerator">
      <summary>仅由 Microsoft 内部使用。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCDesignElements.Item(System.Object)">
      <summary>仅由 Microsoft 内部使用。</summary>
      <returns>一个对象。</returns>
      <param name="vItem">输入项</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCDesignElements.Parent">
      <summary>仅由 Microsoft 内部使用。</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCDialogExtender">
      <summary>一个对象，用于提供对解决方案中现有对话框的访问。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCDialogExtender.DialogID">
      <summary>获取由对象表示的对话框类的 ID。</summary>
      <returns>由对象表示的对话框类的 ID。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCDialogExtender.Initialize(System.Object,EnvDTE.IExtenderSite,System.Int32)">
      <summary>仅由 Microsoft 内部使用。</summary>
      <param name="ExtendeeObject">用于初始化的输入对象</param>
      <param name="ExtenderSite">扩展程序的站点</param>
      <param name="Cookie">输入 Cookie</param>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel">
      <summary>表示源文件中代码元素的对象。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AbortTransaction">
      <summary>暂停当前事务。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddAttribute(System.String,System.String,System.Object)">
      <summary>创建新的特性代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeAttribute" /> 对象。</returns>
      <param name="Name">必选。 新特性的名称。</param>
      <param name="Value">必选。 特性的值，该值可以是参数化属性的逗号分隔参数列表。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddAttribute(System.String,System.String,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddClass(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的类代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeClass" /> 对象。</returns>
      <param name="Name">必选。 类的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddClass(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">可选。 默认值 = 0。 一个包含完全限定类型名或 <see cref="T:EnvDTE.CodeClass" /> 对象（新类将从这些对象继承自己的实现）的 SafeArray。</param>
      <param name="ImplementedInterfaces">可选。 默认值 = 0。 一个包含完全限定类型名或 <see cref="T:EnvDTE.CodeInterface" /> 对象（每个对象都表示新类承诺实现的接口）的 SafeArray。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddDelegate(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的委托代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeDelegate" /> 对象。</returns>
      <param name="Name">必选。 要添加的委托的名称。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddDelegate(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddEnum(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的枚举代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeEnum" /> 对象。</returns>
      <param name="Name">必选。 要添加的枚举的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddEnum(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">可选。 默认为 Nothing。 一个保存 SafeArray 的变量，该 SafeArray 包含用于指定新建枚举的基础类型的完全限定类型名或 <see cref="T:EnvDTE.CodeType" /> 对象。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddFunction(System.String,EnvDTE.vsCMFunction,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的函数代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeFunction" /> 对象。</returns>
      <param name="Name">必选。 新函数的名称。</param>
      <param name="Kind">必选。 用于指示函数类型（例如，函数是 property-get、方法还是其他类型）的 <see cref="T:EnvDTE.vsCMFunction" /> 常数。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddFunction(System.String,EnvDTE.vsCMFunction,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddIDLImport(System.String,System.Object)">
      <summary>将新的 import 语句添加到 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel" /> 对象的 .idl 文件。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLImport" /> 对象。</returns>
      <param name="Name">必选。 指定要导入的头文件、IDL 文件或 ODL 文件的名称（放在引号中）。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddIDLLibrary(System.String,System.Object)">
      <summary>将新的 library 语句添加到 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel" /> 对象的 .idl 文件。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeIDLLibrary" /> 对象。</returns>
      <param name="Name">必选。 指定新库的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddImport(System.String,System.Object,System.String)">
      <summary>将 #import 元素添加到 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel" /> 对象中。</summary>
      <returns>一个 <see cref="T:EnvDTE80.CodeImport" /> 对象。</returns>
      <param name="Name">必选。 指定要导入的类型库的名称（放在引号中或尖括号 &lt;&gt; 之间）。</param>
      <param name="Position">必选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Alias">可选。 一个或多个 #import 特性。 有关完整的列表，请参见 #import Attributes 的“#import 指令”一节。 用空格或逗号分隔每个特性。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddImport_2(System.String,System.Object,System.String)">
      <summary>将 #import 元素添加到 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel" /> 对象中。</summary>
      <returns>一个 <see cref="T:EnvDTE80.CodeImport" /> 对象。</returns>
      <param name="Name">必选。 指定要导入的类型库的名称（放在引号中或尖括号 &lt;&gt; 之间）。</param>
      <param name="Position">必选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Attributes">可选。 一个或多个 #import 特性。 有关完整的列表，请参见 #import Attributes 的“#import 指令”一节。 用空格或逗号分隔每个特性。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddInclude(System.String,System.Object)">
      <summary>将 #include 元素添加到 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel" /> 对象中。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeInclude" /> 对象。</returns>
      <param name="Name">必选。 指定要包括的文件的名称（放在引号或尖括号中）。</param>
      <param name="Position">必选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddInterface(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的接口代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeInterface" /> 对象。</returns>
      <param name="Name">必选。 新接口的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddInterface(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">可选。 默认值为 Nothing 或 null。 一个保存 SafeArray 的变量，该 SafeArray 包含完全限定类型名或新接口派生自的 <see cref="T:EnvDTE.CodeInterface" /> 对象。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddMacro(System.String,System.String,System.Object)">
      <summary>将 #define 元素添加到 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel" /> 对象中。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeMacro" /> 对象。</returns>
      <param name="Name">必选。 指定要包括的文件的名称（放在引号或尖括号中）。</param>
      <param name="Value">可选。 宏的定义文本。</param>
      <param name="Position">必选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddMap(System.String,System.String,System.Object)">
      <summary>将映射添加到对象。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeMap" /> 对象。</returns>
      <param name="Name">必选。 指定映射代码元素的名称。</param>
      <param name="ParameterText">可选。 表示映射参数列表的文本字符串。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddNamespace(System.String,System.Object)">
      <summary>创建新的命名空间代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeNamespace" /> 对象。</returns>
      <param name="Name">必选。 新命名空间的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddNamespace(System.String,System.Object)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddStruct(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的结构代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeStruct" /> 对象。</returns>
      <param name="Name">必选。 新结构的名称。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddStruct(System.String,System.Object,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Bases">必选。 默认值为 Nothing 或 null。 一个保存 SafeArray 的变量，该 SafeArray 包含完全限定类型名或新接口派生自的 <see cref="T:EnvDTE.CodeInterface" /> 对象。</param>
      <param name="ImplementedInterfaces">必选。 默认值为 Nothing 或 null。 一个包含完全限定类型名或 <see cref="T:EnvDTE.CodeInterface" /> 对象（每个对象都表示新类承诺实现的接口）的 SafeArray。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddTypedef(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>将 typedef 语句添加到该对象中。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeTypedef" /> 对象。</returns>
      <param name="Name">必选。 指定别名的名称。</param>
      <param name="Type">必选。 别名的类型。</param>
      <param name="Position">必选。 默认值 = -1。 将在其后添加事件元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddUnion(System.String,System.Object,EnvDTE.vsCMAccess)">
      <summary>将 union 语句添加到该对象中。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeUnion" /> 对象。</returns>
      <param name="Name">必选。 指定联合的名称。</param>
      <param name="Position">必选。 默认值 = -1。 将在其后添加事件元素的代码元素。 如果该值为 CodeElement，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 值。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddUsing(System.String,System.Object)">
      <summary>将 #using 元素添加到 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel" /> 对象中。</summary>
      <returns>一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.VCCodeUsing" /> 对象。</returns>
      <param name="Name">必选。 指定要包括的文件的名称（放在引号或尖括号中）。</param>
      <param name="Position">必选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 因为集合从 1 开始计数，所以传递 0 表示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddVariable(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)">
      <summary>创建新的变量代码构造，并将代码插入正确的位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeVariable" /> 对象。</returns>
      <param name="Name">必选。 新变量的名称。</param>
      <param name="Type">必选。 一个 <see cref="T:EnvDTE.vsCMTypeRef" /> 常数，该常数指示函数返回的数据类型。 它可以是 <see cref="T:EnvDTE.CodeTypeRef" /> 对象、<see cref="T:EnvDTE.vsCMTypeRef" /> 常数或完全限定的类型名。</param>
      <param name="Position">可选。 默认值 = 0。 将在其后添加新元素的代码元素。 如果该值为 <see cref="T:EnvDTE.CodeElement" />，则紧跟在其后添加新元素。 如果该值为 Long 数据类型，则 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.AddVariable(System.String,System.Object,System.Object,EnvDTE.vsCMAccess)" /> 指示在哪个元素的后面添加新元素。 因为集合从 1 开始计数，所以传递 0 指示应将新元素放置在集合的开始处。 值为 -1 表示应将元素放在结尾处。</param>
      <param name="Access">可选。 一个 <see cref="T:EnvDTE.vsCMAccess" /> 常数。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.Attributes">
      <summary>获取对象的所有特性的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.BeginBatch">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.Classes">
      <summary>获取对象的类集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.CodeElementFromFullName(System.String)">
      <summary>获取对象的指定代码元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
      <param name="Name">必选。 要检索的元素的全名。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.CodeElementFromPoint(EnvDTE.TextPoint,EnvDTE.vsCMElement)">
      <summary>获取源文件中指定位置处的代码元素。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElement" /> 对象。</returns>
      <param name="Point">必选。 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象表示需要其代码元素的编辑器位置。</param>
      <param name="Scope">必选。 <see cref="T:EnvDTE.vsCMElement" /> 值，该值表示包含编辑器位置的指定类型的代码元素。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.CodeElements">
      <summary>获取代码元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.CommitTransaction">
      <summary>提交对象的当前事务。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.Delegates">
      <summary>获取对象的委托的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.DTE">
      <summary>获取顶级扩展性对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.DTE" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.ElementFromID(System.String)">
      <summary>目前尚未实现。</summary>
      <returns>源文件中的代码元素或构造。</returns>
      <param name="ID">要检索的元素的字符串 ID。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.EndBatch">
      <summary>目前尚未实现。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.EndPoint">
      <summary>获取表示代码项的结束位置的编辑点。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.Enums">
      <summary>获取对象的枚举集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.Functions">
      <summary>获取对象的函数集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.IDLImports">
      <summary>从对象的 .idl 文件获取 Import 语句的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.IDLLibraries">
      <summary>获取对象上 Library 元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.Imports">
      <summary>获取对象的 #import 语句的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.Includes">
      <summary>获取对象的 #include 语句的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.Interfaces">
      <summary>获取对象的接口的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.IsBatchOpen">
      <summary>目前尚未实现。</summary>
      <returns>如果批量打开，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.IsManaged">
      <summary>如果使用 ref 关键字，则获得 true。</summary>
      <returns>如果使用 ref 关键字，则为 true；否则，为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.IsMCOldSyntax">
      <summary>获取一个值，该值指示是否使用旧语法编译文件。</summary>
      <returns>如果使用旧语法编译文件，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.IsSynchronized">
      <summary>未实现。</summary>
      <returns>始终为 false。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.Language">
      <summary>获取用于创作代码的编程语言。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeModelLanguageConstants" /> 常数。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.Macros">
      <summary>获取对象的宏（#define 语句）的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.Maps">
      <summary>获取对象的映射集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.Namespaces">
      <summary>获取对象的命名空间的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.Parent">
      <summary>获取给定对象的直接父对象。</summary>
      <returns>一个 <see cref="T:EnvDTE.ProjectItem" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.ParseStatus">
      <summary>获取一个枚举，它定义分析代码模型文件的结果。</summary>
      <returns>一个 <see cref="T:EnvDTE80.vsCMParseStatus" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.Remove(System.Object)">
      <summary>从解决方案中移除指定的项目。</summary>
      <param name="Element">必选。 要从解决方案中移除的项目。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.RemoveEx(System.Object,System.Int32)">
      <summary>从解决方案中移除指定的项目（可选择删除）。</summary>
      <param name="Element">必选。 要从解决方案中移除的项目。</param>
      <param name="Delete">指示元素是否已被删除。 如果 <paramref name="Delete" /> = 1，则元素被删除。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.StartPoint">
      <summary>获取一个 <see cref="T:EnvDTE.TextPoint" /> 对象，该对象定义代码项的开始位置。</summary>
      <returns>一个 <see cref="T:EnvDTE.TextPoint" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.StartTransaction(System.String)">
      <summary>开始事务。</summary>
      <param name="bstrName">必选。 事务的名称。 此名称标识事务完成后放置在撤消堆栈上的项。</param>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.Structs">
      <summary>获取对象的结构元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.Synchronize">
      <summary>将解决方案中的所有代码模型对象与源文件的编辑结果进行同步。</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.Typedefs">
      <summary>获取对象的 typedef 元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.Unions">
      <summary>获取对象的 union 元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.Usings">
      <summary>获取对象的 #using 元素的集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.ValidateMember(System.String,EnvDTE.vsCMElement,System.String)">
      <summary>验证所建议的名称是否是父对象上下文中给定类型的有效 C++ 名称。</summary>
      <returns>如果建议的名称是有效的 C++ 名称，则为 true；否则为 false。</returns>
      <param name="bstrName">必选。 所验证的对象的名称。</param>
      <param name="Kind">必选。 一个 <see cref="T:EnvDTE.vsCMElement" /> 值，表示要验证的对象的类型。</param>
      <param name="bstrType">可选。 所验证的对象的类型。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.ValidateMemberName(System.String,EnvDTE.vsCMElement,Microsoft.VisualStudio.VCCodeModel.vcCMNameValidationOption)">
    </member>
    <member name="P:Microsoft.VisualStudio.VCCodeModel.VCFileCodeModel.Variables">
      <summary>获取对象的变量集合。</summary>
      <returns>一个 <see cref="T:EnvDTE.CodeElements" /> 集合。</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.VCLanguageManager">
      <summary>用于验证 C++ 源文件的各个代码元素的对象。</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCLanguageManager.CompareTokenStreams(System.String,System.String)">
      <summary>比较两个文本流 token-wise（跳过注释和 whitechars）。</summary>
      <returns>如果字符串匹配，则为 true；否则，为 false。</returns>
      <param name="bstr1">用于比较的字符串。</param>
      <param name="bstr2">用于比较的字符串。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCLanguageManager.IsReservedName(System.String,System.Boolean)">
      <summary>确定如果指定的文件名称是有效的 C++ 保留名称。</summary>
      <returns>C++ 保留名称的 true；否则，为 false。</returns>
      <param name="bstrName">要验证的名称。</param>
      <param name="bManaged">可选。 如果它是 Visual C++，则为 true，否则此值是 false。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCLanguageManager.RefreshUserKeywords(System.String)">
      <summary>从文件刷新用户定义的关键字。</summary>
      <param name="bstrUserTypeFile">可选。 用户关键字文件的名称。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCLanguageManager.ValidateFileName(System.String,Microsoft.VisualStudio.VCCodeModel.vsCMValidateFileExtension)">
      <summary>确定如果指定的文件名称是有效的 C++ 文件名称。</summary>
      <returns>如果指定的文件名称是有效的 C++ 文件名称，则为 true；否则为 false。</returns>
      <param name="bstrFile">必选。 要验证的文件名。</param>
      <param name="eFileType">可选。 一个 <see cref="T:Microsoft.VisualStudio.VCCodeModel.vsCMValidateFileExtension" /> 值，表示有效的文件类型。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCLanguageManager.ValidateIdentifier(System.String)">
      <summary>确定如果指定的名称是有效的 C++ 标识符。</summary>
      <returns>如果指定的名称是有效的 C++ 标识符，则为 true；否则为 false。</returns>
      <param name="bstrIdentifier">必选。 要验证的标识符。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCLanguageManager.ValidateParameterNames(System.String,System.String,EnvDTE.vsCMElement)">
      <summary>确定如果指定的参数列表是否有效。</summary>
      <returns>如果指定的参数列表有效，则为 true；否则为 false。</returns>
      <param name="bstrName">必选。 方法的名称。</param>
      <param name="bstrParameterNames">必选。 指定方法的参数。</param>
      <param name="Kind">必选。 一个 <see cref="T:EnvDTE.vsCMElement" /> 值，该值指定参数类型。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCLanguageManager.ValidateQualifiedName(System.String)">
      <summary>确定如果指定的文件名称是有效的 C++ 限定名称。</summary>
      <returns>如果指定的名称是有效的 C++ 限定名称，则为 true；否则为 false。</returns>
      <param name="bstrName">必选。 被验证的限定名。</param>
    </member>
    <member name="M:Microsoft.VisualStudio.VCCodeModel.VCLanguageManager.ValidateType(System.String)">
      <summary>确定如果输入表达式是有效的 C++ 类型表达式。</summary>
      <returns>如果输入表达式是有效的 C++ 类型表达式，则为 true；否则为 false。</returns>
      <param name="bstrType">必选。 所验证的表达式。</param>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.vsCMAddPosition">
      <summary>确定与父对象相关的新代码元素的位置。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vsCMAddPosition.vsCMAddPositionInvalid">
      <summary>未初始化枚举类型。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vsCMAddPosition.vsCMAddPositionDefault">
      <summary>由该库确定的默认位置（与 <see cref="F:Microsoft.VisualStudio.VCCodeModel.vsCMAddPosition.vsCMAddPositionEnd" /> 相同）。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vsCMAddPosition.vsCMAddPositionEnd">
      <summary>在父对象末尾插入项。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vsCMAddPosition.vsCMAddPositionStart">
      <summary>在父对象开始处插入项。</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.vsCMMFCDialogVariableIDType">
      <summary>由 <see cref="P:Microsoft.VisualStudio.VCCodeModel.MFCDialogVariableExtender.IDType" /> 属性使用。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vsCMMFCDialogVariableIDType.vsCMMFCDialogVarIDNone">
      <summary>未初始化枚举类型。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vsCMMFCDialogVariableIDType.vsCMValueType">
      <summary>变量是标准类型（int、bool）。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vsCMMFCDialogVariableIDType.vsCMControlType">
      <summary>变量是控件类型（CButton、CEdit 等。）</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.vsCMSort">
      <summary>由 <see cref="M:Microsoft.VisualStudio.VCCodeModel.VCCodeElements.Sort(Microsoft.VisualStudio.VCCodeModel.vsCMSort)" /> 方法所使用。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vsCMSort.vsCMSortAlpha">
      <summary>按名称元素分类（从 A 到 Z）。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vsCMSort.vsCMSortLine">
      <summary>由元素的位置按源文件或项目（升序）分类。</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.vsCMValidateFileExtension">
      <summary>由 ValidateFile 方法所使用。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vsCMValidateFileExtension.vsCMValidateFileExtNone">
      <summary>任何有效文件都具有扩展名。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vsCMValidateFileExtension.vsCMValidateFileExtCpp">
      <summary>有效文件的扩展名为 .cpp 或 .h。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vsCMValidateFileExtension.vsCMValidateFileExtCppSource">
      <summary>有效文件的扩展名为 .cpp。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vsCMValidateFileExtension.vsCMValidateFileExtHtml">
      <summary>有效文件的扩展名为 .html 或 .htm。</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.VCCodeModel.vsCMWhere">
      <summary>由StartPointOf， EndPointOf 和 Location 属性使用。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vsCMWhere.vsCMWhereInvalid">
      <summary>未初始化枚举类型。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vsCMWhere.vsCMWhereDefault">
      <summary>通过搜索一个定义或声明避免错误。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vsCMWhere.vsCMWhereDeclaration">
      <summary>父对象的声明。</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.VCCodeModel.vsCMWhere.vsCMWhereDefinition">
      <summary>父对象的定义。</summary>
    </member>
  </members>
</doc>