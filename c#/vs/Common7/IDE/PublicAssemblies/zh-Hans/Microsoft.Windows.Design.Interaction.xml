<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Windows.Design.Interaction</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Windows.Design.DataContextValueSourceAttribute">
      <summary>使设计器能够确定某个特定属性在可视化树中的数据上下文继承关系。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.DataContextValueSourceAttribute.#ctor(System.String,System.Boolean)">
      <summary>使用指定的属性名和集合信息初始化 <see cref="T:Microsoft.Windows.Design.DataContextValueSourceAttribute" /> 类的新实例。</summary>
      <param name="dataContextValueSourceProperty">表示数据上下文值的源的属性的名称。</param>
      <param name="isCollectionItem">指示数据上下文是否为某个集合中的项。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.DataContextValueSourceAttribute.#ctor(System.String,System.String,System.Boolean)">
      <summary>使用指定的属性名、上级路径和集合信息初始化 <see cref="T:Microsoft.Windows.Design.DataContextValueSourceAttribute" /> 类的新实例。</summary>
      <param name="dataContextValueSourceProperty">表示数据上下文值的源的属性的名称。</param>
      <param name="ancestorPath">指示为访问数据上下文属性而要遍历的上级属性集的属性路径。</param>
      <param name="isCollectionItem">指示数据上下文是否为某个集合中的项。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.DataContextValueSourceAttribute.AncestorPath">
      <summary>获取用于指示为访问数据上下文属性而要遍历的上级属性集的属性路径。</summary>
      <returns>指向数据上下文属性的路径。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.DataContextValueSourceAttribute.DataContextValueSourceProperty">
      <summary>获取表示数据上下文值的源的属性的名称。</summary>
      <returns>表示数据上下文值的源的属性的名称。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.DataContextValueSourceAttribute.IsCollectionItem">
      <summary>获取一个值，该值指示数据上下文是否为某个集合中的项。</summary>
      <returns>如果数据上下文是某个集合中的项，则为 true；否则为 false。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.DisplayPropertyAttribute">
      <summary>确定当在设计器中显示某个对象的实例时要使用的属性。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.DisplayPropertyAttribute.#ctor(System.String)">
      <summary>用指定的属性名初始化 <see cref="T:Microsoft.Windows.Design.DisplayPropertyAttribute" /> 类的新实例。</summary>
      <param name="displayPropertyName">用于在设计器中显示的属性的名称。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.DisplayPropertyAttribute.#ctor(System.String,System.Type)">
      <summary>使用指定的属性名和值转换器初始化 <see cref="T:Microsoft.Windows.Design.DisplayPropertyAttribute" /> 类的新实例。</summary>
      <param name="displayPropertyName">用于在设计器中显示的属性的名称。</param>
      <param name="valueConverterType">值转换器的类型。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.DisplayPropertyAttribute.DisplayPropertyName">
      <summary>获取用于在设计器中显示的属性的名称。</summary>
      <returns>属性的名称。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.DisplayPropertyAttribute.Equals(System.Object)">
      <summary>确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:System.Object" />。</summary>
      <returns>如果指定的 <see cref="T:System.Object" /> 等于当前的 <see cref="T:System.Object" />，则为 true；否则为 false。</returns>
      <param name="obj">与当前的 <see cref="T:System.Object" /> 进行比较的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.DisplayPropertyAttribute.GetHashCode">
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.DisplayPropertyAttribute.TypeId">
    </member>
    <member name="P:Microsoft.Windows.Design.DisplayPropertyAttribute.ValueConverterType">
      <summary>获取在显示属性时要使用的值转换器的类型。</summary>
      <returns>值转换器类型；如果未指定值转换器，则为 null。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.IToolboxExample">
      <summary>指定可视化设计器工具箱中某一项的示例实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.IToolboxExample.CreateExample(Microsoft.Windows.Design.EditingContext)">
      <summary>创建具有预设属性的工具箱中某一项的示例实例。</summary>
      <returns>与示例实例对应的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</returns>
      <param name="context">编辑上下文。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.IToolboxExample.DisplayName">
      <summary>工具箱中的可本地化显示名称。</summary>
      <returns>工具箱中的可本地化显示名称。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.IToolboxExample.GetImageStream(System.Windows.Size)">
      <summary>获取由 <see cref="P:System.Windows.Media.Imaging.BitmapImage.StreamSource" /> 属性使用的流。</summary>
      <returns>一个 <see cref="T:System.IO.Stream" />，表示示例实例的工具箱位图。</returns>
      <param name="desiredSize">工具箱位图的目标大小。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.IToolboxExampleFactory">
      <summary>提供资产工具箱中引用相同 <see cref="T:System.Type" /> 的示例列表。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.IToolboxExampleFactory.Examples">
      <summary>获取资产工具箱中引用相同 <see cref="T:System.Type" /> 的示例列表。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.IToolboxExample" /> 对象的枚举。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.OrderToken">
      <summary>一个标识分层项的排序顺序的泛型类。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.OrderToken.#ctor(Microsoft.Windows.Design.OrderTokenPrecedence,Microsoft.Windows.Design.OrderToken,Microsoft.Windows.Design.OrderTokenConflictResolution)">
      <summary>基于指定的被引用的 <see cref="T:Microsoft.Windows.Design.OrderToken" />、优先顺序和冲突解决语义，初始化 <see cref="T:Microsoft.Windows.Design.OrderToken" /> 类的新实例。</summary>
      <param name="precedence">此标记基于被引用的标记的优先顺序。</param>
      <param name="reference">被引用的标记。 对于根标记，可能是 null。 根标记是一个不依赖任何标记的标记。</param>
      <param name="conflictResolution">冲突解决语义。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.OrderToken.CompareTo(Microsoft.Windows.Design.OrderToken)">
      <summary>将此顺序标记与指定的顺序标记进行比较。</summary>
      <returns>如果标记具有相同的顺序优先级别，则为 0；如果此顺序先于指定的顺序，则为 -1；其他情况下则为 1。</returns>
      <param name="other">要与此标记进行比较的标记。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.OrderToken.Equals(System.Object)">
      <param name="obj">与当前的 <see cref="T:Microsoft.Windows.Design.OrderToken" /> 进行比较的 <see cref="T:Microsoft.Windows.Design.OrderToken" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.OrderToken.GetHashCode">
    </member>
    <member name="M:Microsoft.Windows.Design.OrderToken.op_Equality(Microsoft.Windows.Design.OrderToken,Microsoft.Windows.Design.OrderToken)">
      <summary>确定两个指定的顺序标记是否相等。</summary>
      <returns>如果 <paramref name="first" /> 等于 <paramref name="second" />，则为 true；否则为 false。</returns>
      <param name="first">要比较的第一个 <see cref="T:Microsoft.Windows.Design.OrderToken" />。</param>
      <param name="second">要比较的第二个 <see cref="T:Microsoft.Windows.Design.OrderToken" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.OrderToken.op_GreaterThan(Microsoft.Windows.Design.OrderToken,Microsoft.Windows.Design.OrderToken)">
      <summary>确定指定的第一个顺序标记是否大于指定的第二个顺序标记。</summary>
      <returns>如果 <paramref name="first" /> 大于 <paramref name="second" />，则为 true；否则为 false。</returns>
      <param name="first">要比较的第一个 <see cref="T:Microsoft.Windows.Design.OrderToken" />。</param>
      <param name="second">要比较的第二个 <see cref="T:Microsoft.Windows.Design.OrderToken" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.OrderToken.op_Inequality(Microsoft.Windows.Design.OrderToken,Microsoft.Windows.Design.OrderToken)">
      <summary>确定两个指定的顺序标记是否不相等。</summary>
      <returns>如果 <paramref name="first" /> 不等于 <paramref name="second" />，则为 true；否则为 false。</returns>
      <param name="first">要比较的第一个 <see cref="T:Microsoft.Windows.Design.OrderToken" />。</param>
      <param name="second">要比较的第二个 <see cref="T:Microsoft.Windows.Design.OrderToken" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.OrderToken.op_LessThan(Microsoft.Windows.Design.OrderToken,Microsoft.Windows.Design.OrderToken)">
      <summary>确定指定的第一个顺序标记是否小于指定的第二个顺序标记。</summary>
      <returns>如果 <paramref name="first" /> 小于 <paramref name="second" />，则为 true；否则为 false。</returns>
      <param name="first">要比较的第一个 <see cref="T:Microsoft.Windows.Design.OrderToken" />。</param>
      <param name="second">要比较的第二个 <see cref="T:Microsoft.Windows.Design.OrderToken" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.OrderToken.ResolveConflict(Microsoft.Windows.Design.OrderToken,Microsoft.Windows.Design.OrderToken)">
      <summary>当两个 <see cref="T:Microsoft.Windows.Design.OrderToken" /> 对象看起来等效时，由默认的 <see cref="M:Microsoft.Windows.Design.OrderToken.CompareTo(Microsoft.Windows.Design.OrderToken)" /> 实现调用。</summary>
      <returns>如果两个标记相等，则为 0；如果左侧标记先于右侧标记，则为 -1；其他情况下则为 1。</returns>
      <param name="left">左侧 <see cref="T:Microsoft.Windows.Design.OrderToken" />。</param>
      <param name="right">右侧 <see cref="T:Microsoft.Windows.Design.OrderToken" />。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.OrderTokenConflictResolution">
      <summary>用于指定排序关系的入选方的枚举。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.OrderTokenConflictResolution.Win">
      <summary>指示此标记在冲突期间应保留。 如果比较两个等效且其 <see cref="T:Microsoft.Windows.Design.OrderTokenConflictResolution" /> 均设置为 <see cref="F:Microsoft.Windows.Design.OrderTokenConflictResolution.Win" /> 的标记，则会将这两个标记视为相等。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.OrderTokenConflictResolution.Lose">
      <summary>指示此标记在冲突期间应丢失。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.OrderTokenPrecedence">
      <summary>指定顺序标记的优先级的枚举。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.OrderTokenPrecedence.Before">
      <summary>指示此标记优先出现。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.OrderTokenPrecedence.After">
      <summary>指示此标记随后出现。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.ThumbnailAttribute">
      <summary>将图标与 Visual Studio 或 Expression Blend 的工具箱中的自定义 Windows Presentation Foundation (WPF) 或 Silverlight 控件关联。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.ThumbnailAttribute.#ctor(System.Type,System.String)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.ThumbnailAttribute" /> 类的新实例。</summary>
      <param name="resourceAssemblyType">指定要在其中查找图像的程序集。</param>
      <param name="resourceName">指定图像的完全限定名称，包括命名空间。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.ThumbnailAttribute.ResourceAssembly">
      <summary>获取包含图标图像的程序集。</summary>
      <returns>包含图标图像的 <see cref="T:System.Reflection.Assembly" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.ThumbnailAttribute.ResourceName">
      <summary>获取图标图像的名称。</summary>
      <returns>图标图像的完全限定名称。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.ToolboxBrowsableAttribute">
      <summary>明确控件在设计器的工具箱浏览器中是否可见。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.ToolboxBrowsableAttribute.#ctor(System.Boolean)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.ToolboxBrowsableAttribute" /> 类的新实例。</summary>
      <param name="browsable">如果工具箱浏览器中的控件可见，则为 true；否则为 false。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.ToolboxBrowsableAttribute.Browsable">
      <summary>获取与该属性相关联的 <see cref="P:Microsoft.Windows.Design.ToolboxBrowsableAttribute.Browsable" /> 标志。</summary>
      <returns>如果工具箱浏览器中的控件可见，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.ToolboxBrowsableAttribute.No">
      <summary>获取 <see cref="P:Microsoft.Windows.Design.ToolboxBrowsableAttribute.Browsable" /> 设置为 false 的 <see cref="T:Microsoft.Windows.Design.ToolboxBrowsableAttribute" />。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.ToolboxBrowsableAttribute" /> 的预定义的静态实例，其 <see cref="P:Microsoft.Windows.Design.ToolboxBrowsableAttribute.Browsable" /> 设置为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.ToolboxBrowsableAttribute.Yes">
      <summary>获取 <see cref="P:Microsoft.Windows.Design.ToolboxBrowsableAttribute.Browsable" /> 设置为 true 的 <see cref="T:Microsoft.Windows.Design.ToolboxBrowsableAttribute" />。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.ToolboxBrowsableAttribute" /> 的预定义的静态实例，其 <see cref="P:Microsoft.Windows.Design.ToolboxBrowsableAttribute.Browsable" /> 设置为 false。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.ToolboxCategoryAttribute">
      <summary>指定在设计器的工具箱中显示某个类的类别。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.ToolboxCategoryAttribute.#ctor(System.String)">
      <summary>用指定的类别路径初始化 <see cref="T:Microsoft.Windows.Design.ToolboxCategoryAttribute" /> 类的新实例。</summary>
      <param name="categoryPath">将此类进行分类所依据的路径。 使用正斜杠 (/) 作为分隔符来表示多个级别。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.ToolboxCategoryAttribute.#ctor(System.String,System.Boolean)">
      <summary>用指定的类别路径和父类别可见性初始化 <see cref="T:Microsoft.Windows.Design.ToolboxCategoryAttribute" /> 类的新实例。</summary>
      <param name="categoryPath">将此类进行分类所依据的路径。 使用正斜杠 (/) 作为分隔符来表示多个级别。</param>
      <param name="alwaysShows">若要指示此类是否出现在所有父类别中，则为 true；否则为 false。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.ToolboxCategoryAttribute.AlwaysShows">
      <summary>获取一个值，该值指示此类是否出现在所有父类别中。</summary>
      <returns>如果此类出现在所有父类别中，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.ToolboxCategoryAttribute.CategoryPath">
      <summary>获取将此类进行分类所依据的路径。</summary>
      <returns>将此类进行分类所依据的路径。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.ToolboxExampleAttribute">
      <summary>指定实现 <see cref="T:Microsoft.Windows.Design.IToolboxExampleFactory" /> 接口的类型。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.ToolboxExampleAttribute.#ctor(System.Type)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.ToolboxExampleAttribute" /> 类的新实例。</summary>
      <param name="toolboxExampleFactoryType">实现 <see cref="T:Microsoft.Windows.Design.IToolboxExampleFactory" /> 接口的类型。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.ToolboxExampleAttribute.ToolboxExampleFactoryType">
      <summary>获取 <see cref="T:System.Type" />，它提供资产工具箱中引用关联 <see cref="T:System.Type" /> 的示例列表。</summary>
      <returns>一个 <see cref="T:System.Type" />，它提供资产工具箱中引用关联 <see cref="T:System.Type" /> 的示例列表。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.ToolboxTabNameAttribute">
      <summary>指定在设计器的工具箱中显示某个类的选项卡。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.ToolboxTabNameAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.ToolboxTabNameAttribute" /> 类的新实例。</summary>
      <param name="tabName">Visual Studio 工具箱选项卡的名称。</param>
    </member>
    <member name="F:Microsoft.Windows.Design.ToolboxTabNameAttribute.CommonTab">
      <summary>指定工具箱的“通用”选项卡。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.ToolboxTabNameAttribute.TabName">
      <summary>获取在安装此项时使用的 Visual Studio 工具箱选项卡。</summary>
      <returns>工具箱选项卡的名称。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.Adapter">
      <summary>用于采用特殊项逻辑。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Adapter.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.Adapter" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Adapter.AdapterType">
      <summary>在派生类中重写时，获取此对象所表示的适配器的类型。</summary>
      <returns>表示适配器类型的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerColors">
      <summary>提供可在装饰器上使用的一组常见画笔。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.AlignmentMarkBrush">
      <summary>获取用于绘制对齐标记的画笔。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" />，它表示用于在 WPF 设计器 中绘制对齐标记的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.AlignmentMarkBrushKey">
      <summary>获取对齐标记的颜色的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制对齐标记的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.AlignmentMarkColor">
      <summary>获取或设置用于绘制对齐标记的颜色。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Color" />，它表示用于在 WPF 设计器 中绘制对齐标记的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.AlignmentMarkColorKey">
      <summary>获取对齐标记的颜色的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制对齐标记的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.ElementBorderBrush">
      <summary>获取用于绘制元素边框的画笔。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" />，它表示用于在 WPF 设计器 中绘制元素的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.ElementBorderBrushKey">
      <summary>获取元素边框的画笔的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制元素的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.ElementBorderColor">
      <summary>获取或设置用于绘制元素边框的颜色。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Color" />，它表示用于在 WPF 设计器 中绘制元素的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.ElementBorderColorKey">
      <summary>获取元素边框的颜色的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制元素的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.GlyphFillBrush">
      <summary>获取用于绘制任何标志符号的填充的画笔。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" />，它表示用于在 WPF 设计器 中绘制标志符号的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.GlyphFillBrushKey">
      <summary>获取或设置用于填充标志符号的画笔的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制标志符号的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.GlyphFillColor">
      <summary>获取或设置用于绘制任何标志符号的填充的颜色。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Color" />，它表示用于在 WPF 设计器 中绘制标志符号的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.GlyphFillColorKey">
      <summary>获取或设置用于填充标志符号的颜色的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制标志符号的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleBorderBrush">
      <summary>获取用于绘制图柄边框的画笔。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" />，它表示用于在 WPF 设计器 中绘制图柄边框的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleBorderBrushKey">
      <summary>获取图柄的边框画笔的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制图柄的标准边框画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleBorderColor">
      <summary>获取图柄边框的颜色。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Color" />，它表示用于在 WPF 设计器 中绘制图柄边框的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleBorderColorKey">
      <summary>获取图柄边框的颜色的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制图柄的标准边框颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleEmptyFillBrush">
      <summary>获取用于绘制图柄的填充（当图柄无法调整大小时）的画笔。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" />，它表示用于在 WPF 设计器 中绘制图柄的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleEmptyFillBrushKey">
      <summary>获取用于绘制图柄（当图柄无法调整大小时）的画笔的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制图柄的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleEmptyFillColor">
      <summary>获取用于绘制图柄（当图柄无法调整大小时）的颜色。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Color" />，它表示用于在 WPF 设计器 中绘制图柄的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleEmptyFillColorKey">
      <summary>获取用于绘制图柄（当图柄无法调整大小时）的颜色的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制图柄的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillBrush">
      <summary>获取用于绘制图柄填充的画笔。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" />，它表示用于在 WPF 设计器 中绘制图柄的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillBrushKey">
      <summary>获取图柄的画笔的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制图柄的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillColor">
      <summary>获取图柄的颜色。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Color" />，它表示用于在 WPF 设计器 中绘制图柄的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillColorKey">
      <summary>获取图柄的颜色的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制图柄的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillHoverBrush">
      <summary>获取用于绘制图柄的填充（当鼠标光标指向图柄时）的画笔。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" />，它表示用于绘制图柄的（当在 WPF 设计器 中将鼠标光标移动到图柄上面时）标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillHoverBrushKey">
      <summary>获取用于绘制图柄（当鼠标光标指向图柄时）的画笔的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它用于表示绘制图柄（当在 WPF 设计器 中将鼠标光标移动到图柄上面时）的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillHoverColor">
      <summary>获取用于绘制图柄（当鼠标光标指向图柄时）的颜色。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Color" />，它表示用于绘制图柄（当在 WPF 设计器 中将鼠标光标移动到图柄上面时）的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillHoverColorKey">
      <summary>获取用于绘制图柄（当鼠标光标指向图柄时）的颜色的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它用于表示绘制图柄（当在 WPF 设计器 中将鼠标光标移动到图柄上面时）的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillPressedBrush">
      <summary>获取用于绘制图柄的填充（当按下图柄时）的画笔。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" />，它表示用于在 WPF 设计器 中绘制按下的图柄的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillPressedBrushKey">
      <summary>获取用于绘制图柄（当按下图柄时）的画笔的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制按下的图柄的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillPressedColor">
      <summary>获取用于绘制图柄（当按下图柄时）的颜色。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Color" />，它表示用于在 WPF 设计器 中绘制按下的图柄的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillPressedColorKey">
      <summary>获取用于绘制图柄（当按下图柄时）的颜色的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制按下的图柄的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleContentBrush">
      <summary>获取用于绘制移动图柄的内容的画笔。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" />，它表示用于在 WPF 设计器 中绘制移动图柄的内容的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleContentBrushKey">
      <summary>获取用于绘制移动图柄的内容的画笔的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制移动图柄的内容的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleContentColor">
      <summary>获取用于绘制移动图柄的内容的颜色。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Color" />，它表示用于在 WPF 设计器 中绘制移动图柄的内容的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleContentColorKey">
      <summary>获取用于绘制移动图柄的内容的颜色的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制移动图柄的内容的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleFillBrush">
      <summary>获取用于绘制移动图柄的填充（当鼠标光标未指向移动图柄时）的画笔。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" />，它表示用于在 WPF 设计器 中绘制移动图柄的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleFillBrushKey">
      <summary>获取用于绘制移动图柄的填充（当鼠标光标未指向移动图柄时）的画笔的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制移动图柄的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleFillColor">
      <summary>获取用于绘制移动图柄的填充（当鼠标光标未指向移动图柄时）的颜色。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Color" />，它表示用于在 WPF 设计器 中绘制移动图柄的内容的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleFillColorKey">
      <summary>获取用于绘制移动图柄的填充（当鼠标光标未指向移动图柄时）的颜色的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制移动图柄的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleFillHoverBrush">
      <summary>获取用于绘制移动图柄的填充（当鼠标光标指向移动图柄时）的画笔。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" />，它表示用于绘制移动图柄的（当在 WPF 设计器 中将鼠标光标移动到移动图柄上面时）标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleFillHoverBrushKey">
      <summary>获取用于绘制移动图柄的填充（当鼠标光标指向移动图柄时）的画笔的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它用于表示绘制移动图柄（当在 WPF 设计器 中将鼠标光标移动到移动图柄上面时）的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleFillHoverColor">
      <summary>获取用于绘制移动图柄的填充（当鼠标光标指向移动图柄时）的颜色。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Color" />，它表示用于绘制移动图柄（当在 WPF 设计器 中将鼠标光标移动到移动图柄上面时）的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleFillHoverColorKey">
      <summary>获取用于绘制移动图柄的填充（当鼠标光标指向移动图柄时）的颜色的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它用于表示绘制移动图柄（当在 WPF 设计器 中将鼠标光标移动到移动图柄上面时）的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.RailFillBrush">
      <summary>获取用于绘制围栏的填充画笔。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" />，它表示用于在 WPF 设计器 中绘制围栏的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.RailFillBrushKey">
      <summary>获取用于绘制围栏的画笔的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制围栏的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.RailFillColor">
      <summary>获取用于绘制围栏的填充颜色。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Color" />，它表示用于在 WPF 设计器 中绘制围栏的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.RailFillColorKey">
      <summary>获取或设置用于绘制围栏的颜色的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制围栏的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SelectionFrameBorderBrush">
      <summary>获取用于绘制围绕控件的选择框的画笔。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" />，它表示用于在 WPF 设计器 中绘制选择框的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SelectionFrameBorderBrushKey">
      <summary>获取用于绘制围绕控件的选择框的画笔的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制选择框的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SelectionFrameBorderColor">
      <summary>获取用于绘制围绕控件的选择框的颜色。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Color" />，它表示用于在 WPF 设计器 中绘制选择框的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SelectionFrameBorderColorKey">
      <summary>获取用于绘制围绕控件的选择框的颜色的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制选择框的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SelectionFrameFillBrush">
      <summary>获取用于绘制对控件使用的选择框的填充画笔。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" />，它表示用于在 WPF 设计器 中绘制选择框的标准填充画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SelectionFrameFillBrushKey">
      <summary>获取用于绘制对控件使用的选择框的画笔的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制选择框的标准填充画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SelectionFrameFillColor">
      <summary>获取用于绘制对控件使用的选择框的填充颜色。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Color" />，它表示用于在 WPF 设计器 中绘制选择框的标准填充颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SelectionFrameFillColorKey">
      <summary>获取用于绘制对控件使用的选择框的颜色的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制选择框的标准填充颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SimpleWashBrush">
      <summary>获取简单的水洗画笔。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" />，它表示用于在 WPF 设计器 中绘制简单水洗效果的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SimpleWashBrushKey">
      <summary>获取用于简单水洗效果的画笔的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制简单水洗效果的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SimpleWashColor">
      <summary>获取简单的水洗颜色。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Color" />，它表示用于在 WPF 设计器 中绘制简单水洗效果的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SimpleWashColorKey">
      <summary>获取用于简单水洗效果的颜色的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制简单水洗效果的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.ToggledGlyphFillBrush">
      <summary>获取用于绘制已切换标志符号的填充的画笔。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" />，它表示用于在 WPF 设计器 中绘制已切换标志符号的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.ToggledGlyphFillBrushKey">
      <summary>获取用于已切换标志符号的填充的画笔的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制已切换标志符号的标准画笔。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.ToggledGlyphFillColor">
      <summary>获取用于绘制已切换标志符号的填充的颜色。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Color" />，它表示用于在 WPF 设计器 中绘制已切换标志符号的标准颜色。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.ToggledGlyphFillColorKey">
      <summary>获取用于已切换标志符号的填充的颜色的资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示用于在 WPF 设计器 中绘制已切换标志符号的标准颜色。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerCoordinateSpace">
      <summary>定义一个供在 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> 中使用的二维坐标空间。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerCoordinateSpaces">
      <summary>定义设计器中两个常用的坐标空间。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerCoordinateSpaces.Default">
      <summary>获取装饰器的默认坐标空间。</summary>
      <returns>一个用于指定默认装饰器空间的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerCoordinateSpace" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerFonts">
      <summary>提供可在装饰器上使用的一组常见画笔。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerFonts.FontFamily">
      <summary>获取一个 <see cref="T:System.Windows.Media.FontFamily" /> 的当前项。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.FontFamily" />，表示 WPF 设计器 中的标准字体系列。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerFonts.FontFamilyKey">
      <summary>为装饰器的 <see cref="T:System.Windows.Media.FontFamily" /> 获取资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示 WPF 设计器 中的标准字体系列。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerFonts.FontSize">
      <summary>获取绘制当前 <see cref="T:System.Windows.Media.FontFamily" /> 的字体大小。</summary>
      <returns>一个 double，它表示 WPF 设计器 中的标准字号。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerFonts.FontSizeKey">
      <summary>为装饰器的字体大小获取资源键。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> 字典中的一个 <see cref="T:System.Windows.ResourceKey" />，它表示 WPF 设计器 中的标准字号。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerHorizontalAlignment">
      <summary>一个枚举，它定义装饰器相对于设计图面上的元素的水平对齐方式。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerHorizontalAlignment.Left">
      <summary>装饰器与左侧对齐。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerHorizontalAlignment.Center">
      <summary>装饰器居中对齐。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerHorizontalAlignment.Right">
      <summary>装饰器与右侧对齐。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerHorizontalAlignment.Stretch">
      <summary>装饰器处于拉伸状态。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerHorizontalAlignment.OutsideLeft">
      <summary>装饰器在外部与左侧对齐。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerHorizontalAlignment.OutsideRight">
      <summary>装饰器在外部与右侧对齐。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerLayout">
      <summary>执行 <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> 上的装饰器的布局。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerLayout.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerLayout" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerLayout.AdornerPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>只要存储在 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerProperties" /> 类中的其中一个属性发生更改，就对装饰器布局进行了调用。</summary>
      <param name="adorner">其属性已更改的装饰器。</param>
      <param name="args">一个 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />，其中包含属性更改的详细信息。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerLayout.Arrange(System.Windows.UIElement)">
      <summary>对指定装饰器执行布局排列。</summary>
      <param name="adorner">要进行排列的装饰器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerLayout.ArrangeChildren(System.Windows.FrameworkElement,System.Windows.Controls.UIElementCollection,System.Windows.Size)">
      <summary>对 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> 执行布局排列。</summary>
      <returns>进行布局排列之后 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> 的大小。</returns>
      <param name="parent">父 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" />。</param>
      <param name="internalChildren">父级中的 <see cref="T:System.Windows.Controls.UIElementCollection" />。</param>
      <param name="finalSize">
        <paramref name="parent" /> 希望 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> 采用的最终大小。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerLayout.EvaluateLayout(Microsoft.Windows.Design.Interaction.DesignerView,System.Windows.UIElement)">
      <summary>获取一个值，该值指示装饰器是否保留在 UI 树中。</summary>
      <returns>如果 <paramref name="adorner" /> 应保留在 UI 树中，则为 true。 如果与其关联的一个或多个可视对象不再是 UI 树的一部分，则为 false。</returns>
      <param name="view">用来评估布局的设计器视图。</param>
      <param name="adorner">要评估的装饰器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="view" /> 或 <paramref name="adorner" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerLayout.IsAssociated(System.Windows.UIElement,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>获取一个值，该值指示指定的模型项是否与此装饰器关联。</summary>
      <returns>如果装饰器与指定的模型项关联，则为 true。</returns>
      <param name="adorner">要检查的装饰器。</param>
      <param name="item">要比较的项。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 或 <paramref name="item" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerLayout.Measure(System.Windows.UIElement,System.Windows.Size)">
      <summary>对指定装饰器执行布局度量。</summary>
      <param name="adorner">要进行度量的装饰器。</param>
      <param name="constraint">装饰器的约束大小。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 为 null。</exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerOrder">
      <summary>指定装饰器在设计视图中的 Z 顺序。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerOrder.Background">
      <summary>获取指示放置在内容之后的装饰器的值。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" /> 指定的 z-顺序底部。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerOrder.Content">
      <summary>获取指示与其他内容装饰器放置在一起的装饰器的值。 这是默认值。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" />，指定 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> 的 Z 顺序。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerOrder.CreateAbove(Microsoft.Windows.Design.Interaction.AdornerOrder)">
      <summary>创建新的装饰器顺序并且将该装饰器放置于提供的 Z 顺序的引用之上。</summary>
      <returns>用指定的引用替换装饰器上方的装饰器的新 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" />。</returns>
      <param name="reference">要放在装饰器上面的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reference" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerOrder.CreateBelow(Microsoft.Windows.Design.Interaction.AdornerOrder)">
      <summary>创建新的装饰器顺序并且将该装饰器放置于提供的 Z 顺序的引用之下。</summary>
      <returns>用指定的引用替换装饰器下方的装饰器的新 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" />。</returns>
      <param name="reference">要放在装饰器下面的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reference" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerOrder.Foreground">
      <summary>获取指示放置在内容装饰器之前的装饰器的值。</summary>
      <returns>一个指定 Z 顺序的顶部的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerPanel">
      <summary>为在设计时用作装饰器的 Windows 演示基础 (WPF) 控件提供容器。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerHorizontalAlignment">
      <summary>获取或设置父 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> 内的子元素的 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerHorizontalAlignment" /> 值。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> 的 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerHorizontalAlignment" />。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerHorizontalAlignmentProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerHorizontalAlignment" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerHorizontalAlignment" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerMargin">
      <summary>获取或设置父 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> 内的子元素的 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerMargin" /> 值。</summary>
      <returns>一个表示 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> 的边距的 <see cref="T:System.Windows.Thickness" />。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerMarginProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerMargin" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerMargin" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerVerticalAlignment">
      <summary>获取或设置父 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> 内的子元素的 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerVerticalAlignment" /> 值。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> 的 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerVerticalAlignment" />。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerVerticalAlignmentProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerVerticalAlignment" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerVerticalAlignment" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.ArrangeOverride(System.Windows.Size)">
      <returns>一个 <see cref="T:System.Windows.Size" /> 对象，表示排列后的大小。</returns>
      <param name="finalSize">此排列所允许的最终大小。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.FromVisual(System.Windows.DependencyObject)">
      <summary>返回作为指定 <see cref="T:System.Windows.Media.Visual" /> 的父级的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" />。</summary>
      <returns>作为可视元素父级的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" />，如果可视元素没有父级视图，则为 null。</returns>
      <param name="visual">作为 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> 的子级的 <see cref="T:System.Windows.Media.Visual" /> 或 <see cref="T:System.Windows.Media.Media3D.Visual3D" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visual" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.GetAdornerHorizontalAlignment(System.Windows.DependencyObject)">
      <summary>获取指定的 <see cref="T:System.Windows.DependencyObject" /> 的 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerHorizontalAlignment" /> 附加属性。</summary>
      <returns>
        <paramref name="obj" /> 的 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerHorizontalAlignment" /> 属性值。</returns>
      <param name="obj">从中读取属性值的元素。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.GetAdornerMargin(System.Windows.DependencyObject)">
      <summary>获取指定的 <see cref="T:System.Windows.DependencyObject" /> 的 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerMargin" /> 附加属性。</summary>
      <returns>
        <see cref="T:System.Windows.Thickness" />，表示 <paramref name="obj" /> 的 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerMargin" />。</returns>
      <param name="obj">从中读取属性值的元素。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.GetAdornerVerticalAlignment(System.Windows.DependencyObject)">
      <summary>获取指定的 <see cref="T:System.Windows.DependencyObject" /> 的 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerVerticalAlignment" /> 附加属性。</summary>
      <returns>
        <paramref name="obj" /> 的 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerVerticalAlignment" /> 属性值。</returns>
      <param name="obj">从中读取属性值的元素。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.GetHorizontalStretch(System.Windows.UIElement)">
      <summary>获取指定 <see cref="T:System.Windows.DependencyObject" /> 的 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.HorizontalStretch" /> 附加属性的值。</summary>
      <returns>装饰器面板沿 x 轴的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerStretch" />。 默认值为 <see cref="F:Microsoft.Windows.Design.Interaction.AdornerStretch.None" />。</returns>
      <param name="adorner">从中读取 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.HorizontalStretch" /> 附加属性的 <see cref="T:System.Windows.UIElement" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.GetLayoutClip(System.Windows.Size)">
      <summary>返回 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> 的布局剪辑。</summary>
      <returns>一个表示 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> 的布局剪辑的 <see cref="T:System.Windows.Media.Geometry" />。</returns>
      <param name="layoutSlotSize">
        <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> 的大小。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.GetPlacements(System.Windows.UIElement)">
      <summary>注意：此 API 现在已过时。获取指定 <see cref="T:System.Windows.DependencyObject" /> 的 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Placements" /> 附加属性的值。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection" />，存放表示 <paramref name="adorner" /> 的大小和位置的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementValue" /> 对象。</returns>
      <param name="adorner">要定位的 <see cref="T:System.Windows.UIElement" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.GetTask(System.Windows.UIElement)">
      <summary>从指定的元素读取 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Task" /> 附加属性。</summary>
      <returns>表示与 <paramref name="adorner" /> 关联的任务的 <see cref="T:Microsoft.Windows.Design.Interaction.Task" />。</returns>
      <param name="adorner">要从中读取 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Task" /> 附加属性的 <see cref="T:System.Windows.UIElement" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.GetVerticalStretch(System.Windows.UIElement)">
      <summary>获取指定 <see cref="T:System.Windows.DependencyObject" /> 的 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.VerticalStretch" /> 附加属性的值。</summary>
      <returns>装饰器面板沿 y 轴的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerStretch" />。 默认值为 <see cref="F:Microsoft.Windows.Design.Interaction.AdornerStretch.None" />。</returns>
      <param name="adorner">要从中读取 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.VerticalStretch" /> 附加属性的 <see cref="T:System.Windows.UIElement" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPanel.HorizontalStretch">
      <summary>获取或设置 x 轴的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerStretch" /> 值。</summary>
      <returns>装饰器面板沿 x 轴的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerStretch" />。 默认值为 <see cref="F:Microsoft.Windows.Design.Interaction.AdornerStretch.None" />。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPanel.HorizontalStretchProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.HorizontalStretch" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.HorizontalStretch" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPanel.IsContentFocusable">
      <summary>获取或设置 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.IsContentFocusable" /> 值。</summary>
      <returns>如果装饰器面板的内容可以接收焦点，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPanel.IsContentFocusableProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.IsContentFocusable" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.IsContentFocusable" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.MeasureOverride(System.Windows.Size)">
      <summary>度量装饰器。</summary>
      <returns>表示元素大小的 Size 对象。</returns>
      <param name="availableSize">元素可占据的可用大小。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Model">
      <summary>获取或设置与装饰器面板关联的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</summary>
      <returns>与装饰器面板关联的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPanel.ModelProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Model" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Model" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPanel.OffsetRect">
      <summary>获取或设置定义装饰器面板与所装饰控件的偏移量的矩形。</summary>
      <returns>定义装饰器面板与所装饰控件的偏移量的矩形。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>当某个未处理的 <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> 附加事件在其路由中到达派生自该类的某个元素时调用。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Order">
      <summary>获取或设置 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Order" /> 值。</summary>
      <returns>指定装饰器面板的 Z 顺序的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" /> 实例。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPanel.OrderProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Order" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Order" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Placements">
      <summary>注意：此 API 现在已过时。获取或设置 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementValue" /> 对象的集合，这些对象指定装饰器在装饰器面板中的大小和位置。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection" />，存放表示 <paramref name="adorner" /> 的大小和位置的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementValue" /> 对象。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPanel.PlacementsProperty">
      <summary>注意：此 API 现在已过时。标识 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Placements" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Placements" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.SetAdornerHorizontalAlignment(System.Windows.DependencyObject,Microsoft.Windows.Design.Interaction.AdornerHorizontalAlignment)">
      <summary>设置所提供元素的 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerHorizontalAlignment" /> 附加属性。</summary>
      <param name="obj">附加属性所写入的元素。</param>
      <param name="value">要设置到 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> 的 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerHorizontalAlignment" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.SetAdornerMargin(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>设置所提供元素的指定 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerMargin" /> 附加属性。</summary>
      <param name="obj">附加属性所写入的元素。</param>
      <param name="value">要设置到 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> 的边距的 <see cref="T:System.Windows.Thickness" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.SetAdornerVerticalAlignment(System.Windows.DependencyObject,Microsoft.Windows.Design.Interaction.AdornerVerticalAlignment)">
      <summary>设置所提供元素的指定 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerVerticalAlignment" /> 附加属性。</summary>
      <param name="obj">附加属性所写入的元素。</param>
      <param name="value">要设置到 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> 的 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.AdornerVerticalAlignment" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.SetHorizontalStretch(System.Windows.UIElement,Microsoft.Windows.Design.Interaction.AdornerStretch)">
      <summary>设置所提供元素的 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.HorizontalStretch" /> 附加属性的值。</summary>
      <param name="adorner">要将 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.HorizontalStretch" /> 附加属性写入到的 <see cref="T:System.Windows.UIElement" />。</param>
      <param name="value">水平维度的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerStretch" /> 值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.SetPlacements(System.Windows.UIElement,Microsoft.Windows.Design.Interaction.AdornerPlacementCollection)">
      <summary>注意：此 API 现在已过时。设置所提供元素的 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Placements" /> 附加属性的值。</summary>
      <param name="adorner">要将 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.HorizontalStretch" /> 附加属性写入到的 <see cref="T:System.Windows.UIElement" />。</param>
      <param name="value">一个 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection" />，存放表示 <paramref name="adorner" /> 的大小和位置的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementValue" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.SetTask(System.Windows.UIElement,Microsoft.Windows.Design.Interaction.Task)">
      <summary>将 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Task" /> 附加属性写入到指定元素。</summary>
      <param name="adorner">要将 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Task" /> 附加属性写入到的元素。</param>
      <param name="value">要设置的 <see cref="T:Microsoft.Windows.Design.Interaction.Task" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.SetVerticalStretch(System.Windows.UIElement,Microsoft.Windows.Design.Interaction.AdornerStretch)">
      <summary>设置所提供元素的 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.VerticalStretch" /> 附加属性的值。</summary>
      <param name="adorner">要将 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.VerticalStretch" /> 附加属性写入到的元素。</param>
      <param name="value">垂直维度的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerStretch" /> 值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPanel.UseMirrorTransform">
      <summary>确定是否使用镜像转换。</summary>
      <returns>如果要使用镜像转换，则为 true；否则为 false。 始终返回 true。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPanel.VerticalStretch">
      <summary>获取或设置 y 轴的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerStretch" /> 值。</summary>
      <returns>装饰器面板沿 y 轴的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerStretch" />。 默认值为 <see cref="F:Microsoft.Windows.Design.Interaction.AdornerStretch.None" />。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPanel.VerticalStretchProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.VerticalStretch" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.VerticalStretch" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPanel.View">
      <summary>获取或设置装饰器面板的关联视图。</summary>
      <returns>一个表示关联视图的 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection">
      <summary>支持在 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> 内精确放置装饰器。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.PositionRelativeToAdornerHeight(System.Double,System.Double)">
      <summary>添加一个位置术语，它相对于装饰器的高度定位装饰器面板。</summary>
      <param name="factor">一个用于与装饰器的高度相乘的系数。</param>
      <param name="offset">一个添加到结果中的偏移量。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.PositionRelativeToAdornerHeight(System.Double,System.Double,System.Windows.DependencyObject)">
      <summary>添加一个位置术语，它相对于指定装饰器的高度定位装饰器面板。</summary>
      <param name="factor">一个用于与装饰器的高度相乘的系数。</param>
      <param name="offset">一个添加到结果中的偏移量。</param>
      <param name="relativeTo">一个可选装饰器。 如果提供，则相对于装饰器的高度进行定位。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.PositionRelativeToAdornerWidth(System.Double,System.Double)">
      <summary>添加一个位置术语，它相对于装饰器的宽度定位装饰器面板。</summary>
      <param name="factor">一个用于与装饰器的宽度相乘的系数。</param>
      <param name="offset">一个添加到结果中的偏移量。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.PositionRelativeToAdornerWidth(System.Double,System.Double,System.Windows.DependencyObject)">
      <summary>添加一个位置术语，它相对于指定装饰器的宽度定位装饰器面板。</summary>
      <param name="factor">一个用于与装饰器的宽度相乘的系数。</param>
      <param name="offset">一个添加到结果中的偏移量。</param>
      <param name="relativeTo">一个可选装饰器。 如果提供，则相对于装饰器的宽度进行定位。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.PositionRelativeToContentHeight(System.Double,System.Double)">
      <summary>添加一个位置术语，它相对于装饰内容的高度定位装饰器面板。</summary>
      <param name="factor">一个用于与所装饰内容的高度相乘的系数。</param>
      <param name="offset">一个添加到结果中的偏移量。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.PositionRelativeToContentHeight(System.Double,System.Double,Microsoft.Windows.Design.Interaction.ViewItem)">
      <summary>向此组添加一个位置术语，它相对于内容的高度定位装饰器面板。</summary>
      <param name="factor">一个用于与内容的高度相乘的系数。</param>
      <param name="offset">一个添加到结果中的偏移量。</param>
      <param name="relativeTo">如果提供，则相对于元素的高度（而不是内容的高度）进行定位。 这是一个可选元素。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.PositionRelativeToContentWidth(System.Double,System.Double)">
      <summary>添加一个位置术语，它相对于所装饰内容的宽度定位装饰器面板。</summary>
      <param name="factor">一个用于与所装饰内容的宽度相乘的系数。</param>
      <param name="offset">一个添加到结果中的偏移量。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.PositionRelativeToContentWidth(System.Double,System.Double,Microsoft.Windows.Design.Interaction.ViewItem)">
      <summary>向此组添加一个位置术语，它相对于内容的宽度定位装饰器面板。</summary>
      <param name="factor">一个用于与内容的宽度相乘的系数。</param>
      <param name="offset">一个添加到结果中的偏移量。</param>
      <param name="relativeTo">如果提供，则相对于元素的宽度（而不是内容的宽度）进行定位。 这是可选元素。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.SizeRelativeToAdornerDesiredHeight(System.Double,System.Double)">
      <summary>添加一个位置术语，它相对于装饰器所需的高度调整装饰器面板的大小。</summary>
      <param name="factor">一个用于与装饰器的所需高度相乘的系数。</param>
      <param name="offset">一个添加到结果中的偏移量。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.SizeRelativeToAdornerDesiredHeight(System.Double,System.Double,System.Windows.DependencyObject)">
      <summary>添加一个位置术语，它相对于指定装饰器所需的高度调整装饰器面板的大小。</summary>
      <param name="factor">一个用于与指定装饰器的所需高度相乘的系数。</param>
      <param name="offset">一个添加到结果中的偏移量。</param>
      <param name="relativeTo">一个可选装饰器。 如果提供，则相对于装饰器的高度调整大小。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.SizeRelativeToAdornerDesiredWidth(System.Double,System.Double)">
      <summary>添加一个位置术语，它相对于装饰器所需的宽度调整装饰器面板的大小。</summary>
      <param name="factor">一个用于与装饰器的所需宽度相乘的系数。</param>
      <param name="offset">一个添加到结果中的偏移量。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.SizeRelativeToAdornerDesiredWidth(System.Double,System.Double,System.Windows.DependencyObject)">
      <summary>添加一个位置术语，它相对于指定装饰器所需的宽度调整装饰器面板的大小。</summary>
      <param name="factor">一个用于与装饰器的所需宽度相乘的系数。</param>
      <param name="offset">一个添加到结果中的偏移量。</param>
      <param name="relativeTo">一个可选装饰器。 如果提供，则相对于装饰器的宽度调整大小。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.SizeRelativeToContentHeight(System.Double,System.Double)">
      <summary>添加一个位置术语，它相对于所装饰内容的高度调整装饰器面板的大小。</summary>
      <param name="factor">一个用于与内容的高度相乘的系数。</param>
      <param name="offset">一个添加到结果中的偏移量。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.SizeRelativeToContentHeight(System.Double,System.Double,Microsoft.Windows.Design.Interaction.ViewItem)">
      <summary>向此组添加一个位置术语，它相对于内容的高度调整装饰器面板的大小。</summary>
      <param name="factor">一个用于与内容的高度相乘的系数。</param>
      <param name="offset">一个添加到结果中的偏移量。</param>
      <param name="relativeTo">如果提供，则相对于元素的高度调整大小。 这是可选元素。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.SizeRelativeToContentWidth(System.Double,System.Double)">
      <summary>添加一个位置术语，它相对于所装饰内容的宽度调整装饰器面板的大小。</summary>
      <param name="factor">一个用于与内容的宽度相乘的系数。</param>
      <param name="offset">一个添加到结果中的偏移量。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.SizeRelativeToContentWidth(System.Double,System.Double,Microsoft.Windows.Design.Interaction.ViewItem)">
      <summary>向此组添加一个位置术语，它相对于内容的宽度调整装饰器面板的大小。</summary>
      <param name="factor">一个用于与内容的宽度相乘的系数。</param>
      <param name="offset">一个添加到结果中的偏移量。</param>
      <param name="relativeTo">如果提供，则相对于元素的宽度调整大小。 这是可选元素。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerPlacementDimension">
      <summary>一个枚举，定义应对 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementValue" /> 结构应用的维度。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPlacementDimension.Left">
      <summary>左侧。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPlacementDimension.Top">
      <summary>顶边。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPlacementDimension.Right">
      <summary>右侧。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPlacementDimension.Bottom">
      <summary>底边。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPlacementDimension.Width">
      <summary>宽度。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPlacementDimension.Height">
      <summary>高度。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerPlacementValue">
      <summary>表示 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection" /> 中的单个值。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementValue.#ctor(Microsoft.Windows.Design.Interaction.AdornerPlacementDimension,System.Double)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementValue" /> 类的新实例。</summary>
      <param name="term">应对此值应用的术语。</param>
      <param name="contribution">此值在整个放置中所占的贡献。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPlacementValue.Contribution">
      <summary>获取或设置影响位置术语的距离。</summary>
      <returns>一个 double，它是影响位置术语的距离。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementValue.Equals(Microsoft.Windows.Design.Interaction.AdornerPlacementValue)">
      <summary>返回一个值，该值指示此实例是否与指定的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementValue" /> 相等。</summary>
      <returns>如果对象相等，则为 true；否则为 false。</returns>
      <param name="value">要测试的值。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementValue.Equals(System.Object)">
      <summary>返回一个值，该值指示此实例是否等于指定的对象。</summary>
      <param name="obj">要测试的对象。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementValue.GetHashCode">
      <summary>返回此结构的哈希代码。</summary>
      <returns>此结构的哈希代码。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementValue.op_Equality(Microsoft.Windows.Design.Interaction.AdornerPlacementValue,Microsoft.Windows.Design.Interaction.AdornerPlacementValue)">
      <summary>确定两个指定的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementValue" /> 对象是否具有相同的值。</summary>
      <returns>如果值相等，则为 true；否则，为 false。</returns>
      <param name="placementValue1">要测试的第一个值。</param>
      <param name="placementValue2">要测试的第二个值。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementValue.op_Inequality(Microsoft.Windows.Design.Interaction.AdornerPlacementValue,Microsoft.Windows.Design.Interaction.AdornerPlacementValue)">
      <summary>确定两个指定的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementValue" /> 对象是否具有不同的值。</summary>
      <returns>如果值不相等，则为 true；否则为 false。</returns>
      <param name="placementValue1">要测试的第一个值。</param>
      <param name="placementValue2">要测试的第二个值。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPlacementValue.Term">
      <summary>获取或设置受此贡献量影响的位置术语。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementDimension" />，它是受此贡献量影响的位置术语。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerProperties">
      <summary>为 UI 元素定义一组附加属性以启用装饰器外观和行为。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.GetLayout(System.Windows.DependencyObject)">
      <summary>获取用于根据装饰器的模型或视图排列该装饰器的布局。</summary>
      <returns>
        <paramref name="adorner" /> 的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerLayout" />。</returns>
      <param name="adorner">要检索其布局的装饰器元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.GetModel(System.Windows.DependencyObject)">
      <summary>获取与指定装饰器关联的模型项。</summary>
      <returns>与 <paramref name="adorner" /> 关联的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</returns>
      <param name="adorner">要检索其模型项装饰器元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.GetOrder(System.Windows.DependencyObject)">
      <summary>获取指定装饰器的相对 Z 顺序。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" />，指定 <paramref name="adorner" /> 的相对 Z 顺序。</returns>
      <param name="adorner">要检索其顺序的装饰器元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.GetRenderTransform(System.Windows.DependencyObject)">
      <summary>获取装饰器的呈现转换。</summary>
      <returns>与 <paramref name="adorner" /> 关联的呈现转换；如果尚未设置视图，则为 null。</returns>
      <param name="adorner">要检索其呈现转换的装饰器元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.GetTask(System.Windows.DependencyObject)">
      <summary>获取指定装饰器的任务。</summary>
      <returns>与 <paramref name="adorner" /> 关联的 <see cref="T:Microsoft.Windows.Design.Interaction.Task" />。</returns>
      <param name="adorner">要检索其任务的装饰器元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.GetView(System.Windows.DependencyObject)">
      <summary>获取指定装饰器的视图。</summary>
      <returns>与 <paramref name="adorner" /> 关联的视图，如果尚未设置视图，则为 null。</returns>
      <param name="adorner">要检索其任务的装饰器元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Layout">
      <summary>获取用于根据装饰器的模型或视图排列该装饰器的布局。 这是一个附加属性。</summary>
      <returns>装饰器的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerLayout" />。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerProperties.LayoutProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Layout" /> 附加属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Layout" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Model">
      <summary>获取与装饰器关联的模型项。 这是一个附加属性。</summary>
      <returns>与装饰器关联的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerProperties.ModelProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Model" /> 附加属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Model" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Order">
      <summary>获取装饰器的相对 Z 顺序。 这是一个附加属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" />，指定装饰器的相对 Z 顺序。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerProperties.OrderProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Order" /> 附加属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Order" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerProperties.RenderTransform">
      <summary>获取或设置装饰器的呈现转换。 这是一个附加属性。</summary>
      <returns>与装饰器关联的呈现转换；如果尚未设置呈现转换，则为 null。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerProperties.RenderTransformProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.RenderTransform" /> 附加属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.RenderTransform" /> 附加属性的标识符。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.SetLayout(System.Windows.DependencyObject,Microsoft.Windows.Design.Interaction.AdornerLayout)">
      <summary>为指定的装饰器设置布局。</summary>
      <param name="adorner">要设置其布局的装饰器元素。</param>
      <param name="value">要与 <paramref name="adorner" /> 关联的 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerLayout" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.SetModel(System.Windows.DependencyObject,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>设置与指定装饰器关联的模型项。</summary>
      <param name="adorner">要设置其模型的装饰器元素。</param>
      <param name="value">要与 <paramref name="adorner" /> 关联的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.SetOrder(System.Windows.DependencyObject,Microsoft.Windows.Design.Interaction.AdornerOrder)">
      <summary>设置指定装饰器的相对 Z 顺序。</summary>
      <param name="adorner">要设置其模型的装饰器元素。</param>
      <param name="value">一个 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" />，指定 <paramref name="adorner" /> 的相对 Z 顺序。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.SetRenderTransform(System.Windows.DependencyObject,System.Windows.Media.Transform)">
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.SetTask(System.Windows.DependencyObject,Microsoft.Windows.Design.Interaction.Task)">
      <summary>设置指定装饰器的任务。</summary>
      <param name="adorner">要设置其任务的装饰器元素。</param>
      <param name="value">要与 <paramref name="adorner" /> 关联的 <see cref="T:Microsoft.Windows.Design.Interaction.Task" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Task">
      <summary>获取指定装饰器的任务。 这是一个附加属性。</summary>
      <returns>与装饰器关联的 <see cref="T:Microsoft.Windows.Design.Interaction.Task" />。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerProperties.TaskProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Task" /> 附加属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Task" /> 附加属性的标识符。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerProvider">
      <summary>一个功能提供程序，可将其添加到类中，以便自动将装饰器添加到设计器图面中。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProvider.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerProvider" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProvider.Activate(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>在设计器初次请求装饰器时调用。</summary>
      <param name="item">一个表示所装饰的元素的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerProvider.Adorners">
      <summary>获取此装饰器提供程序提供的装饰器的集合。</summary>
      <returns>具有装饰器附加属性的 <see cref="T:System.Windows.UIElement" /> 对象的一个集合。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerProvider.AdornersVisible">
      <summary>获取或设置一组装饰器的可见性。</summary>
      <returns>如果会将装饰器添加到设计器视图，则为 true。 如果从设计器视图中移除装饰器，则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerProvider.Context">
      <summary>获取激活了此装饰器提供程序的编辑上下文。</summary>
      <returns>一个激活了此装饰器提供程序的 <see cref="T:Microsoft.Windows.Design.EditingContext" />。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProvider.Deactivate">
      <summary>当设计器要放弃装饰器提供程序时调用。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProvider.IsToolSupported(Microsoft.Windows.Design.Interaction.Tool)">
      <summary>获取一个值，该值指示装饰器提供程序是否支持提供的 <see cref="T:Microsoft.Windows.Design.Interaction.Tool" />。</summary>
      <returns>如果装饰器提供程序支持 <paramref name="tool" />，则为 true；否则为 false。</returns>
      <param name="tool">要检查的 <see cref="T:Microsoft.Windows.Design.Interaction.Tool" />。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerResources">
      <summary>用于定义一组可在 XAML 中使用的资源。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerResources.CreateResourceKey(System.Type,System.String)">
      <summary>为指定的类型和成员名称创建一个资源键。</summary>
      <returns>新资源键。</returns>
      <param name="owningType">拥有该资源的类型。</param>
      <param name="publicMember">公开该资源的公共静态成员的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningType" /> 或 <paramref name="publicMember" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerResources.FindResource(System.Windows.ResourceKey)">
      <summary>查找具有指定键的资源。</summary>
      <returns>与 <paramref name="key" /> 对应的资源。</returns>
      <param name="key">要查找的资源键。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 为 null。</exception>
      <exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException">
        <paramref name="key" /> 没有资源。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerResources.Refresh">
      <summary>更新装饰器资源字典。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerResources.RegisterResources(Microsoft.Windows.Design.Interaction.LoadResourcesCallback)">
      <summary>注册一个可以提供资源字典的回调。</summary>
      <param name="callback">用于返回资源字典的回调。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerResources.TryFindResource(System.Windows.ResourceKey)">
      <summary>查找具有指定键的资源。</summary>
      <returns>资源（如果存在）。 - 或 - 如果指定的资源不存在，则为 null。</returns>
      <param name="key">要查找的资源的键。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 为 null。</exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerStretch">
      <summary>一个枚举，用于标识在缩放设计视图时装饰器的特定维度（X 或 Y）的行为方式。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerStretch.None">
      <summary>缩放时维度保持不变。 因此，缩放期间装饰器不会更改尺寸和比例。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerStretch.Stretch">
      <summary>缩放时的维度拉伸。 因此，装饰器越大，但所呈现元素/行/钢笔的笔画并不会增加。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerVerticalAlignment">
      <summary>一个枚举，它定义装饰器相对于设计图面上的元素的垂直对齐方式。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerVerticalAlignment.Top">
      <summary>装饰器与顶部对齐。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerVerticalAlignment.Center">
      <summary>装饰器居中对齐。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerVerticalAlignment.Bottom">
      <summary>装饰器与底部对齐。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerVerticalAlignment.Stretch">
      <summary>装饰器处于拉伸状态。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerVerticalAlignment.OutsideTop">
      <summary>装饰器在外部与顶部对齐。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerVerticalAlignment.OutsideBottom">
      <summary>装饰器在外部与底部对齐。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs">
      <summary>为 <see cref="E:Microsoft.Windows.Design.Interaction.ToolCommandBinding.CanExecute" /> 事件提供数据。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs.CanExecute">
      <summary>获取或设置是否能执行指定命令。</summary>
      <returns>如果能够执行命令，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs.Command">
      <summary>获取与此 <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> 关联的命令。</summary>
      <returns>一个 <see cref="T:System.Windows.Input.ICommand" />，表示与此 <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> 关联的命令。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs.Parameter">
      <summary>获取与此 <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> 关联的参数。</summary>
      <returns>一个对象，表示与此 <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> 关联的参数。 返回值可以为 null。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventHandler">
      <summary>表示将处理工具命令的 <see cref="E:Microsoft.Windows.Design.Interaction.ToolCommandBinding.CanExecute" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" />。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.CommandExceptionEventArgs">
      <summary>为 <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> 类上定义的 <see cref="E:Microsoft.Windows.Design.Interaction.DesignerView.CommandException" /> 事件提供数据。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.CommandExceptionEventArgs.#ctor(System.Windows.Input.ICommand,System.Exception)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.CommandExceptionEventArgs" /> 类的新实例。</summary>
      <param name="command">引发异常的命令。</param>
      <param name="exception">命令引发的异常。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" /> 或 <paramref name="exception" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.CommandExceptionEventArgs.Command">
      <summary>获取传递给构造函数的命令。</summary>
      <returns>一个 <see cref="T:System.Windows.Input.ICommand" />，表示已传递给构造函数的命令。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.CommandExceptionEventArgs.Exception">
      <summary>获取传递给构造函数的异常。</summary>
      <returns>已传入构造函数的 <see cref="T:System.Exception" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ContextMenuProvider">
      <summary>定义在上下文菜单中显示的一组菜单项。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ContextMenuProvider.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.ContextMenuProvider" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ContextMenuProvider.Items">
      <summary>获取添加到上下文菜单中的项。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.MenuBase" /> 项的 <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ContextMenuProvider.Update(Microsoft.Windows.Design.EditingContext)">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.Interaction.ContextMenuProvider.UpdateItemStatus" /> 事件，以便能够刷新菜单项的可见性和启用状态。</summary>
      <param name="context">要发送到 <see cref="T:Microsoft.Windows.Design.Interaction.MenuActionEventArgs" /> 的 <see cref="T:Microsoft.Windows.Design.EditingContext" />。</param>
    </member>
    <member name="E:Microsoft.Windows.Design.Interaction.ContextMenuProvider.UpdateItemStatus">
      <summary>在将要显示菜单项时发生。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.CreationCommands">
      <summary>表示工具创建命令的一组静态命令定义。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.CreationCommands.Create">
      <summary>获取用于创建新对象的命令标识符。</summary>
      <returns>用于创建新对象的命令标识符。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.CreationCommands.CreateAt">
      <summary>获取在当前位置创建新对象的工具命令标识符。</summary>
      <returns>用于在当前位置创建新对象的工具命令标识符。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.CreationCommands.CreateWithin">
      <summary>获取创建笔势位置新对象的工具命令标识符。</summary>
      <returns>用于在笔试位置创建新对象的工具命令标识符。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.CreationTool">
      <summary>用于在设计器中新建对象实例的工具。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.CreationTool.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.CreationTool" /> 类的新实例。</summary>
    </member>
    <member name="E:Microsoft.Windows.Design.Interaction.CreationTool.CreationComplete">
      <summary>在工具完成其对象的创建时发生。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.CreationTool.CreationType">
      <summary>获取或设置此工具需要创建的模板类型。</summary>
      <returns>一个 <see cref="T:System.Type" /> 对象，表示此工具应创建的对象的类型。 例如，如果此工具要创建按钮，则该属性应为 typeof(Button)。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.CreationTool.OnCreationComplete(System.EventArgs)">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.Interaction.CreationTool.CreationComplete" /> 事件。</summary>
      <param name="e">要分配给创建完成事件的事件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.CreationTool.PerformCreationComplete">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.Interaction.CreationTool.CreationComplete" /> 事件。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.CreationToolAttribute">
      <summary>标识应该用于创建指定类型的实例的创建工具。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.CreationToolAttribute.#ctor(System.Type)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.CreationToolAttribute" /> 类的新实例。</summary>
      <param name="toolType">此属性所描述的工具的类型。 可以指定 null 以防止公开 <see cref="T:Microsoft.Windows.Design.Interaction.CreationTool" /> 基类。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="toolType" /> 不从 <see cref="T:Microsoft.Windows.Design.Interaction.CreationTool" /> 派生。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.CreationToolAttribute.Equals(System.Object)">
      <summary>返回一个值，该值指示此实例是否与指定的对象相等。</summary>
      <returns>如果该对象等于此对象，则为 true；否则为 false。</returns>
      <param name="obj">要比较的对象。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.CreationToolAttribute.GetHashCode">
      <summary>返回此实例的哈希代码。</summary>
      <returns>整数哈希代码。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.CreationToolAttribute.ToolType">
      <summary>获取要实例化的 <see cref="T:Microsoft.Windows.Design.Interaction.CreationTool" /> 类型。</summary>
      <returns>一个 <see cref="T:System.Type" /> 对象，它表示要实例化的 <see cref="T:Microsoft.Windows.Design.Interaction.CreationTool" /> 的类型。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.CurrentDesignerView">
      <summary>一个上下文项，用于存储和报告编辑上下文中将使用的当前设计器视图。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.CurrentDesignerView.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.CurrentDesignerView" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.CurrentDesignerView.ItemType">
      <summary>获取此项定义的项类型。</summary>
      <returns>一个 <see cref="T:System.Type" />，表示此项类型。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.CurrentDesignerView.View">
      <summary>获取当前正使用的设计视图。</summary>
      <returns>当前正在使用的 <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" />；如果未安装任何视图，则为 null。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.DesignerCommands">
      <summary>表示与设计器关联的命令。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DesignerCommands.Cancel">
      <summary>获取用于取消当前操作的命令。</summary>
      <returns>用于取消当前操作的命令。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.DesignerView">
      <summary>为设计器提供一个可视化设计图面。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DesignerView.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DesignerView.Adorners">
      <summary>获取该视图中的装饰器的集合。</summary>
      <returns>设计图面上的所有装饰器面板的集合。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DesignerView.AdornersVisible">
      <summary>获取或设置一个值，该值指示设计器视图上的装饰器是可见的还是隐藏的。</summary>
      <returns>如果装饰器可见，则为 true；否则为 false。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.DesignerView.AdornersVisibleProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.Interaction.DesignerView.AdornersVisible" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.Interaction.DesignerView.AdornersVisible" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DesignerView.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> 重写 <see cref="M:Microsoft.Windows.Design.Interaction.DesignerView.ArrangeOverride(System.Windows.Size)" />，以便可以确保它维护的所有层都与视图大小相同。</summary>
      <returns>一个 <see cref="T:System.Windows.Size" /> 对象，表示排列后的大小。</returns>
      <param name="arrangeSize">此排列所允许的最终大小。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DesignerView.Child">
      <summary>获取或设置设计器 UI 的根元素。</summary>
      <returns>设计器 UI 的根 <see cref="T:System.Windows.UIElement" />。</returns>
    </member>
    <member name="E:Microsoft.Windows.Design.Interaction.DesignerView.CommandException">
      <summary>在命令中引发异常时发生。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DesignerView.Context">
      <summary>获取或设置该视图的编辑上下文。</summary>
      <returns>与视图关联的 <see cref="T:Microsoft.Windows.Design.EditingContext" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DesignerView.DesignerView">
      <summary>获得或设置设计器视图的附加属性。</summary>
      <returns>UI 树的 <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" />。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.DesignerView.DesignerViewProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.Interaction.DesignerView.DesignerView" /> 依赖项属性。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DesignerView.FromContext(Microsoft.Windows.Design.EditingContext)">
      <summary>返回存储在指定上下文中的设计器视图。</summary>
      <returns>存储在 <paramref name="context" /> 中的 <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" />，如果视图不存在，则为 null。</returns>
      <param name="context">要从中检索设计器视图的编辑上下文。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DesignerView.GetDesignerView(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="P:Microsoft.Windows.Design.Interaction.DesignerView.DesignerView" /> 附加属性的值。</summary>
      <returns>
        <paramref name="element" /> 的 <see cref="P:Microsoft.Windows.Design.Interaction.DesignerView.DesignerView" /> 附加属性。</returns>
      <param name="element">树中要返回其设计器视图的元素。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DesignerView.GetVisualChild(System.Int32)">
      <summary>返回设计器视图的可视子级。</summary>
      <returns>指定索引处的 <see cref="T:System.Windows.Media.Visual" />。</returns>
      <param name="index">可视子集合的索引（从零开始）。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DesignerView.GetZoomTransform">
      <summary>表示将为 <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> 的缩放转换。</summary>
      <returns>表示缩放因子的 <see cref="T:System.Windows.Media.Transform" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DesignerView.IsContentHitTestVisible">
      <summary>获取或设置一个值，该值指示 <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> 的内容是命中测试，还是能够接收鼠标和键盘输入。</summary>
      <returns>如果 <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> 内容可命中测试，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="E:Microsoft.Windows.Design.Interaction.DesignerView.MatchGesture">
      <summary>当 <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> 将用户输入笔势与命令匹配时发生。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DesignerView.MeasureOverride(System.Windows.Size)">
      <summary>重写 <see cref="M:Microsoft.Windows.Design.Interaction.DesignerView.MeasureOverride(System.Windows.Size)" /> 以度量层。</summary>
      <returns>一个 <see cref="T:System.Windows.Size" /> 对象，表示元素的大小。</returns>
      <param name="constraint">元素可占据的可用大小。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DesignerView.OnCommandException(Microsoft.Windows.Design.Interaction.CommandExceptionEventArgs)">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.Interaction.DesignerView.CommandException" /> 事件。</summary>
      <param name="e">在引发此事件时使用的 <see cref="T:Microsoft.Windows.Design.Interaction.CommandExceptionEventArgs" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DesignerView.OnCreateAutomationPeer">
      <summary>创建并返回一个 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />，供自动化基础结构使用。</summary>
      <returns>此对象的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DesignerView.OnMatchGesture(Microsoft.Windows.Design.Interaction.MatchGestureEventArgs)">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.Interaction.DesignerView.MatchGesture" /> 事件。</summary>
      <param name="e">在引发此事件时使用的 <see cref="T:Microsoft.Windows.Design.Interaction.MatchGestureEventArgs" />。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DesignerView.RootView">
      <summary>返回一个表示 <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> 的 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" />。</summary>
      <returns>表示 <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> 的 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" />。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DesignerView.SetZoomTransform">
      <summary>对缩放级别的更改执行处理。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DesignerView.VisualChildrenCount">
      <summary>获取该对象的可视子级的计数。</summary>
      <returns>一个整数，表示该对象的可视子级的数目。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DesignerView.ZoomLevel">
      <summary>表示 <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> 的当前缩放级别。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> 的缩放级别。</returns>
    </member>
    <member name="E:Microsoft.Windows.Design.Interaction.DesignerView.ZoomLevelChanged">
      <summary>在缩放级别更改后发生。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.DesignerView.ZoomLevelProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.Interaction.DesignerView.ZoomLevel" /> 依赖项属性。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.DragGestureData">
      <summary>在拖放操作过程中，提供其他信息。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DragGestureData.#ctor(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem,System.Windows.Media.Visual,System.Windows.Point,System.Windows.Point,System.Windows.DragDropEffects,System.Windows.IDataObject)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.DragGestureData" /> 类的新实例。</summary>
      <param name="context">拥有此笔势数据的编辑上下文。</param>
      <param name="sourceModel">笔势开始时所在的模型。</param>
      <param name="targetModel">笔势当前所在的模型。</param>
      <param name="coordinateReference">表示对点的坐标引用的输入元素。 这应该是从不会发生移动的元素，如 <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> 类。</param>
      <param name="startPosition">第一次对画笔进行初始化时鼠标的位置。</param>
      <param name="currentPosition">鼠标的当前位置。</param>
      <param name="allowedEffects">允许的拖放效果。</param>
      <param name="data">拖动的数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />、<paramref name="sourceModel" />、<paramref name="targetModel" /> 或 <paramref name="data" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DragGestureData.#ctor(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem,System.Windows.Media.Visual,System.Windows.Point,System.Windows.Point,System.Windows.DragDropEffects,System.Windows.IDataObject,System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.DragGestureData" /> 类的新实例。</summary>
      <param name="context">拥有此笔势数据的编辑上下文。</param>
      <param name="sourceModel">这是姿态开始时的模型。</param>
      <param name="targetModel">这是姿态当前为悬停的模型。</param>
      <param name="coordinateReference">表示对点的坐标引用的输入元素。 这应该是从不会发生移动的元素，如 <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> 类。</param>
      <param name="startPosition">第一次对画笔进行初始化时鼠标的位置。</param>
      <param name="currentPosition">鼠标的当前位置。</param>
      <param name="allowedEffects">允许的拖放效果。</param>
      <param name="data">拖动的数据。</param>
      <param name="sourceAdorner">要与笔势关联的源装饰器（如果存在）。 此参数可以为 null。</param>
      <param name="targetAdorner">要与笔势关联的目标装饰器（如果存在）。 此参数可以为 null。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DragGestureData.AllowedEffects">
      <summary>获取允许的拖放效果的设置。</summary>
      <returns>一个 <see cref="T:System.Windows.Forms.DragDropEffects" /> 对象，表示允许的拖放效果集。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DragGestureData.Data">
      <summary>获取拖放操作的传入的数据。</summary>
      <returns>一个表示拖放操作数据的 <see cref="T:System.Windows.IDataObject" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DragGestureData.Effects">
      <summary>获取或设置当前的拖放效果。</summary>
      <returns>一个 <see cref="T:System.Windows.DragDropEffects" /> 对象，表示当前拖放效果。</returns>
      <exception cref="T:System.ArgumentException">效果不在运行的效果范围内。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DragGestureData.FromEventArgs(Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs)">
      <summary>提供从 <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> 对象返回 <see cref="T:Microsoft.Windows.Design.Interaction.DragGestureData" /> 对象的简单实用工具。</summary>
      <returns>包含在 <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> 对象的 <see cref="P:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs.Parameter" /> 属性中的 <see cref="T:Microsoft.Windows.Design.Interaction.DragGestureData" /> 对象。</returns>
      <param name="e">传递给命令回调的 <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DragGestureData.FromEventArgs(Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs)">
      <summary>提供从 <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> 对象返回 <see cref="T:Microsoft.Windows.Design.Interaction.DragGestureData" /> 的简单实用工具。</summary>
      <returns>包含在 <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> 对象的 <see cref="P:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs.Parameter" /> 属性中的 <see cref="T:Microsoft.Windows.Design.Interaction.DragGestureData" /> 对象。</returns>
      <param name="e">传递给命令回调的 <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs">
      <summary>为 <see cref="E:System.Windows.Input.CommandBinding.Executed" /> 事件提供数据。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs.Command">
      <summary>获取与此 <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> 对象关联的命令。</summary>
      <returns>一个 <see cref="T:System.Windows.Input.ICommand" />，表示与此 <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> 关联的命令。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs.Parameter">
      <summary>获取与此 <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> 对象关联的参数。</summary>
      <returns>一个对象，表示与此 <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> 对象关联的参数。 返回值可以为 null。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventHandler">
      <summary>表示将处理工具命令的 <see cref="E:System.Windows.Input.CommandBinding.Executed" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">一个 <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.FocusedTask">
      <summary>包含当前在工具中有焦点的任务。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.FocusedTask.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.FocusedTask" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.FocusedTask.ItemType">
      <summary>获取在内容项字典中用于标识内容项类型的键。</summary>
      <returns>一个 <see cref="T:System.Type" /> 对象，它表示 <see cref="T:Microsoft.Windows.Design.Interaction.FocusedTask" /> 的类型。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.FocusedTask.Task">
      <summary>获取具有焦点的任务。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.Task" /> 对象，表示具有焦点的任务。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.GestureData">
      <summary>提供有关笔势的信息。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.GestureData.#ctor(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.GestureData" /> 类的新实例。</summary>
      <param name="context">拥有此笔势数据的编辑上下文。</param>
      <param name="sourceModel">笔势开始时所在的模型。</param>
      <param name="targetModel">笔势当前所在的模型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />、<paramref name="sourceModel" /> 或 <paramref name="targetModel" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.GestureData.#ctor(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem,System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.GestureData" /> 类的新实例。</summary>
      <param name="context">拥有此笔势数据的编辑上下文。</param>
      <param name="sourceModel">笔势开始时所在的模型。</param>
      <param name="targetModel">笔势当前所在的模型。</param>
      <param name="sourceAdorner">要与笔势关联的源装饰器（如果存在）。 此参数可以为 null。</param>
      <param name="targetAdorner">要与笔势关联的目标装饰器（如果存在）。 此参数可以为 null。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />、<paramref name="sourceModel" /> 或 <paramref name="targetModel" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.GestureData.Adorners">
      <summary>获取上下文中存储的设计器视图的装饰器集合。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.ICollection`1" />，其中包含此上下文的设计器视图的装饰器集合。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.GestureData.Context">
      <summary>获取与此笔势数据关联的编辑的上下文。</summary>
      <returns>与这些笔势数据关联的 <see cref="T:Microsoft.Windows.Design.EditingContext" />。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.GestureData.FromEventArgs(Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs)">
      <summary>从 <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> 对象提供 <see cref="T:Microsoft.Windows.Design.Interaction.GestureData" /> 对象。</summary>
      <returns>包含在 <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> 对象的 <see cref="P:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs.Parameter" /> 属性中的 <see cref="T:Microsoft.Windows.Design.Interaction.GestureData" /> 对象。</returns>
      <param name="e">传递给命令回调的 <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.GestureData.FromEventArgs(Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs)">
      <summary>从 <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> 对象提供 <see cref="T:Microsoft.Windows.Design.Interaction.GestureData" /> 对象。</summary>
      <returns>包含在 <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> 对象的 <see cref="P:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs.Parameter" /> 属性中的 <see cref="T:Microsoft.Windows.Design.Interaction.GestureData" /> 对象。</returns>
      <param name="e">传递给命令回调的 <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.GestureData.ImpliedSource">
      <summary>获取作为此笔势的源的模型。</summary>
      <returns>作为此笔势的源的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.GestureData.ImpliedTarget">
      <summary>获取作为此笔势的目标的模型。</summary>
      <returns>表示此笔势的目标的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.GestureData.SourceAdorner">
      <summary>获取视图中的源装饰器。</summary>
      <returns>作为启动了笔势的装饰器的 <see cref="T:System.Windows.UIElement" />。 如果装饰器未启动该笔势，则返回值可能为 null。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.GestureData.SourceModel">
      <summary>获取作为此笔势的源的对象。</summary>
      <returns>作为此笔势的源的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.GestureData.TargetAdorner">
      <summary>获取视图中的目标装饰器。</summary>
      <returns>作为笔势当前位于其上的装饰器的 <see cref="T:System.Windows.UIElement" />。 如果笔势不位于装饰器上，则返回值可能为 null。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.GestureData.TargetModel">
      <summary>获取作为此笔势的目标的对象。</summary>
      <returns>表示此笔势的目标的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.IAdornerPlacement">
      <summary>为 <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection" /> 指定一个位置术语。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.IAdornerPlacement.GetPositionTerms(Microsoft.Windows.Design.Interaction.AdornerCoordinateSpace,System.Windows.UIElement,Microsoft.Windows.Design.Interaction.ViewItem,System.Windows.Vector,System.Windows.Size)">
      <summary>返回用于定位装饰器的定位术语的枚举。</summary>
      <returns>定位术语的枚举。 如果未使用定位术语，则返回一个空枚举。</returns>
      <param name="space">所在的装饰器面板的坐标空间。</param>
      <param name="adorner">要获取其定位词条的装饰器。</param>
      <param name="view">装饰器所装饰的视图。</param>
      <param name="zoom">一个指示设计器的缩放的向量。</param>
      <param name="computedAdornerSize">在对 <see cref="M:Microsoft.Windows.Design.Interaction.IAdornerPlacement.GetSizeTerms(Microsoft.Windows.Design.Interaction.AdornerCoordinateSpace,System.Windows.UIElement,Microsoft.Windows.Design.Interaction.ViewItem,System.Windows.Vector,System.Windows.Size)" /> 方法返回的术语进行处理后得到的装饰器的大小。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> 或 <paramref name="view" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.IAdornerPlacement.GetSizeTerms(Microsoft.Windows.Design.Interaction.AdornerCoordinateSpace,System.Windows.UIElement,Microsoft.Windows.Design.Interaction.ViewItem,System.Windows.Vector,System.Windows.Size)">
      <summary>返回用于调整装饰器的大小的大小调整术语的枚举。</summary>
      <returns>大小调整术语的枚举。 如果未使用大小调整术语，则此方法必须返回一个空枚举。</returns>
      <param name="space">所在的装饰器面板的坐标空间。</param>
      <param name="adorner">要获取其大小调整术语的装饰器。</param>
      <param name="view">装饰器所装饰的视图。</param>
      <param name="zoom">一个指示设计器的缩放的向量。</param>
      <param name="viewFinalSize">经过安排的视图的最终大小。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.LoadResourcesCallback">
      <summary>当必须查找指定键的资源时使用。</summary>
      <returns>要插入到默认主题字典中的 <see cref="T:System.Windows.ResourceDictionary" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.MatchGestureEventArgs">
      <summary>为 <see cref="E:Microsoft.Windows.Design.Interaction.DesignerView.MatchGesture" /> 事件提供数据。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MatchGestureEventArgs.Binding">
      <summary>获取或设置映射到输入事件的输入绑定。</summary>
      <returns>映射到输入事件的输入绑定。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MatchGestureEventArgs.Data">
      <summary>获取或设置与输入事件关联的笔势数据。</summary>
      <returns>该笔势数据与输入事件相关。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MatchGestureEventArgs.InputEvent">
      <summary>获取导致该事件发生的输入事件。</summary>
      <returns>导致该事件发生的输入事件的 <see cref="T:System.Windows.Input.InputEventArgs" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.MenuAction">
      <summary>上下文项，表示该设计器中将采用的操作。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.MenuAction.#ctor(System.String)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.MenuAction" /> 类的新实例。</summary>
      <param name="displayName">上下文菜单中出现的文本。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MenuAction.Checkable">
      <summary>获取或设置一个值指示是否菜单项需要显示复选框的用户界面 (UI)。</summary>
      <returns>如果菜单项需要复选框，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MenuAction.Checked">
      <summary>获取或设置一个值指示是否选中该菜单项。</summary>
      <returns>如果呈现的菜单项应带有一个选中标记，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MenuAction.Command">
      <summary>获取表示菜单操作的命令。</summary>
      <returns>一个表示菜单操作的 <see cref="T:System.Windows.Input.ICommand" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MenuAction.Enabled">
      <summary>获取或设置一个值指示是否用户可以使用菜单操作项。</summary>
      <returns>如果用户可以使用该菜单操作项，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="E:Microsoft.Windows.Design.Interaction.MenuAction.Execute">
      <summary>执行菜单项时发生。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MenuAction.ImageUri">
      <summary>获取或设置与 <see cref="T:Microsoft.Windows.Design.Interaction.MenuAction" /> 关联的图像的路径。</summary>
      <returns>与 <see cref="T:Microsoft.Windows.Design.Interaction.MenuAction" /> 关联的图像的 <see cref="T:System.Uri" />。  默认值为 null。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MenuAction.Visible">
      <summary>获取或设置一个值指示是否在菜单中显示该项。</summary>
      <returns>如果在菜单中显示该操作，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.MenuActionEventArgs">
      <summary>为 <see cref="T:Microsoft.Windows.Design.Interaction.MenuAction" /> 事件提供数据。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.MenuActionEventArgs.#ctor(Microsoft.Windows.Design.EditingContext)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.MenuActionEventArgs" /> 类的新实例。</summary>
      <param name="context">关联的 <see cref="T:Microsoft.Windows.Design.EditingContext" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MenuActionEventArgs.Context">
      <summary>获取当前活动的编辑上下文。</summary>
      <returns>一个表示活动编辑批处理的 <see cref="T:Microsoft.Windows.Design.EditingContext" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MenuActionEventArgs.Selection">
      <summary>获取设计图面上的当前选择。</summary>
      <returns>一个表示当前选定控件的 <see cref="T:Microsoft.Windows.Design.Interaction.Selection" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.MenuBase">
      <summary>为操作和组提供基类。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.MenuBase.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.MenuBase" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MenuBase.Context">
      <summary>获取当前的编辑上下文。</summary>
      <returns>当前上下文的 <see cref="T:Microsoft.Windows.Design.EditingContext" />，或为 null。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MenuBase.DisplayName">
      <summary>获取或设置要为该菜单项显示的本地化文本。</summary>
      <returns>要为该菜单项显示的本地化文本。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MenuBase.Name">
      <summary>获取或设置该菜单项的唯一标识符。</summary>
      <returns>该菜单项的唯一标识符。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.MenuBase.OnPropertyChanged(System.String)">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.Interaction.MenuBase.PropertyChanged" /> 事件。</summary>
      <param name="propertyName">要更改的属性的名称。</param>
    </member>
    <member name="E:Microsoft.Windows.Design.Interaction.MenuBase.PropertyChanged">
      <summary>在属性更改时发生。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.MenuGroup">
      <summary>表示一组菜单项。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.MenuGroup.#ctor(System.String)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.MenuGroup" /> 类的一个新实例，该类具有指定的组名。</summary>
      <param name="groupName">
        <see cref="T:Microsoft.Windows.Design.Interaction.MenuGroup" /> 实例的名称。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.MenuGroup.#ctor(System.String,System.String)">
      <summary>初始化具有指定组名称和显示名称的 <see cref="T:Microsoft.Windows.Design.Interaction.MenuGroup" /> 类的新实例。</summary>
      <param name="groupName">
        <see cref="T:Microsoft.Windows.Design.Interaction.MenuGroup" /> 实例的名称。</param>
      <param name="displayName">当 <see cref="P:Microsoft.Windows.Design.Interaction.MenuGroup.HasDropDown" /> 等于 true 时要显示的本地化文本。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MenuGroup.HasDropDown">
      <summary>获取或设置一个值，该值表示 <see cref="P:Microsoft.Windows.Design.Interaction.MenuGroup.Items" /> 中的菜单项是否可以添加下级菜单。</summary>
      <returns>如果项集合中的菜单项将被添加到子菜单，则为 true；如果集合中的项将直接被添加到当前菜单，并将在各端用分隔符呈现出来，则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MenuGroup.Items">
      <summary>获取菜单项列表以在同一个菜单组中显示为同级。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.MenuAction" /> 项的 <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ModelHitTestFilterCallback">
      <summary>一个可分配给事务任务的 <see cref="P:Microsoft.Windows.Design.Interaction.Task.ModelFilter" /> 属性的回调委托。</summary>
      <returns>此筛选器的筛选器行为。</returns>
      <param name="potentialHitTestTarget">位于鼠标指针下的模型项。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.MouseGestureData">
      <summary>提供有关鼠标位置的信息。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.MouseGestureData.#ctor(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem,System.Windows.Media.Visual,System.Windows.Point,System.Windows.Point)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.MouseGestureData" /> 类的新实例。</summary>
      <param name="context">拥有此笔势数据的编辑上下文。</param>
      <param name="sourceModel">笔势开始时所在的模型。</param>
      <param name="targetModel">笔势当前所在的模型。</param>
      <param name="coordinateReference">表示对点的坐标引用的输入元素。 这应该是从不会发生移动的元素，如 <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" />。</param>
      <param name="startPosition">第一次对画笔进行初始化时鼠标的位置。</param>
      <param name="currentPosition">鼠标的当前位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />、<paramref name="sourceModel" />、<paramref name="targetModel" /> 或 <paramref name="coordinateReference" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.MouseGestureData.#ctor(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem,System.Windows.Media.Visual,System.Windows.Point,System.Windows.Point,System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.MouseGestureData" /> 类的新实例。</summary>
      <param name="context">拥有此笔势数据的编辑上下文。</param>
      <param name="sourceModel">笔势开始时所在的模型。</param>
      <param name="targetModel">笔势当前所在的模型。</param>
      <param name="coordinateReference">表示对点的坐标引用的输入元素。 这应该是从不会发生移动的元素，如 <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" />。</param>
      <param name="startPosition">第一次对画笔进行初始化时鼠标的位置。</param>
      <param name="currentPosition">鼠标的当前位置。</param>
      <param name="sourceAdorner">要与笔势关联的源装饰器（如果存在）。 此参数可以为 null。</param>
      <param name="targetAdorner">要与笔势关联的目标装饰器（如果存在）。 此参数可以为 null。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MouseGestureData.CurrentPosition">
      <summary>获取鼠标的当前的位置。</summary>
      <returns>一个 <see cref="T:System.Windows.Point" /> 对象，表示鼠标的当前位置。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.MouseGestureData.FromEventArgs(Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs)">
      <summary>从 <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> 对象提供 <see cref="T:Microsoft.Windows.Design.Interaction.MouseGestureData" /> 对象。</summary>
      <returns>包含在 <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> 对象的 <see cref="P:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs.Parameter" /> 属性中的 <see cref="T:Microsoft.Windows.Design.Interaction.MouseGestureData" /> 对象。</returns>
      <param name="e">传递给命令回调的 <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.MouseGestureData.FromEventArgs(Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs)">
      <summary>获取 <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> 对象中的 <see cref="T:Microsoft.Windows.Design.Interaction.MouseGestureData" /> 对象。</summary>
      <returns>包含在 <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> 对象的  <see cref="P:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs.Parameter" /> 属性中的该 <see cref="T:Microsoft.Windows.Design.Interaction.MouseGestureData" /> 对象。</returns>
      <param name="e">传递给命令回调的 <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MouseGestureData.PositionDelta">
      <summary>获取起始位置和结束位置间的偏移量。</summary>
      <returns>一个 <see cref="T:System.Windows.Vector" /> 对象，表示鼠标的开始位置和结束位置之间的偏移量。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MouseGestureData.StartPosition">
      <summary>获取鼠标的起始位置。</summary>
      <returns>一个 <see cref="T:System.Windows.Point" /> 对象，表示鼠标的开始位置。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.MouseGestureData.TranslatePoint(System.Windows.Point,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>将指定的点转换为指定模型的视觉坐标系统。</summary>
      <returns>一个 <see cref="T:System.Windows.Point" /> 对象，表示转换点。</returns>
      <param name="pt">要平移的点。</param>
      <param name="referenceTo">坐标要转换成的模型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="referenceTo" /> 为 null。</exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.NudgeIntent">
      <summary>一个枚举，指示在键盘轻触期间供 <see cref="T:Microsoft.Windows.Design.Interaction.PlacementAdapter" /> 用来移动控件的方法。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.NudgeIntent.Left">
      <summary>指示位置调用旨在将控件微移至左侧。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.NudgeIntent.Right">
      <summary>指示位置调用旨在将控件微移至右侧。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.NudgeIntent.Up">
      <summary>指示位置调用旨在向上微移控件。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.NudgeIntent.Down">
      <summary>指示位置调用旨在向下微移控件。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ParentAdapter">
      <summary>为可以作为子对象的父级的任何类型提供扩展点。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ParentAdapter.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.ParentAdapter" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ParentAdapter.AdapterType">
      <summary>获取此类表示的适配器的类型。</summary>
      <returns>一个表示父适配器的类类型的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ParentAdapter.CanParent(Microsoft.Windows.Design.Model.ModelItem,System.Type)">
      <summary>获取一个值，该值指示指定的父对象是否可以作为指定类型的对象的父级。</summary>
      <returns>如果指定的父级能够接受指定类型的子级，则为 true；否则为 false。 默认值为 true。</returns>
      <param name="parent">一个表示父级的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</param>
      <param name="childType">子项的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parent" /> 或 <paramref name="childType" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ParentAdapter.IsParent(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>获取一个值，该值指示指定的子项是否为指定父项的子级。</summary>
      <returns>如果 <paramref name="child" /> 是 <paramref name="parent" /> 的子项，则为 true；否则为 false。</returns>
      <param name="parent">父项。</param>
      <param name="child">子项。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ParentAdapter.Parent(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>将一个对象的父级更改为另一个父级。</summary>
      <param name="newParent">
        <paramref name="child" /> 的新父项。</param>
      <param name="child">子项。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newParent" /> 或 <paramref name="child" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ParentAdapter.Parent(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem,System.Int32)">
      <summary>将一个对象的父级更改为另一个父级。</summary>
      <param name="newParent">子项的新父项。</param>
      <param name="child">子项。</param>
      <param name="insertionIndex">子级集合中的控件顺序。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newParent" /> 或 <paramref name="child" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ParentAdapter.RedirectParent(Microsoft.Windows.Design.Model.ModelItem,System.Type)">
      <summary>将引用从一个父级重定向到另一个父级。 .</summary>
      <returns>已重定向的父级。 默认实现返回 <paramref name="parent" />。</returns>
      <param name="parent">父项。</param>
      <param name="childType">子项的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parent" /> 或 <paramref name="childType" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ParentAdapter.RemoveParent(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>利用新的父级替换指定子级的当前父级。</summary>
      <param name="currentParent">当前作为 <paramref name="child" /> 的父级的项。</param>
      <param name="newParent">将成为 <paramref name="child" /> 的新父级的项。</param>
      <param name="child">子项。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="currentParent" />、<paramref name="newParent" /> 或 <paramref name="child" /> 为 null。</exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.PlacementAdapter">
      <summary>用于在父坐标中获取和设置对象的位置的适配器。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.PlacementAdapter.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.PlacementAdapter" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.PlacementAdapter.AdapterType">
      <summary>获取此类表示的适配器的类型。</summary>
      <returns>返回 <see cref="T:Microsoft.Windows.Design.Interaction.PlacementAdapter" /> 类型。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.PlacementAdapter.BeginPlacement(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>开始放置操作。</summary>
      <param name="item">为其启动放置操作的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.PlacementAdapter.CanSetPosition(Microsoft.Windows.Design.Interaction.PlacementIntent,Microsoft.Windows.Design.Interaction.RelativePosition)">
      <summary>返回一个值，该值指示是否可设置指定的坐标。</summary>
      <returns>如果设定了坐标，则为 true；否则为 false。</returns>
      <param name="intent">说明此项位置调用的原因。</param>
      <param name="position">要设置的坐标。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="position" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.PlacementAdapter.EndPlacement">
      <summary>结束放置操作。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.PlacementAdapter.GetPlacement(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Interaction.RelativePosition[])">
      <summary>返回描述指定项目的位置的位置集合。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativeValueCollection" /> 对象，它是位置坐标的集合。</returns>
      <param name="item">为其提出位置信息请求的项。</param>
      <param name="positions">为其提出位置信息请求的项。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.PlacementAdapter.GetPlacementBoundary(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>获取指定项父级的边界。</summary>
      <returns>一个 <see cref="T:System.Windows.Rect" />，表示 <paramref name="item" /> 的边界。</returns>
      <param name="item">要查找其边界的父级 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.PlacementAdapter.GetPlacementBoundary(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Interaction.PlacementIntent,Microsoft.Windows.Design.Interaction.RelativeValue[])">
      <summary>获取指定项的父级的边界。</summary>
      <returns>
        <see cref="T:System.Windows.Rect" />，表示 <paramref name="item" /> 的父级的边界。</returns>
      <param name="item">要查找的项目父边界。</param>
      <param name="intent">说明此项位置调用的原因。</param>
      <param name="positions">要设置的放置位置的数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.PlacementAdapter.SetNudgePlacements(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Interaction.NudgeIntent,Microsoft.Windows.Design.Interaction.RelativeValue[])">
      <summary>分配在键盘轻触期间用于移动控件的位置的指定数组。</summary>
      <param name="item">要放置的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</param>
      <param name="intent">一个 <see cref="T:Microsoft.Windows.Design.Interaction.NudgeIntent" />，指定此位置调用的意图。</param>
      <param name="positions">要设置的放置位置的数组。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.PlacementAdapter.SetNudgePlacements(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Interaction.NudgeIntent,Microsoft.Windows.Design.Interaction.RelativeValueCollection)">
      <summary>分配在键盘轻触期间用于移动控件的位置的指定集合。</summary>
      <param name="item">要放置的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</param>
      <param name="intent">一个 <see cref="T:Microsoft.Windows.Design.Interaction.NudgeIntent" />，指定此位置调用的意图。</param>
      <param name="placement">要设置的放置位置的集合。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.PlacementAdapter.SetPlacements(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Interaction.PlacementIntent,Microsoft.Windows.Design.Interaction.RelativeValue[])">
      <summary>将位置的指定数组分配给指定的模型项。</summary>
      <param name="item">要放置的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</param>
      <param name="intent">一个 <see cref="T:Microsoft.Windows.Design.Interaction.PlacementIntent" />，指定此位置调用的意图。</param>
      <param name="positions">要设置的放置位置的数组。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.PlacementAdapter.SetPlacements(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Interaction.PlacementIntent,Microsoft.Windows.Design.Interaction.RelativeValueCollection)">
      <summary>将位置的指定集合分配给指定的模型项。</summary>
      <param name="item">要放置的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</param>
      <param name="intent">一个 <see cref="T:Microsoft.Windows.Design.Interaction.PlacementIntent" />，指定此位置调用的意图。</param>
      <param name="placement">要设置的放置位置的集合。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.PlacementIntent">
      <summary>一个枚举，指示供 <see cref="T:Microsoft.Windows.Design.Interaction.PlacementAdapter" /> 用来放置控件的方法。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.PlacementIntent.Move">
      <summary>指示位置调用旨在移动控件。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.PlacementIntent.Size">
      <summary>指示位置调用旨在改变控件的大小。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.PrimarySelectionAdornerProvider">
      <summary>提供为主选项显示的一组装饰器。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.PrimarySelectionAdornerProvider.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.PrimarySelectionAdornerProvider" /> 类的新实例。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.PrimarySelectionContextMenuProvider">
      <summary>提供为当前所选内容显示的一组 <see cref="T:Microsoft.Windows.Design.Interaction.MenuGroup" /> 项。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.PrimarySelectionContextMenuProvider.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.PrimarySelectionContextMenuProvider" /> 类的新实例。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.PrimarySelectionTaskProvider">
      <summary>提供当某个类在主选项内容中时选项工具中可用的一组任务。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.PrimarySelectionTaskProvider.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.PrimarySelectionTaskProvider" /> 类的新实例。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.RelativePoint">
      <summary>定义一个点，该点由 X 和 Y 位置以及定义这些坐标与某些其他对象的关系的 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 类组成。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativePoint.#ctor(Microsoft.Windows.Design.Interaction.RelativePosition,System.Double,System.Double)">
      <summary>针对指定的 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 、X 值和 Y 值初始化 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" /> 结构的新实例。</summary>
      <param name="position">一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 对象，该对象定义指定的 X 和 Y 位置与某个其他对象之间的关系。</param>
      <param name="x">X 坐标。</param>
      <param name="y">Y 坐标。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativePoint.#ctor(Microsoft.Windows.Design.Interaction.RelativePosition,System.Windows.Point)">
      <summary>为指定的非相对点初始化 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" /> 类的新实例。</summary>
      <param name="position">一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 对象，该对象定义指定的 X 和 Y 位置与某个其他对象之间的关系。</param>
      <param name="point">一个 <see cref="T:System.Windows.Point" /> 结构，其中包含要为此 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" /> 创建的坐标。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativePoint.Equals(Microsoft.Windows.Design.Interaction.RelativePoint)">
      <summary>指定此 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" /> 是否包含与指定的 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" /> 相同的坐标。</summary>
      <returns>如果 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" /> 对象具有相同的坐标，则为 true；否则为 false。</returns>
      <param name="value">要测试的 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativePoint.Equals(System.Object)">
      <summary>指定此 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" /> 是否包含与指定的 <see cref="T:System.Object" /> 相同的坐标。</summary>
      <returns>如果 <paramref name="obj" /> 为 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" /> 并与此 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" /> 的坐标相等，则为 true。</returns>
      <param name="obj">要测试的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativePoint.FromPoint(System.Windows.Point)">
      <summary>将指定的 <see cref="T:System.Windows.Point" /> 转换为一个相对左上角的 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" />。</summary>
      <returns>一个新的 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" />。</returns>
      <param name="point">要转换的 <see cref="T:System.Windows.Point" /> 结构。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativePoint.GetHashCode">
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativePoint.op_Equality(Microsoft.Windows.Design.Interaction.RelativePoint,Microsoft.Windows.Design.Interaction.RelativePoint)">
      <summary>比较两个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" /> 结构。 此结果指定两个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" /> 结构的 Position、X 和 Y 属性的值是否相等。</summary>
      <returns>如果 Position、X 和 Y 属性均相等，则为 true，否则为 false。</returns>
      <param name="point1">要比较的第一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" />。</param>
      <param name="point2">要比较的第二个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativePoint.op_Implicit(System.Windows.Point)~Microsoft.Windows.Design.Interaction.RelativePoint">
      <summary>将指定的 <see cref="T:System.Windows.Point" /> 结构转换为 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" /> 结构。</summary>
      <returns>从 <paramref name="point" /> 创建的新的 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" />。</returns>
      <param name="point">要转换的 <see cref="T:System.Windows.Point" /> 结构。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativePoint.op_Inequality(Microsoft.Windows.Design.Interaction.RelativePoint,Microsoft.Windows.Design.Interaction.RelativePoint)">
      <summary>比较两个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" /> 结构。 此结果指定两个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" /> 结构的 Position、X 或 Y 属性的值是否不相等。</summary>
      <returns>如果 <paramref name="p1" /> 和 <paramref name="p2" /> 的 Position、X 或 Y 属性的值不相等，则为 true，否则为 false。</returns>
      <param name="point1">要比较的第一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" />。</param>
      <param name="point2">要比较的第二个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" />。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePoint.Position">
      <summary>获取或设置 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" /> 结构的相对位置。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" /> 结构的相对位置。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePoint.X">
      <summary>获取或设置此 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" /> 结构的 X 坐标。</summary>
      <returns>此 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" /> 结构的 X 坐标。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePoint.Y">
      <summary>获取或设置此 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" /> 结构的 Y 坐标。</summary>
      <returns>此 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePoint" /> 结构的 Y 坐标。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.RelativePosition">
      <summary>表示设计器上的一个与坐标系无关的位置。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativePosition.#ctor(Microsoft.Windows.Design.Interaction.RelativePosition[])">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 类的新实例，该实例包含零个或更多现有参考位置。</summary>
      <param name="values">在一个复合中包含的 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 对象的数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativePosition.#ctor(System.String,Microsoft.Windows.Design.Interaction.RelativePosition[])">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 类的新实例，该实例包含零个或更多现有参考位置。</summary>
      <param name="name">用于描述此 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 的名称。 此参数仅用于诊断目的。</param>
      <param name="values">在一个复合中包含的 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 对象的数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativePosition.Contains(Microsoft.Windows.Design.Interaction.RelativePosition)">
      <summary>返回一个值，该值指示指定的 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 是否位于此 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 的内部。</summary>
      <returns>如果 <paramref name="value" /> 包含在此 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 中，则为 true；否则为 false。</returns>
      <param name="value">要检查的 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativePosition.Equals(Microsoft.Windows.Design.Interaction.RelativePosition)">
      <summary>确定指定的 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 是否等于此 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />。</summary>
      <returns>如果 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 对象相等，则为 true；否则为 false。</returns>
      <param name="position">要测试的 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativePosition.Equals(System.Object)">
      <summary>确定指定的对象是否等于此 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 对象。</summary>
      <returns>如果指定的对象与此 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 相等，则为 true；否则为 false。</returns>
      <param name="obj">要测试的对象。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativePosition.GetHashCode">
      <summary>返回该对象的哈希代码。</summary>
      <returns>此对象的哈希代码。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativePosition.op_Equality(Microsoft.Windows.Design.Interaction.RelativePosition,Microsoft.Windows.Design.Interaction.RelativePosition)">
      <summary>比较两个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 对象。</summary>
      <returns>如果两个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 对象相等，则为 true；否则为 false。</returns>
      <param name="point1">要比较的第一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />。</param>
      <param name="point2">要比较的第二个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativePosition.op_Inequality(Microsoft.Windows.Design.Interaction.RelativePosition,Microsoft.Windows.Design.Interaction.RelativePosition)">
      <summary>比较两个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 对象。</summary>
      <returns>如果两个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 对象不相等，则为 true；否则为 false。</returns>
      <param name="point1">要比较的第一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />。</param>
      <param name="point2">要比较的第二个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativePosition.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>上下文项 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 对象的枚举。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativePosition.ToString">
      <summary>返回此位置的名称。</summary>
      <returns>此位置的名称。 如果未命名该对象，则返回基实现。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.RelativePositions">
      <summary>表示通用 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePositions" /> 对象的一组静态实例。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.BottomLeft">
      <summary>获取设计图面上某一项的左下角。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的左下角。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.BottomRight">
      <summary>获取设计图面上某一项的右下角。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的右下角。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.BottomSide">
      <summary>获取设计图面上某一项的底边。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的底边。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.Bounds">
      <summary>获取设计图面上某一项的 <see cref="P:Microsoft.Windows.Design.Interaction.RelativePositions.LeftSide" />、<see cref="P:Microsoft.Windows.Design.Interaction.RelativePositions.TopSide" />、<see cref="P:Microsoft.Windows.Design.Interaction.RelativePositions.RightSide" /> 和 <see cref="P:Microsoft.Windows.Design.Interaction.RelativePositions.BottomSide" />。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePositions" />，它表示设计图面上某一项的左边、上边、右边和下边。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.Center">
      <summary>获取设计图面上某一项的中心。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的中心。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.ExternalBottomLeft">
      <summary>获取设计图面上某一项的外部左下角。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的外部左下角。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.ExternalBottomRight">
      <summary>获取设计图面上某一项的外部右下角。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的外部右下角。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.ExternalBottomSide">
      <summary>获取设计图面上某一项的外边底边。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的外部底边。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.ExternalLeftSide">
      <summary>获取设计图面上某一项的外部左边。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的外部左边。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.ExternalRightSide">
      <summary>获取设计图面上某一项的外部右边。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的外部右边。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.ExternalTopLeft">
      <summary>获取设计图面上某一项的外部左上角。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的外部左上角。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.ExternalTopRight">
      <summary>获取设计图面上某一项的外部右上角。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的外部右上角。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.ExternalTopSide">
      <summary>获取设计图面上某一项的外部顶边。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的外部顶边。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.InternalBottomLeft">
      <summary>获取设计图面上某一项的内部左下角。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的内部左下角。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.InternalBottomRight">
      <summary>获取设计图面上某一项的内部右下角。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的内部右下角。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.InternalBottomSide">
      <summary>获取设计图面上某一项的内部底边。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的内部底边。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.InternalLeftSide">
      <summary>获取设计图面上某一项的内部左边。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的内部左边。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.InternalRightSide">
      <summary>获取设计图面上某一项的内部右边。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的内部右边。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.InternalTopLeft">
      <summary>获取设计图面上某一项的内部左上角。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的内部左上角。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.InternalTopRight">
      <summary>获取设计图面上某一项的内部右上角。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的内部右上角。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.InternalTopSide">
      <summary>获取设计图面上某一项的内部顶边。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的内部顶边。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.LeftSide">
      <summary>获取设计图面上某一项的左边。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的左边。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.RightSide">
      <summary>获取设计图面上某一项的右边。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的右边。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.TopLeft">
      <summary>获取设计图面上某一项的左上角。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的左上角。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.TopRight">
      <summary>获取设计图面上某一项的右上角。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的右上角。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativePositions.TopSide">
      <summary>获取设计图面上某一项的顶边。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，表示设计图面上某一项的顶边。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.RelativeValue">
      <summary>表示设计器上的坐标。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativeValue.#ctor(Microsoft.Windows.Design.Interaction.RelativePosition,System.Double)">
      <summary>使用 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" /> 和值初始化  <see cref="T:Microsoft.Windows.Design.Interaction.RelativeValue" /> 结构的新实例。</summary>
      <param name="reference">该值已知的相对位置类型。</param>
      <param name="value">该相对位置的值。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativeValue.Equals(System.Object)">
      <summary>确定指定对象是否与此 <see cref="T:Microsoft.Windows.Design.Interaction.RelativeValue" /> 结构相等。</summary>
      <returns>如果指定的对象与此 <see cref="T:Microsoft.Windows.Design.Interaction.RelativeValue" /> 相等，则为 true；否则为 false。</returns>
      <param name="obj">要测试的对象。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativeValue.GetHashCode">
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativeValue.op_Equality(Microsoft.Windows.Design.Interaction.RelativeValue,Microsoft.Windows.Design.Interaction.RelativeValue)">
      <summary>比较两个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativeValue" /> 结构。</summary>
      <returns>如果两个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativeValue" /> 结构相等，为 true；否则为 false。</returns>
      <param name="first">要比较的第一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativeValue" />。</param>
      <param name="second">要比较的第二个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativeValue" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativeValue.op_Inequality(Microsoft.Windows.Design.Interaction.RelativeValue,Microsoft.Windows.Design.Interaction.RelativeValue)">
      <summary>比较两个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativeValue" /> 结构。</summary>
      <returns>如果两个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativeValue" /> 结构不相等，则为 true；否则为 false。</returns>
      <param name="first">要比较的第一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativeValue" />。</param>
      <param name="second">要比较的第二个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativeValue" />。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativeValue.Position">
      <summary>获取或设置 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，它标识此值的种类。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />，标识此值的类型。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RelativeValue.Value">
      <summary>获取或设置此位置或坐标的实际值。</summary>
      <returns>此位置和坐标的实际值。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.RelativeValueCollection">
      <summary>表示值的集合，这些值描述设计器图面上窗格或容器中的项目的位置。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativeValueCollection.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.RelativeValueCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RelativeValueCollection.Find(Microsoft.Windows.Design.Interaction.RelativePosition)">
      <summary>查找指定位置的位置值。</summary>
      <returns>指定位置的 <see cref="T:Microsoft.Windows.Design.Interaction.RelativeValue" />。</returns>
      <param name="position">要查找的 <see cref="T:Microsoft.Windows.Design.Interaction.RelativePosition" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="position" /> 为 null。</exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.RootPlacementAdapter">
      <summary>为不具有父项的任何元素提供位置支持。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.RootPlacementAdapter.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.RootPlacementAdapter" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.RootPlacementAdapter.AdapterType">
      <summary>获取适配器类型。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.Selection">
      <summary>表示设计器中用户选定的一组对象。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Selection.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.Selection" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Selection.#ctor(Microsoft.Windows.Design.Model.ModelItem[])">
      <summary>用指定的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 对象数组初始化 <see cref="T:Microsoft.Windows.Design.Interaction.Selection" /> 类的新实例。</summary>
      <param name="selectedObjects">要添加到选择内容中的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 对象数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="selectedObjects" /> 参数为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Selection.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Windows.Design.Model.ModelItem})">
      <summary>用指定的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 对象枚举初始化 <see cref="T:Microsoft.Windows.Design.Interaction.Selection" /> 类的新实例。</summary>
      <param name="selectedObjects">要添加到选择内容中的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 对象枚举。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="selectedObjects" /> 参数为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Selection.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Windows.Design.Model.ModelItem},System.Predicate{Microsoft.Windows.Design.Model.ModelItem})">
      <summary>用指定的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 对象枚举和谓词初始化 <see cref="T:Microsoft.Windows.Design.Interaction.Selection" /> 类的新实例。</summary>
      <param name="selectedObjects">要添加到选择内容中的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 对象枚举。</param>
      <param name="match">只有 <paramref name="selectedObjects" /> 中与谓词匹配的那些对象才会添加到选择内容中。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="selectedObjects" /> 或 <paramref name="match" /> 参数为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Selection.#ctor(System.Collections.IEnumerable)">
      <summary>用指定的对象枚举初始化 <see cref="T:Microsoft.Windows.Design.Interaction.Selection" /> 类的新实例。</summary>
      <param name="selectedObjects">要添加到选择内容中的对象枚举。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="selectedObjects" /> 参数为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Selection.#ctor(System.Collections.IEnumerable,System.Predicate{Microsoft.Windows.Design.Model.ModelItem})">
      <summary>用对象的指定枚举和谓词初始化 <see cref="T:Microsoft.Windows.Design.Interaction.Selection" /> 类的新实例。</summary>
      <param name="selectedObjects">要添加到选择内容中的对象枚举。</param>
      <param name="match">只有 <paramref name="selectedObjects" /> 中与谓词匹配的那些对象才会添加到选择内容中。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="selectedObjects" /> 或 <paramref name="match" /> 参数为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Selection.ItemType">
      <summary>获取 <see cref="T:Microsoft.Windows.Design.Interaction.Selection" /> 的类型。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.Selection" /> 的类型。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Selection.PrimarySelection">
      <summary>获取主选择对象。</summary>
      <returns>如果选择内容包含对象，则为主选择对象；否则为 null。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Selection.SelectedObjects">
      <summary>获取选择内容中的对象枚举。</summary>
      <returns>选择内容中的对象枚举。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Selection.SelectionCount">
      <summary>获取选择内容中的对象数。</summary>
      <returns>选择内容中的对象数。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Selection.ViewSelection">
      <summary>获取选择内容，其中包含提供视图的模型项。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.Selection" />，其中包含提供视图的模型项。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.SelectionCommands">
      <summary>提供控制设计器中对象的选择的标准命令。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.SelectionCommands.Clear">
      <summary>获取 <see cref="T:System.Windows.Input.RoutedCommand" /> 中表示清除现有选择的请求。</summary>
      <returns>清除现有选定内容的请求。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.SelectionCommands.SelectAll">
      <summary>获取 <see cref="T:System.Windows.Input.RoutedCommand" /> 以表示设计器中选择所有对象的请求。</summary>
      <returns>在设计器中选择所有对象的请求。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.SelectionCommands.SelectNext">
      <summary>获取 <see cref="T:System.Windows.Input.RoutedCommand" /> 以表示设计器中选择下个对象的请求。</summary>
      <returns>在设计器中选择下一个对象的请求。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.SelectionCommands.SelectOnlyTarget">
      <summary>获取 <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommand" /> 以表示设计器中鼠标指针下方的只选择对象的请求。</summary>
      <returns>在设计器中仅选择鼠标指针下方的对象的请求。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.SelectionCommands.SelectPrevious">
      <summary>获取 <see cref="T:System.Windows.Input.RoutedCommand" /> 以表示设计器中选择上一对象的请求。</summary>
      <returns>在设计器中选择上一个对象的请求。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.SelectionCommands.SelectTarget">
      <summary>获取 <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommand" /> 以表示设计器中鼠标指针下方的选择对象的请求。</summary>
      <returns>在设计器中选择鼠标指针下方的对象的请求。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.SelectionCommands.ShowEvent">
      <summary>获取 <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommand" /> 以表示在设计器中主选择对象的默认事件处理程序的请求。</summary>
      <returns>在设计器中显示主要选定对象的默认事件处理程序的请求。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.SelectionCommands.ToggleSelectTarget">
      <summary>获取 <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommand" /> 以表示设计器中鼠标指针下方对象的切换选择状态的请求。</summary>
      <returns>在设计器中切换鼠标指针下方的对象的选定状态的请求。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.SelectionCommands.UnionSelectTarget">
      <summary>获取 <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommand" /> 以表示将设计器中鼠标指针下方的对象添加到现有选定内容中。</summary>
      <returns>将设计器中鼠标指针下方的对象添加到现有选定内容中的请求。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.SelectionOperations">
      <summary>提供控制设计器中的对象的编程选择的标准操作。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.SelectionOperations.Select(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>处理一个请求以便通过编程方式在设计器中选择对象。</summary>
      <returns>新空选择、包含新对象的新选择或现有选择。 有关更多信息，请参见备注部分。</returns>
      <param name="context">当前的编辑上下文。</param>
      <param name="itemToSelect">要选择的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 或 <paramref name="itemToSelect" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.SelectionOperations.SelectOnly(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>处理一个请求以便通过编程方式在设计器中选择单个对象。</summary>
      <returns>包含要选择的对象的选择内容。</returns>
      <param name="context">当前的编辑上下文。</param>
      <param name="itemToSelect">要选择的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 或 <paramref name="itemToSelect" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.SelectionOperations.Subscribe(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.SubscribeContextCallback{Microsoft.Windows.Design.Interaction.Selection})">
      <summary>添加一个在编辑上下文中的选择更改时调用的回调方法。</summary>
      <param name="context">感兴趣的编辑上下文。</param>
      <param name="handler">选择更改时调用的方法。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 或 <paramref name="handler" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.SelectionOperations.Toggle(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>处理一个请求以便通过编程方式切换设计器中某个对象的选择状态。</summary>
      <returns>包含或不包含要切换的对象的新选择。 有关更多信息，请参见备注部分。</returns>
      <param name="context">当前的编辑上下文。</param>
      <param name="itemToToggle">要选择或取消选择的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 或 <paramref name="itemToToggle" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.SelectionOperations.Union(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>处理一个请求以便通过编程方式将设计器中的某个对象添加到现有选择中。</summary>
      <returns>包含新对象的新选择或现有选择。 有关更多信息，请参见备注部分。</returns>
      <param name="context">当前的编辑上下文。</param>
      <param name="itemToAdd">要选择的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 或 <paramref name="itemToAdd" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.SelectionOperations.Unsubscribe(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.SubscribeContextCallback{Microsoft.Windows.Design.Interaction.Selection})">
      <summary>移除一个回调方法，以便在编辑上下文中的选择更改时不会调用该方法。</summary>
      <param name="context">感兴趣的编辑上下文。</param>
      <param name="handler">移除的方法。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 或 <paramref name="handler" /> 为 null。</exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.SelectionTool">
      <summary>表示在设计器中选择对象的工具（如鼠标指针）。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.SelectionTool.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.SelectionTool" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.SelectionTool.OnActivate(Microsoft.Windows.Design.Interaction.Tool)">
      <summary>当激活 <see cref="T:Microsoft.Windows.Design.Interaction.SelectionTool" /> 时调用。</summary>
      <param name="previousTool">之前活动的工具。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.SelectionTool.OnDeactivate">
      <summary>在停用 <see cref="T:Microsoft.Windows.Design.Interaction.SelectionTool" /> 时调用。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.Task">
      <summary>表示命令以及这些命令的输入绑定的集合。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Task.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.Task" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Task.AdornerFilter">
      <summary>获取或设置一个筛选器，该筛选器用于筛选设计器的命中测试算法所看到的装饰器集。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.ModelHitTestFilterCallback" />，用于筛选设计器的命中测试算法所看到的装饰器集。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Task.BeginFocus(Microsoft.Windows.Design.Interaction.GestureData)">
      <summary>开始为任务设置焦点。</summary>
      <param name="data">焦点的笔势数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">任务已有焦点。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Task.CommandBindings">
      <summary>获取任务的 <see cref="T:System.Windows.Input.CommandBindingCollection" />。</summary>
      <returns>包含此任务的命令绑定的 <see cref="T:System.Windows.Input.CommandBindingCollection" /> 实例。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Task.Complete">
      <summary>完成在此任务有焦点时进行的更改。</summary>
      <exception cref="T:System.InvalidOperationException">任务没有焦点。</exception>
    </member>
    <member name="E:Microsoft.Windows.Design.Interaction.Task.Completed">
      <summary>在此任务完成时发生。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Task.Cursor">
      <summary>获取或设置任务的光标。</summary>
      <returns>任务的 <see cref="T:System.Windows.Input.Cursor" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Task.Description">
      <summary>获取或设置此任务的说明。</summary>
      <returns>此任务的说明。</returns>
    </member>
    <member name="E:Microsoft.Windows.Design.Interaction.Task.FocusDeactivated">
      <summary>在此任务的焦点停用时发生。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Task.InputBindings">
      <summary>获取任务的 <see cref="T:System.Windows.Input.InputBindingCollection" />。</summary>
      <returns>包含此任务的输入绑定的 <see cref="T:System.Windows.Input.InputBindingCollection" /> 实例。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Task.IsFocused">
      <summary>获取一个值，该值指示此任务是否具有焦点。</summary>
      <returns>如果此任务具有焦点，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Task.ModelFilter">
      <summary>获取或设置一个筛选器，该筛选器用于筛选设计器的命中测试算法所看到的模型项集。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.ModelHitTestFilterCallback" />，用于筛选设计器的命中测试算法所看到的模型项集。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Task.OnCompleted(System.EventArgs)">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.Interaction.Task.Completed" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Task.OnFocusDeactivated(System.EventArgs)">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.Interaction.Task.FocusDeactivated" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Task.OnReverted(System.EventArgs)">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.Interaction.Task.Reverted" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Task.Revert">
      <summary>还原此任务。</summary>
      <exception cref="T:System.InvalidOperationException">任务未激活。</exception>
    </member>
    <member name="E:Microsoft.Windows.Design.Interaction.Task.Reverted">
      <summary>在此任务还原时发生。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Task.ToolCommandBindings">
      <summary>获取任务的 <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommandBindingCollection" />。</summary>
      <returns>包含此任务的工具命令绑定的 <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommandBindingCollection" /> 实例。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.TaskProvider">
      <summary>一个功能提供程序，可将其添加到类中，以便自动将任务添加到活动工具中。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.TaskProvider.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.TaskProvider" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.TaskProvider.Activate(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>在要初次请求任务提供程序的任务时调用。</summary>
      <param name="item">
        <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 对象。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.TaskProvider.Context">
      <summary>获取激活了此任务提供程序的编辑的上下文。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.EditingContext" /> 对象，表示已激活当前任务提供程序的对象。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.TaskProvider.Deactivate">
      <summary>在设计器要放弃任务提供程序时调用。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.TaskProvider.IsToolSupported(Microsoft.Windows.Design.Interaction.Tool)">
      <summary>返回一个值，该值指示此任务提供程序是否支持指定的工具。</summary>
      <returns>如果支持指定的工具，则为 true；否则为 false。</returns>
      <param name="tool">要检查的 <see cref="T:Microsoft.Windows.Design.Interaction.Tool" /> 对象。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.TaskProvider.Tasks">
      <summary>获取此任务提供程序提供的任务的集合。</summary>
      <returns>一个 <see cref="T:System.Collections.Generic.ICollection`1" />，其中包含此 <see cref="T:Microsoft.Windows.Design.Interaction.TaskProvider" /> 提供的所有任务。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.Tool">
      <summary>表示确定设计器模式的工具。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Tool.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.Tool" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Tool.Context">
      <summary>获取工具中代码的编辑的上下文。</summary>
      <returns>工具中代码的 <see cref="T:Microsoft.Windows.Design.EditingContext" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Tool.Cursor">
      <summary>获取或设置鼠标的默认光标。</summary>
      <returns>鼠标的 <see cref="T:System.Windows.Input.Cursor" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Tool.FocusedTask">
      <summary>获取当前具有重点任务（如果存在的话）。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.Task" /> 对象，表示当前具有焦点的任务。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Tool.ItemType">
      <summary>获取工具的类型。</summary>
      <returns>表示工具类型的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Tool.OnActivate(Microsoft.Windows.Design.Interaction.Tool)">
      <summary>当工具激活时调用。</summary>
      <param name="previousTool">在此工具激活之前处于上下文中的工具。 默认 <see cref="T:Microsoft.Windows.Design.Interaction.Tool" /> 实现不对此参数执行任何操作。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Tool.OnDeactivate">
      <summary>当工具正在停用时调用。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Tool.OnItemChanged(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.ContextItem)">
      <summary>向 <see cref="T:Microsoft.Windows.Design.Interaction.Tool" /> 类中添加激活和停用语义。</summary>
      <param name="context">其中正发生更改的编辑上下文。</param>
      <param name="previousItem">先前的工具。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Tool.Tasks">
      <summary>获取此工具提供的任务集。</summary>
      <returns>此工具提供的任务的 <see cref="T:System.Collections.ObjectModel.Collection`1" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ToolAction">
      <summary>表示用户笔势。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.None">
      <summary>不执行任何操作。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.Down">
      <summary>已按下鼠标按钮。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.Up">
      <summary>已释放鼠标按钮。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.Move">
      <summary>已移动鼠标滚轮。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.Wheel">
      <summary>已移动鼠标滚轮。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.Click">
      <summary>已单击鼠标按钮。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.DoubleClick">
      <summary>已双击鼠标按钮。 双击和单击交互如下: <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.Click" />, <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.Click" />, <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.DoubleClick" />。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.Enter">
      <summary>鼠标输入了一个元素。 如果鼠标光标进入装饰器，则 <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.Enter" /> 事件只有在装饰器目标与上一个目标不同的情况下才发生。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.Leave">
      <summary>鼠标左移了一个元素。 如果鼠标光标进入装饰器，则 <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.Leave" /> 事件只有在新目标与装饰器目标不同的情况下才发生。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.Hover">
      <summary>鼠标在元素或装饰器上停留了片刻。 当鼠标经过其他元素时引发新的悬停事件。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.DragIntent">
      <summary>用户按下鼠标按钮并移动鼠标到某个阀值以外。 这指示用户开始拖动操作的意图。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.DragEnter">
      <summary>一个 <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.DragEnter" /> 事件，该事件发生的原因是以前调用了 DragDrop.DoDragDrop。 源和目标对象始终引用元素，而不引用装饰器。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.DragOver">
      <summary>一个 <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.DragOver" /> 事件，该事件发生的原因是以前调用了 DragDrop.DoDragDrop。 源和目标对象始终引用元素，而不引用装饰器。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.DragLeave">
      <summary>一个 <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.DragLeave" /> 事件，该事件发生的原因是以前调用了 DragDrop.DoDragDrop。 源和目标对象始终引用元素，而不引用装饰器。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.DragDrop">
      <summary>一个 <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.DragDrop" /> 事件，事件发生的原因是以前调用了 DragDrop.DoDragDrop。 源和目标对象始终引用元素，而不引用装饰器。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.DragFeedback">
      <summary>一个 <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.DragFeedback" /> 事件，该事件发生的原因是以前调用了 DragDrop.DoDragDrop。 源和目标对象始终引用元素，而不引用装饰器。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.DragComplete">
      <summary>用户按下鼠标按钮并移动鼠标。 这将导致 <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.DragIntent" /> 成为终止状态。 接着，用户释放鼠标按钮，发出拖动已完成的信号。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.DragOutside">
      <summary>用户将某一项拖拽到设计图面外。 可通过将命令绑定到此笔势调用拖放操作。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ToolActionEventArgs">
      <summary>为 <see cref="T:Microsoft.Windows.Design.Interaction.ToolAction" /> 事件提供数据。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolActionEventArgs.#ctor(Microsoft.Windows.Design.Interaction.ToolAction,System.EventArgs,System.Windows.Input.InputDevice,System.Int32)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.ToolActionEventArgs" /> 类的新实例。</summary>
      <param name="toolAction">与此事件关联的工具操作。</param>
      <param name="sourceEvent">引起此操作的事件。</param>
      <param name="inputDevice">要与此事件关联的输入设备。</param>
      <param name="timestamp">发生输入的时间。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceEvent" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolActionEventArgs.#ctor(Microsoft.Windows.Design.Interaction.ToolAction,System.Windows.Input.InputEventArgs)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.ToolActionEventArgs" /> 类的新实例。</summary>
      <param name="toolAction">与此事件关联的工具操作。</param>
      <param name="sourceEvent">引起此操作的事件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceEvent" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolActionEventArgs.SourceEvent">
      <summary>获取导致该工具操作事件发生的输入事件。</summary>
      <returns>一个 <see cref="T:System.EventArgs" />，表示导致该工具操作事件发生的输入事件。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolActionEventArgs.ToolAction">
      <summary>获取与此事件关联的工具操作。</summary>
      <returns>与此事件关联的工具操作。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolActionEventArgs.ToString">
      <summary>返回描述事件的字符串用于诊断。</summary>
      <returns>说明事件的诊断字符串。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ToolCommand">
      <summary>充当命令标识符和调用特定命令的统一方法。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommand.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommand" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommand.#ctor(System.String)">
      <summary>用指定的命令名初始化 <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommand" /> 类的新实例。</summary>
      <param name="commandName">命令的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="commandName" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommand.CanExecute(Microsoft.Windows.Design.Interaction.GestureData)">
      <summary>定位该命令的命令绑定并询问是否启用它。</summary>
      <returns>如果启用该命令，则为 true；如果禁用该命令或该命令没有绑定，则为 false。</returns>
      <param name="data">要传递给该命令的笔势数据。 由于笔势数据提供 <see cref="M:Microsoft.Windows.Design.Interaction.ToolCommand.CanExecute(Microsoft.Windows.Design.Interaction.GestureData)" /> 方法可从中定位活动工具的上下文对象，因此需要使用笔势数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" />.Context 为 null。</exception>
    </member>
    <member name="E:Microsoft.Windows.Design.Interaction.ToolCommand.CanExecuteChanged">
      <summary>在更改此命令的状态时发生。</summary>
      <exception cref="T:System.NotSupportedException">使用时。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommand.Execute(Microsoft.Windows.Design.Interaction.GestureData)">
      <summary>定位该命令的命令绑定并执行它。</summary>
      <param name="data">要传递给该命令的笔势数据。 由于笔势数据提供 <see cref="M:Microsoft.Windows.Design.Interaction.ToolCommand.Execute(Microsoft.Windows.Design.Interaction.GestureData)" /> 方法可从中定位活动工具的上下文对象，因此需要使用笔势数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" />.Context 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolCommand.Name">
      <summary>获取此命令的名称。</summary>
      <returns>一个表示此命令的名称的字符串，或者为空字符串（如果此命令没有名称）。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommand.System#Windows#Input#ICommand#CanExecute(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Windows.Input.ICommand.CanExecute(System.Object)" />。</summary>
      <returns>如果可以执行此命令，则为 true；否则为 false。</returns>
      <param name="parameter">此命令使用的数据。 如果此命令不需要传递数据，则该对象可以设置为 null。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommand.System#Windows#Input#ICommand#Execute(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Windows.Input.ICommand.Execute(System.Object)" />。</summary>
      <param name="parameter">此命令使用的数据。 如果此命令不需要传递数据，则该对象可以设置为 null。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommand.ToString">
      <summary>返回此命令的名称。</summary>
      <returns>此命令的名称。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ToolCommandBinding">
      <summary>充当命令和实现命令的事件处理程序之间的桥梁。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommandBinding.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommandBinding" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommandBinding.#ctor(Microsoft.Windows.Design.Interaction.ToolCommand)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommandBinding" /> 类的新实例。</summary>
      <param name="command">要绑定的命令。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommandBinding.#ctor(Microsoft.Windows.Design.Interaction.ToolCommand,Microsoft.Windows.Design.Interaction.ExecutedToolEventHandler)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommandBinding" /> 类的新实例。</summary>
      <param name="command">要绑定的命令。</param>
      <param name="executedToolEventHandler">执行命令时要引发的事件处理程序。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" /> 或 <paramref name="executedToolEventHandler" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommandBinding.#ctor(Microsoft.Windows.Design.Interaction.ToolCommand,Microsoft.Windows.Design.Interaction.ExecutedToolEventHandler,Microsoft.Windows.Design.Interaction.CanExecuteToolEventHandler)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommandBinding" /> 类的新实例。</summary>
      <param name="command">要绑定的命令。</param>
      <param name="executedToolEventHandler">执行命令时要引发的事件处理程序。</param>
      <param name="canExecuteToolEventHandler">调用 <see cref="M:Microsoft.Windows.Design.Interaction.ToolCommand.CanExecute(Microsoft.Windows.Design.Interaction.GestureData)" /> 方法时要引发的事件处理程序。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" />、<paramref name="executeRoutedEventHandler" /> 或 <paramref name="canExecuteRoutedEventHandler" /> 为 null。</exception>
    </member>
    <member name="E:Microsoft.Windows.Design.Interaction.ToolCommandBinding.CanExecute">
      <summary>调用 QueryEnabled 命令时发生。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolCommandBinding.Command">
      <summary>获取或设置与此绑定关联的工具命令。</summary>
      <returns>与此绑定关联的工具命令。</returns>
    </member>
    <member name="E:Microsoft.Windows.Design.Interaction.ToolCommandBinding.Execute">
      <summary>在执行命令时发生。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ToolCommandBindingCollection">
      <summary>表示工具命令绑定的集合。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommandBindingCollection.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommandBindingCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommandBindingCollection.AddRange(System.Collections.Generic.ICollection{Microsoft.Windows.Design.Interaction.ToolCommandBinding})">
      <summary>将指定的绑定添加到集合。</summary>
      <param name="bindings">要添加的绑定。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindings" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommandBindingCollection.InsertItem(System.Int32,Microsoft.Windows.Design.Interaction.ToolCommandBinding)">
      <summary>将项插入到集合中。</summary>
      <param name="index">要添加项处的索引。</param>
      <param name="item">要添加的项。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommandBindingCollection.SetItem(System.Int32,Microsoft.Windows.Design.Interaction.ToolCommandBinding)">
      <summary>设置集合中某项的值。</summary>
      <param name="index">要设置的值的索引。</param>
      <param name="item">要在索引处设置的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 为 null。</exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ToolGesture">
      <summary>表示与鼠标交互的工具。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolGesture.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.ToolGesture" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolGesture.#ctor(Microsoft.Windows.Design.Interaction.ToolAction)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.ToolGesture" /> 类的新实例。</summary>
      <param name="action">要执行的操作。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolGesture.#ctor(Microsoft.Windows.Design.Interaction.ToolAction,System.Windows.Input.MouseButton)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.ToolGesture" /> 类的新实例。</summary>
      <param name="action">要执行的操作。</param>
      <param name="button">将按钮状态修改为仅允许指定的按钮。 例如，如果您只想让“单击”操作对鼠标左键有效，则需要在参数中传递 <see cref="F:System.Windows.Input.MouseButton.Left" />。 默认为允许所有按钮。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolGesture.#ctor(Microsoft.Windows.Design.Interaction.ToolAction,System.Windows.Input.MouseButton,System.Windows.Input.ModifierKeys)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.ToolGesture" /> 类的新实例。</summary>
      <param name="action">要执行的操作。</param>
      <param name="button">将按钮状态修改为仅允许指定的按钮。 例如，如果您只想让“单击”操作对鼠标左键有效，则需要在参数中传递 <see cref="F:System.Windows.Input.MouseButton.Left" />。 默认为允许所有按钮。</param>
      <param name="modifiers">要使用的键盘修饰符。 默认情况下，任何键盘修饰符都是有效的。 可通过在此参数中提供有效修饰符限制其设置。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolGesture.LeftButton">
      <summary>获取或设置当鼠标左键按下时此笔势是否允许执行。</summary>
      <returns>如果按下鼠标左按钮时，允许执行此手势，则返回 <see cref="F:System.Windows.Input.MouseButtonState.Pressed" />。 默认返回 <see cref="F:System.Windows.Input.MouseButtonState.Pressed" />。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)">
      <summary>返回一个值，该值指示此笔势是否与输入事件匹配。</summary>
      <returns>如果此笔势与输入事件相匹配，则为 true；否则为 false。</returns>
      <param name="targetElement">此笔势的目标元素。</param>
      <param name="inputEventArgs">要与此笔势相比较的输入事件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputEventArgs" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolGesture.MiddleButton">
      <summary>获取或设置当鼠标中键按下时此笔势是否允许执行。</summary>
      <returns>如果按下鼠标的中间按钮时，允许执行此手势，则返回 <see cref="F:System.Windows.Input.MouseButtonState.Pressed" />。 默认返回 <see cref="F:System.Windows.Input.MouseButtonState.Pressed" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolGesture.Modifiers">
      <summary>获取或设置允许按下该笔势的修改键。</summary>
      <returns>返回允许为该笔势按下的修改键。 默认返回所有修改键的组合。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolGesture.RightButton">
      <summary>获取或设置当鼠标右键按下时此笔势是否允许执行。</summary>
      <returns>如果按下鼠标右按钮时，允许执行此手势，则返回 <see cref="F:System.Windows.Input.MouseButtonState.Pressed" />。 默认返回 <see cref="F:System.Windows.Input.MouseButtonState.Pressed" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolGesture.ToolAction">
      <summary>获取或设置与此笔势关联的操作。</summary>
      <returns>与此笔势关联的 <see cref="T:Microsoft.Windows.Design.Interaction.ToolAction" />。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolGesture.ToString">
      <summary>返回描述笔势的字符串用于诊断。</summary>
      <returns>描述笔势的诊断字符串。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolGesture.XButton1">
      <summary>获取或设置当鼠标的 xbutton1 按钮按下时此笔势是否允许执行。</summary>
      <returns>如果按下 xbutton1 鼠标按钮时，允许执行此手势，则返回 <see cref="F:System.Windows.Input.MouseButtonState.Pressed" />。 默认返回 <see cref="F:System.Windows.Input.MouseButtonState.Pressed" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolGesture.XButton2">
      <summary>获取或设置当鼠标的 xbutton2 按钮按下时此笔势是否允许执行。</summary>
      <returns>如果按下 xbutton2 鼠标按钮时，允许执行此手势，则返回 <see cref="F:System.Windows.Input.MouseButtonState.Pressed" />。 默认返回 <see cref="F:System.Windows.Input.MouseButtonState.Pressed" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ViewHitTestFilterCallback">
      <summary>表示一个回调方法，该方法指定在 <see cref="M:Microsoft.Windows.Design.Interaction.ViewItem.HitTest(Microsoft.Windows.Design.Interaction.ViewHitTestFilterCallback,Microsoft.Windows.Design.Interaction.ViewHitTestResultCallback,System.Windows.Media.HitTestParameters)" /> 方法中要从命中测试处理中忽略的可视树的部分。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.HitTestFilterBehavior" />，指定 <paramref name="potentialHitTestTarget" /> 的命中测试行为。</returns>
      <param name="potentialHitTestTarget">要进行命中测试的 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" />。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ViewHitTestResult">
      <summary>表示从 <see cref="M:Microsoft.Windows.Design.Interaction.ViewItem.HitTest(Microsoft.Windows.Design.Interaction.ViewHitTestFilterCallback,Microsoft.Windows.Design.Interaction.ViewHitTestResultCallback,System.Windows.Media.HitTestParameters)" /> 方法中的命中测试返回的值。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ViewHitTestResult.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.ViewHitTestResult" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ViewHitTestResult.ViewHit">
      <summary>获取已命中的 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 对象。</summary>
      <returns>已命中的 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ViewHitTestResultCallback">
      <summary>表示用于自定义 <see cref="M:Microsoft.Windows.Design.Interaction.ViewItem.HitTest(Microsoft.Windows.Design.Interaction.ViewHitTestFilterCallback,Microsoft.Windows.Design.Interaction.ViewHitTestResultCallback,System.Windows.Media.HitTestParameters)" /> 方法中的命中测试的回调。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.HitTestFilterBehavior" />，指定 <paramref name="result" /> 的命中测试行为。</returns>
      <param name="result">要获取其命中测试行为的 <see cref="T:Microsoft.Windows.Design.Interaction.ViewHitTestResult" />。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ViewItem">
      <summary>一个支持与视图对象交互的抽象类。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ViewItem.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ViewItem.Equals(System.Object)">
      <summary>确定指定的 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 是否等于当前的 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" />。</summary>
      <returns>如果指定的 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 等于当前的 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" />，则为 true；否则为 false。</returns>
      <param name="obj">与当前的 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 进行比较的 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" />。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ViewItem.FlowDirection">
      <summary>获取视图的 FlowDirection 属性。</summary>
      <returns>视图的 <see cref="T:System.Windows.FlowDirection" /> 值。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ViewItem.GetHashCode">
      <summary>作为 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 的哈希函数。</summary>
      <returns>当前 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 的哈希代码。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ViewItem.HitTest(Microsoft.Windows.Design.Interaction.ViewHitTestFilterCallback,Microsoft.Windows.Design.Interaction.ViewHitTestResultCallback,System.Windows.Media.HitTestParameters)">
      <summary>使用调用方定义的 <see cref="T:System.Windows.Media.HitTestFilterCallback" /> 和 <see cref="T:System.Windows.Media.HitTestResultCallback" /> 方法，对 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 启动命中测试。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.ViewHitTestResult" />，其中包含有已命中的可视对象。</returns>
      <param name="filterCallback">一个委托，指定要从命中测试中忽略的可视化树的部分。</param>
      <param name="resultCallback">一个用于自定义命中测试的委托。</param>
      <param name="hitTestParameters">一个用于定义命中测试的 <see cref="T:System.Windows.Media.HitTestParameters" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ViewItem.IsDescendantOf(Microsoft.Windows.Design.Interaction.ViewItem)">
      <summary>确定可视对象是否为上级可视对象的后代。</summary>
      <returns>如果 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 是 <paramref name="ancestor" /> 的后代，则为 true；否则为 false。</returns>
      <param name="ancestor">要测试其上级关系的 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ViewItem.IsDescendantOf(System.Windows.Media.Visual)">
      <summary>获取一个值，该值指示该可视对象是否为指定的可视对象的后代。</summary>
      <returns>如果 <see cref="T:System.Windows.Media.Visual" /> 是 <paramref name="ancestor" /> 的后代，则为 true；否则为 false。</returns>
      <param name="ancestor">要测试其上级关系的 <see cref="T:System.Windows.Media.Visual" />。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ViewItem.IsOffscreen">
      <summary>获取一个值，该值指示该元素是否不在屏幕上。</summary>
      <returns>如果该元素不在屏幕上，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ViewItem.IsVisible">
      <summary>获取一个指示某个元素是否可见的值。</summary>
      <returns>如果该元素可见，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ViewItem.ItemType">
      <summary>获取表示此视图的基础依赖项对象的类型。</summary>
      <returns>基础依赖项对象的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ViewItem.LayoutTransform">
      <summary>获取当前 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 的布局转换。</summary>
      <returns>当前 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 的布局转换。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ViewItem.LogicalChildren">
      <summary>获取当前 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 的直接逻辑子级的集合。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 对象的枚举，它包含当前 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 的逻辑子级。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ViewItem.LogicalParent">
      <summary>获取当前 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 的逻辑父级。</summary>
      <returns>一个 <see cref="T:System.Windows.DependencyObject" />，它表示当前 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 的逻辑父级。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ViewItem.Offset">
      <summary>获取视图的偏移。</summary>
      <returns>一个 <see cref="T:System.Windows.Vector" />，它表示当前视图的偏移。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ViewItem.op_Equality(Microsoft.Windows.Design.Interaction.ViewItem,Microsoft.Windows.Design.Interaction.ViewItem)">
      <summary>确定指定的 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 实例是否被视为相等。</summary>
      <returns>如果 <paramref name="obj1" /> 等于 <paramref name="obj2" />，则为 true；否则为 false。</returns>
      <param name="obj1">要比较的第一个 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" />。</param>
      <param name="obj2">要比较的第二个 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ViewItem.op_Inequality(Microsoft.Windows.Design.Interaction.ViewItem,Microsoft.Windows.Design.Interaction.ViewItem)">
      <summary>确定是否将指定的 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 实例视为不相等。</summary>
      <returns>如果 <paramref name="obj1" /> 不等于 <paramref name="obj2" />，则为 true；否则为 false。</returns>
      <param name="obj1">要比较的第一个 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" />。</param>
      <param name="obj2">要比较的第二个 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" />。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ViewItem.PlatformObject">
      <summary>获取表示此视图的基础依赖项对象。</summary>
      <returns>基础依赖项对象。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ViewItem.PointToScreen(System.Windows.Point)">
      <summary>将表示 <see cref="T:System.Windows.Media.Visual" /> 的当前坐标系的 <see cref="T:System.Windows.Point" /> 转换为屏幕坐标中的 <see cref="T:System.Windows.Point" />。</summary>
      <returns>屏幕坐标中转换后的 <see cref="T:System.Windows.Point" /> 值。</returns>
      <param name="point">表示 <see cref="T:System.Windows.Media.Visual" /> 的当前坐标系的 <see cref="T:System.Windows.Point" /> 值。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ViewItem.RenderSize">
      <summary>获取视图的呈现大小。</summary>
      <returns>一个 <see cref="T:System.Windows.Size" /> 值，该值表示视图的呈现大小。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ViewItem.RenderSizeBounds">
      <summary>获取视图的布局矩形。</summary>
      <returns>一个 <see cref="T:System.Windows.Rect" />，它表示相对于逻辑父级的呈现大小和偏移。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ViewItem.SelectionFrameBounds">
      <summary>获取选择框的边界。</summary>
      <returns>一个 <see cref="T:System.Windows.Rect" />，它表示当前 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 的选择框。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ViewItem.Transform">
      <summary>获取当前 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 的转换值。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Transform" />，它表示当前 <see cref="T:System.Windows.Media.Visual" /> 的转换。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ViewItem.TransformFromVisual(System.Windows.Media.Visual)">
      <summary>返回一个转换，该转换可用于将指定可视对象中的坐标转换为视图。</summary>
      <returns>一个表示相应转换的 <see cref="T:System.Windows.Media.Transform" />，如果未能计算转换，则为 null。</returns>
      <param name="visual">要将坐标转换为的 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visual" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ViewItem.TransformToView(Microsoft.Windows.Design.Interaction.ViewItem)">
      <summary>返回一个转换，该转换可用于将视图中的坐标转换为指定的视图对象。</summary>
      <returns>一个表示相应转换的 <see cref="T:System.Windows.Media.Transform" />，如果未能计算转换，则为 null。</returns>
      <param name="view">要将坐标转换为的 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="view" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ViewItem.TransformToVisual(System.Windows.Media.Visual)">
      <summary>返回一个转换，该转换可用于将视图中的坐标转换为指定的可视对象。</summary>
      <returns>一个表示相应转换的 <see cref="T:System.Windows.Media.Transform" />，如果未能计算转换，则为 null。</returns>
      <param name="visual">要将坐标转换为的 <see cref="T:System.Windows.Media.Visual" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visual" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ViewItem.UpdateLayout">
      <summary>对基础平台对象调用 UpdateLayout 方法。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ViewItem.Visibility">
      <summary>获取视图的 <see cref="T:System.Windows.Visibility" /> 属性。</summary>
      <returns>视图的 <see cref="T:System.Windows.Visibility" /> 值。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ViewItem.VisualChildren">
      <summary>获取此 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 的直接可视子级的集合。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 对象的枚举，它包含当前 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 的可视子级。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ViewItem.VisualParent">
      <summary>获取当前 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 的可视父级。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" />，它表示当前 <see cref="T:Microsoft.Windows.Design.Interaction.ViewItem" /> 的逻辑父级。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.WheelGestureData">
      <summary>提供有关鼠标滚轮的笔势数据。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.WheelGestureData.#ctor(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem,System.Int32)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.WheelGestureData" /> 类的新实例。</summary>
      <param name="context">拥有此笔势数据的编辑上下文。</param>
      <param name="sourceModel">笔势开始时所在的模型。</param>
      <param name="targetModel">笔势当前所在的模型。</param>
      <param name="delta">滚轮的移动量。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />、<paramref name="sourceModel" /> 或 <paramref name="targetModel" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.WheelGestureData.#ctor(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem,System.Int32,System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Interaction.WheelGestureData" /> 类的新实例。</summary>
      <param name="context">拥有此笔势数据的编辑上下文。</param>
      <param name="sourceModel">笔势开始时所在的模型。</param>
      <param name="targetModel">笔势当前所在的模型。</param>
      <param name="delta">滚轮的移动量。</param>
      <param name="sourceAdorner">要与笔势关联的源装饰器（如果存在）。 此参数可以为 null。</param>
      <param name="targetAdorner">要与笔势关联的目标装饰器（如果存在）。 此参数可以为 null。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />、<paramref name="sourceModel" /> 或 <paramref name="targetModel" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.WheelGestureData.Delta">
      <summary>获取鼠标滚轮的滚动增量。</summary>
      <returns>一个整数，表示滚轮的移动量。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.WheelGestureData.FromEventArgs(Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs)">
      <summary>从 <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> 对象提供 <see cref="T:Microsoft.Windows.Design.Interaction.WheelGestureData" /> 对象。</summary>
      <returns>包含在 <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> 对象的 <see cref="P:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs.Parameter" /> 属性中的 <see cref="T:Microsoft.Windows.Design.Interaction.WheelGestureData" /> 对象。</returns>
      <param name="e">传递给命令回调的 <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.WheelGestureData.FromEventArgs(Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs)">
      <summary>从 <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> 对象提供 <see cref="T:Microsoft.Windows.Design.Interaction.WheelGestureData" /> 对象。</summary>
      <returns>包含在 <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> 对象的 <see cref="P:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs.Parameter" /> 属性中的 <see cref="T:Microsoft.Windows.Design.Interaction.WheelGestureData" /> 对象。</returns>
      <param name="e">传递给命令回调的 <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.CreateOptions">
      <summary>指定如何创建新项。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Model.CreateOptions.None">
      <summary>仅创建对象，不对它执行任何操作。 这是默认值。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Model.CreateOptions.InitializeDefaults">
      <summary>创建项并指定对象执行任何默认的初始化。 此标志通常在用户正在创建新控件或对象时传入。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.DefaultInitializer">
      <summary>用于在设计器中配置新对象。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.DefaultInitializer.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Model.DefaultInitializer" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.DefaultInitializer.InitializeDefaults(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>为指定项初始化默认值。</summary>
      <param name="item">要初始化的项。 不应该为 null。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.DefaultInitializer.InitializeDefaults(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.EditingContext)">
      <summary>使用所提供的编辑上下文为指定项初始化默认值。</summary>
      <param name="item">要初始化的项。 不应该为 null。</param>
      <param name="context">编辑上下文。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 为 null。</exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.DesignModeValueProvider">
      <summary>捕获用户在设计器中进行的属性更改，并在设计时提供新值。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.DesignModeValueProvider.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Model.DesignModeValueProvider" /> 类的新实例。</summary>
      <exception cref="T:System.InvalidOperationException">将无效属性添加到 <see cref="P:Microsoft.Windows.Design.Model.DesignModeValueProvider.Properties" />。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.DesignModeValueProvider.InvalidateProperty(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Metadata.PropertyIdentifier)">
      <summary>使指定的属性无效。</summary>
      <param name="item">要使其属性更改无效的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</param>
      <param name="property">要使其无效的属性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.DesignModeValueProvider.Properties">
      <summary>获取要捕获的属性集。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Model.PropertyIdentifierCollection" />，其中包含要捕获的属性集。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.DesignModeValueProvider.TranslatePropertyValue(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Metadata.PropertyIdentifier,System.Object)">
      <summary>捕获用户在设计器中进行的属性更改，并在设计时使用自定义逻辑来提供新值。</summary>
      <returns>要在设计器中将该属性设置为的值。</returns>
      <param name="item">要为其捕获属性更改的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</param>
      <param name="identifier">用户将更改其值的属性。</param>
      <param name="value">用户将该属性更改为的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 为 null。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 为 null。</exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.FeatureExtensions">
      <summary>将 LINQ 扩展方法添加到 <see cref="T:Microsoft.Windows.Design.Features.FeatureManager" /> 和 <see cref="T:Microsoft.Windows.Design.Features.FeatureConnector`1" /> 类以支持模型项。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.FeatureExtensions.CreateFeatureProviders(Microsoft.Windows.Design.Features.FeatureManager,System.Type,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>创建指定类型和模型项的功能提供程序。</summary>
      <returns>创建的提供程序的枚举。</returns>
      <param name="source">要使用的功能管理器。</param>
      <param name="featureProviderType">要创建的功能提供程序的类型。</param>
      <param name="item">要为其创建功能提供程序的模型项。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />、<paramref name="featureProviderType" /> 或 <paramref name="item" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.FeatureExtensions.CreateFeatureProviders(Microsoft.Windows.Design.Features.FeatureManager,System.Type,Microsoft.Windows.Design.Model.ModelItem,System.Predicate{System.Type})">
      <summary>创建指定类型和模型项的功能提供程序。</summary>
      <returns>创建的提供程序的枚举。</returns>
      <param name="source">要使用的功能管理器。</param>
      <param name="featureProviderType">要创建的功能提供程序的类型。</param>
      <param name="item">要为其创建功能提供程序的模型项。</param>
      <param name="match">创建功能提供程序时要使用的谓词。 如果该谓词返回 true，则功能提供程序包含在枚举中。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />、<paramref name="featureProviderType" />、<paramref name="item" /> 或 <paramref name="match" /> 为 null。</exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelEditingScope">
      <summary>表示对编辑存储区的一组更改。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEditingScope.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Model.ModelEditingScope" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEditingScope.CanComplete">
      <summary>确定是否可以调用 <see cref="M:Microsoft.Windows.Design.Model.ModelEditingScope.OnComplete" /> 方法，或者是否应还原更改。</summary>
      <returns>如果可以完成更改，则为 true；如果应还原更改，则为 false。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEditingScope.Complete">
      <summary>完成编辑范围。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:Microsoft.Windows.Design.Model.ModelEditingScope" /> 已完成或已还原。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelEditingScope.Description">
      <summary>获取或设置该组的说明。</summary>
      <returns>包含该组的说明的字符串。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEditingScope.Dispose">
      <summary>释放由 <see cref="T:Microsoft.Windows.Design.Model.ModelEditingScope" /> 使用的所有资源。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEditingScope.Dispose(System.Boolean)">
      <summary>释放 <see cref="T:Microsoft.Windows.Design.Model.ModelEditingScope" /> 类使用的非托管资源，并可以选择释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEditingScope.Finalize">
      <summary>在完成过程中调用以中止该组。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEditingScope.OnComplete">
      <summary>执行编辑范围的实际完成操作。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEditingScope.OnRevert(System.Boolean)">
      <summary>执行编辑范围的实际还原操作。</summary>
      <param name="finalizing">如果此中止是由于对象正在完成而发生的，则为 true。 在这种情况下，有些撤消系统可能会尝试中止，其他系统则会放弃更改并将其记录为被动撤消。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEditingScope.Revert">
      <summary>放弃在编辑范围内所做的更改。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:Microsoft.Windows.Design.Model.ModelEditingScope" /> 已提交。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEditingScope.Update">
      <summary>执行视图的同步刷新。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelEvent">
      <summary>表示某个项的事件。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEvent.#ctor">
      <summary>在派生类中重写时，初始化 <see cref="T:Microsoft.Windows.Design.Model.ModelEvent" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelEvent.EventType">
      <summary>在派生类中重写时，获取此事件的委托的数据类型。</summary>
      <returns>一个 <see cref="T:System.Type" />，表示该事件的数据类型。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEvent.GetAttributes(Microsoft.Windows.Design.Metadata.TypeIdentifier)">
      <summary>返回在此事件上声明的指定类型的特性以及此事件的处理程序类型。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.Metadata.TypeIdentifier" /> 对象的枚举，这些对象表示指定类型的特性。</returns>
      <param name="attributeTypeIdentifier">需要其特性的 <see cref="T:Microsoft.Windows.Design.Metadata.TypeIdentifier" /> 对象。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEvent.GetAttributes(System.Type)">
      <summary>返回在此事件上声明的指定类型的特性以及此事件的处理程序类型。</summary>
      <returns>
        <see cref="T:System.Type" /> 对象的枚举，这些对象表示指定类型的特性。</returns>
      <param name="attributeType">需要其特性的 <see cref="T:System.Type" /> 对象。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelEvent.Handlers">
      <summary>当在派生类中重写时，获取应处理此事件的方法名的集合。</summary>
      <returns>一个 <see cref="T:System.Collections.ICollection" />，表示应处理此事件的方法的名称。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelEvent.IsBrowsable">
      <summary>当在派生类中重写时，获取一个指示此事件能否显示在属性窗口中的值。</summary>
      <returns>如果此事件可以显示在属性窗口中，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEvent.IsEventOfType(Microsoft.Windows.Design.Metadata.TypeIdentifier)">
      <summary>确定此事件是否属于指定类型或者是否实现指定类型的接口。</summary>
      <returns>如果此事件属于 <paramref name="typeIdentifer" /> 表示的类型，则为 true；否则为 false。</returns>
      <param name="typeIdentifier">一个表示类型的 <see cref="T:Microsoft.Windows.Design.Metadata.TypeIdentifier" /> 对象。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEvent.IsEventOfType(System.Type)">
      <summary>确定此事件是否属于指定类型或者是否实现指定类型的接口。</summary>
      <returns>如果此事件属于 <paramref name="type" /> 表示的类型，则为 true；否则为 false。</returns>
      <param name="type">一个表示类型的 <see cref="T:System.Type" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelEvent.Name">
      <summary>当在派生类中重写时，获取此事件的名称。</summary>
      <returns>一个表示此事件的名称的字符串。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelEvent.Parent">
      <summary>当在派生类中重写时，获取此事件的父级。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，表示此事件的父级。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelEventCollection">
      <summary>表示事件的枚举。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEventCollection.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Model.ModelEventCollection" /> 类的新实例。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelFactory">
      <summary>用于在设计器中创建模型项的实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelFactory.CreateItem(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Metadata.TypeIdentifier,Microsoft.Windows.Design.Model.CreateOptions,System.Object[])">
      <summary>为指定的类型标识符创建一个新的模型项。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，表示新建的项类型。 如果未能解析该类型标识符，则此方法可能会返回 null。</returns>
      <param name="context">设计器的编辑上下文。</param>
      <param name="typeIdentifier">要创建的项的类型的标识符。</param>
      <param name="options">创建该项时要使用的一组创建选项。 默认值为 <see cref="F:Microsoft.Windows.Design.Model.CreateOptions.None" />。</param>
      <param name="arguments">一个应传递给该项的构造函数的可选参数数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelFactory.CreateItem(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Metadata.TypeIdentifier,System.Object[])">
      <summary>为指定的类型标识符创建一个新的模型项。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，表示新建的项类型。 如果未能解析该类型标识符，则此方法可能会返回 null。</returns>
      <param name="context">设计器的编辑上下文。</param>
      <param name="typeIdentifier">要创建的项的类型的标识符。</param>
      <param name="arguments">一个应传递给该项的构造函数的可选参数数组。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelFactory.CreateItem(Microsoft.Windows.Design.EditingContext,System.Object)">
      <summary>通过创建指定对象的深层副本来创建一个新的模型项。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，表示新建的项。</returns>
      <param name="context">一个 <see cref="T:Microsoft.Windows.Design.EditingContext" />，表示设计器的编辑上下文。</param>
      <param name="item">一个对象，表示要克隆的项。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 或 <paramref name="item" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelFactory.CreateItem(Microsoft.Windows.Design.EditingContext,System.Type,Microsoft.Windows.Design.Model.CreateOptions,System.Object[])">
      <summary>为指定的项类型创建一个新的模型项。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，表示新建的项类型。</returns>
      <param name="context">一个 <see cref="T:Microsoft.Windows.Design.EditingContext" />，表示设计器的编辑上下文。</param>
      <param name="itemType">一个 <see cref="T:System.Type" />，表示要创建的项的类型。</param>
      <param name="options">创建该项时要使用的一组创建选项。 默认值为 <see cref="F:Microsoft.Windows.Design.Model.CreateOptions.None" />。</param>
      <param name="arguments">一个应传递给该项的构造函数的可选参数数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="itemType" /> 或 <paramref name="context" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> 无效。</exception>
      <exception cref="T:System.InvalidOperationException">上下文中没有可创建新项的编辑模型。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelFactory.CreateItem(Microsoft.Windows.Design.EditingContext,System.Type,System.Object[])">
      <summary>为指定的项类型创建一个新的模型项。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，表示新建的项类型。</returns>
      <param name="context">一个 <see cref="T:Microsoft.Windows.Design.EditingContext" />，表示设计器的编辑上下文。</param>
      <param name="itemType">一个 <see cref="T:System.Type" />，表示要创建的项的类型。</param>
      <param name="arguments">一个应传递给该项的构造函数的可选参数数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="itemType" /> 或 <paramref name="context" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">上下文中没有可创建新项的编辑模型。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelFactory.CreateStaticMemberItem(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Metadata.TypeIdentifier,System.String)">
      <summary>新建一个表示指定类的静态成员值的模型项。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，表示新建的项类型。 如果未能解析该类型标识符，则此方法可能会返回 null。</returns>
      <param name="context">设计器的编辑上下文。</param>
      <param name="typeIdentifier">被引用的类型的标识符。</param>
      <param name="memberName">所引用的静态成员的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 或 <paramref name="memberName" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelFactory.CreateStaticMemberItem(Microsoft.Windows.Design.EditingContext,System.Type,System.String)">
      <summary>新建一个表示指定类的静态成员值的模型项。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，表示由 <paramref name="memberName" /> 所指定的静态成员的值，该成员属于 <paramref name="type" /> 所指定的类型。</returns>
      <param name="context">设计器的编辑上下文。</param>
      <param name="type">包含所引用的静态成员的类型。</param>
      <param name="memberName">所引用的静态成员的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />、<paramref name="type" /> 或 <paramref name="memberName" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelFactory.ResolveType(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Metadata.TypeIdentifier)">
      <summary>获取指定 <see cref="T:Microsoft.Windows.Design.Metadata.TypeIdentifier" /> 的已解析类型。</summary>
      <returns>设计器的一个被引用程序集中的与 <paramref name="typeIdentifier" /> 匹配的类型。</returns>
      <param name="context">设计器的编辑上下文。</param>
      <param name="typeIdentifier">该类型的平台不可知的标识符。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 或 <paramref name="typeIdentifier" /> 为 null。</exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelItem">
      <summary>表示编辑模型中的一个项。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItem.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItem.BeginEdit">
      <summary>在派生类中重写时，当对一个或一组对象执行多个操作时调用此方法。</summary>
      <returns>必须完成或还原的 <see cref="T:Microsoft.Windows.Design.Model.ModelEditingScope" />。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItem.BeginEdit(System.String)">
      <summary>在派生类中重写时，当对一个或一组对象执行多个操作时调用此方法。</summary>
      <returns>必须完成或还原的 <see cref="T:Microsoft.Windows.Design.Model.ModelEditingScope" />。</returns>
      <param name="description">一个用于描述更改的可选说明。 此字符串将设置到编辑范围的 <see cref="P:Microsoft.Windows.Design.Model.ModelEditingScope.Description" /> 属性中。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItem.Content">
      <summary>当在派生类中重写时，获取一个表示项的 <see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> 的 <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" />。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" />，表示项的 <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItem.Context">
      <summary>获取一个对象，该对象包含有关创建的此 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 所针对的设计器的上下文信息。</summary>
      <returns>一个包含相关设计器的上下文信息的对象。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItem.Events">
      <summary>在派生类中重写时，获取此对象的公共属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Model.ModelEventCollection" />，其中包含此对象的事件。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItem.GetAttributes(Microsoft.Windows.Design.Metadata.TypeIdentifier)">
      <summary>获取在此项上声明的请求类型的特性。</summary>
      <returns>在此项上声明的请求类型的特性的集合。</returns>
      <param name="attributeTypeIdentifier">请求类型的标识符。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItem.GetAttributes(System.Type)">
      <summary>获取在此项上声明的请求类型的特性。</summary>
      <returns>在此项上声明的请求类型的特性的集合。</returns>
      <param name="attributeType">请求的类型。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItem.GetCurrentValue">
      <summary>在派生类中重写时，返回 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 所包装的基础模型对象的当前值。</summary>
      <returns>返回一个对象，该对象表示 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 所包装的基础模型对象的当前值。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItem.IsItemOfType(Microsoft.Windows.Design.Metadata.TypeIdentifier)">
      <summary>获取一个值，该值指示此项是否属于指定类型或者是否实现指定接口。</summary>
      <returns>如果此项属于指定类型或实现指定接口，则为 true；否则为 false。</returns>
      <param name="typeIdentifier">要测试的类型或接口的标识符。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItem.IsItemOfType(System.Type)">
      <summary>获取一个值，该值指示此项是否属于指定类型或者是否实现指定接口。</summary>
      <returns>如果此项属于指定类型或实现指定接口，则为 true；否则为 false。</returns>
      <param name="type">要测试的类型或接口。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItem.ItemType">
      <summary>当在派生类中重写时，获取该项表示的对象的类型。</summary>
      <returns>一个 <see cref="T:System.Type" /> 对象，表示基础对象的类型。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItem.Name">
      <summary>当在派生类中重写时，获取或设置项的名称或 ID。</summary>
      <returns>一个表示项名称的字符串。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItem.Parent">
      <summary>当在派生类中重写时，获取作为此项的父级的项。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，表示此对象的父项。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItem.Properties">
      <summary>在派生类中重写时，获取此对象的公共属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Model.ModelPropertyCollection" />，其中包含此 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 的属性。</returns>
    </member>
    <member name="E:Microsoft.Windows.Design.Model.ModelItem.PropertyChanged">
      <summary>在派生类中重写时，当模型的某个属性更改时发生。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItem.Root">
      <summary>在派生类中重写时，获取作为此树的根的项。</summary>
      <returns>作为此树的根的项；如果还没有根，则为 null。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItem.Source">
      <summary>在派生类中重写时，获取提供此值的属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" />，表示此 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 的源。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItem.View">
      <summary>在派生类中重写时，获取表示此项的 UI 的可视对象或 visual3D。</summary>
      <returns>一个 <see cref="T:System.Windows.DependencyObject" />，表示此项的 UI。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelItemCollection">
      <summary>实现对 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 对象集合的支持。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Model.ModelItemCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.Add(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>当在派生类中重写时，向集合中添加指定项。</summary>
      <param name="item">要添加到集合中的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.Add(System.Object)">
      <summary>当在派生类中重写时，向集合中添加指定对象。</summary>
      <returns>一个表示值的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</returns>
      <param name="value">一个要添加到集合中的对象。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.Clear">
      <summary>当在派生类中重写时，清除集合的内容。</summary>
    </member>
    <member name="E:Microsoft.Windows.Design.Model.ModelItemCollection.CollectionChanged">
      <summary>当在派生类中重写时，将在此集合的内容更改时发生。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.Contains(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>当在派生类中重写时，返回一个指示集合是否包含指定项的值。</summary>
      <returns>如果 <paramref name="item" /> 包含在集合中，则为 true；否则为 false。</returns>
      <param name="item">要测试的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.Contains(System.Object)">
      <summary>当在派生类中重写时，返回一个指示集合是否包含指定值的值。</summary>
      <returns>如果 <paramref name="item" /> 包含在集合中，则为 true；否则为 false。</returns>
      <param name="value">要测试的对象。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.CopyTo(Microsoft.Windows.Design.Model.ModelItem[],System.Int32)">
      <summary>在派生类中重写时，将集合的内容复制到指定数组中。</summary>
      <param name="array">当前 <see cref="T:Microsoft.Windows.Design.Model.ModelItemCollection" /> 要复制到的数组。</param>
      <param name="arrayIndex">集合中的项将复制到的目标数组中的位置。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.Count">
      <summary>当在派生类中重写时，获取集合中的项的计数。</summary>
      <returns>一个整数，表示集合中的项数。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.GetEnumerator">
      <summary>当在派生类中重写时，返回集合中的项的枚举器。</summary>
      <returns>一个 <see cref="T:System.Collections.IEnumerator" />，可充当此字典中的项的枚举器。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.IndexOf(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>当在派生类中重写时，返回指定项的索引。</summary>
      <returns>返回一个表示指定 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 的索引的整数。 如果没有找到该项，则返回 -1。</returns>
      <param name="item">要查找其索引的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.Insert(System.Int32,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>当在派生类中重写时，在指定位置插入一个项。</summary>
      <param name="index">要插入的项的索引。</param>
      <param name="item">将在指定索引处插入的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.Insert(System.Int32,System.Object)">
      <summary>当在派生类中重写时，在指定位置插入一个项。</summary>
      <returns>一个表示值的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</returns>
      <param name="index">要插入的项的索引。</param>
      <param name="value">要在指定索引处插入的对象。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.IsFixedSize">
      <summary>当在派生类中重写时，获取一个指示集合是否具有固定大小的值。</summary>
      <returns>如果该集合具有固定大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.IsReadOnly">
      <summary>当在派生类中重写时，获取一个指示集合是否可修改的值。</summary>
      <returns>如果该集合为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.IsSynchronized">
      <summary>当在派生类中重写时，获取一个指示集合是否同步的值。</summary>
      <returns>如果集合是同步的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.Item(System.Int32)">
      <summary>当在派生类中重写时，获取或设置指定索引处的项。 这是一个依赖项属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，表示指定索引处的项。</returns>
      <param name="index">要设置或检索的索引。</param>
    </member>
    <member name="F:Microsoft.Windows.Design.Model.ModelItemCollection.ItemProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.Model.ModelItemCollection.Item(System.Int32)" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.Model.ModelItemCollection.Item(System.Int32)" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.Move(System.Int32,System.Int32)">
      <summary>当在派生类中重写时，将某个项移动到新的索引。</summary>
      <param name="fromIndex">要移动的项的索引。</param>
      <param name="toIndex">要将该项移动到的索引。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.Remove(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>当在派生类中重写时，从集合中移除某个项。</summary>
      <returns>如果成功移除了该项，则为 true；否则为 false。</returns>
      <param name="item">要移除的项。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.Remove(System.Object)">
      <summary>当在派生类中重写时，从集合中移除某个值。</summary>
      <returns>如果成功移除了该项，则为 true；否则为 false。</returns>
      <param name="value">要从集合中移除的项。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.RemoveAt(System.Int32)">
      <summary>当在派生类中重写时，移除指定索引处的项。</summary>
      <param name="index">移除项处的索引。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.SyncRoot">
      <summary>当在派生类中重写时，获取一个可用于同步此集合的对象。</summary>
      <returns>一个可用于同步集合的对象。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">作为从 <see cref="T:System.Collections.ICollection" /> 复制的元素的目标的一维 <see cref="T:System.Array" />。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此索引处开始进行复制。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#ICollection#Count">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.Count" />。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 中包含的元素个数。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
      <returns>如果对 <see cref="T:System.Collections.ICollection" /> 的访问是同步的（线程安全），则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
      <returns>可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IList#Add(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Add(System.Object)" />。</summary>
      <returns>新元素所插入到的位置，或为 -1 以指示未将该项插入到集合中。</returns>
      <param name="value">要添加到 <see cref="T:System.Collections.IList" /> 的对象。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IList#Clear">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Clear" />。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IList#Contains(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</summary>
      <returns>如果在 <see cref="T:System.Collections.IList" /> 中找到 <see cref="T:System.Object" />，则为 true；否则为 false。</returns>
      <param name="value">要在 <see cref="T:System.Collections.IList" /> 中查找的对象。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</summary>
      <returns>如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
      <param name="value">要在 <see cref="T:System.Collections.IList" /> 中查找的对象。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</summary>
      <param name="index">从零开始的索引，应在该位置插入 <paramref name="value" />。</param>
      <param name="value">要插入 <see cref="T:System.Collections.IList" /> 的对象。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IList#IsFixedSize">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns>如果 <see cref="T:System.Collections.IList" /> 具有固定大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IList#IsReadOnly">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns>如果 <see cref="T:System.Collections.IList" /> 为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IList#Item(System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.Item(System.Int32)" />。</summary>
      <returns>位于指定索引处的元素。</returns>
      <param name="index">要获得或设置的元素从零开始的索引。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IList#Remove(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</summary>
      <param name="value">要从 <see cref="T:System.Collections.IList" /> 中移除的对象。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />。</summary>
      <param name="index">要移除的项的从零开始的索引。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelItemDictionary">
      <summary>实现对 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 对象的键/值字典支持。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Model.ModelItemDictionary" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.Add(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>当在派生类中重写时，将项添加到字典中指定键的下面。</summary>
      <param name="key">一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，充当此字典项的键。</param>
      <param name="value">一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，充当此字典项的值。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.Add(System.Object,System.Object)">
      <summary>当在派生类中重写时，将值添加到字典中指定键的下面。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，表示字典中的键。</returns>
      <param name="key">一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，充当此字典项的键。</param>
      <param name="value">一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，充当此字典项的值。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.Clear">
      <summary>当在派生类中重写时，清除字典的内容。</summary>
    </member>
    <member name="E:Microsoft.Windows.Design.Model.ModelItemDictionary.CollectionChanged">
      <summary>当在派生类中重写时，将在此字典的内容更改时发生。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.Contains(System.Collections.Generic.KeyValuePair{Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem})">
      <summary>当在派生类中重写时，返回一个指示字典是否包含指定的键值对的值。</summary>
      <returns>如果字典包含 <paramref name="item" />，则为 true；否则为 false。</returns>
      <param name="item">要测试是否包括在字典中的项。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.ContainsKey(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>当在派生类中重写时，返回一个指示字典是否包含指定键的值。</summary>
      <returns>如果字典包含 <paramref name="key" />，则为 true；否则为 false。</returns>
      <param name="key">一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，表示要测试的键。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.ContainsKey(System.Object)">
      <summary>当在派生类中重写时，返回一个指示字典是否包含指定键的值。</summary>
      <returns>如果字典包含 <paramref name="key" />，则为 true；否则为 false。</returns>
      <param name="key">一个表示要测试的键的对象。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.CopyTo(System.Collections.Generic.KeyValuePair{Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem}[],System.Int32)">
      <summary>当在派生类中重写时，从指定的索引处开始，将字典的内容复制到指定的数组。</summary>
      <param name="array">当前 <see cref="T:Microsoft.Windows.Design.Model.ModelItemDictionary" /> 要复制到的数组。</param>
      <param name="arrayIndex">字典中的项将复制到的目标数组中的位置。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.Count">
      <summary>当在派生类中重写时，获取字典中的项的计数。</summary>
      <returns>一个整数，表示字典中的项数。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.GetEnumerator">
      <summary>当在派生类中重写时，返回字典中的项的枚举器。</summary>
      <returns>一个 <see cref="T:System.Collections.IEnumerator" />，可充当此字典中的项的枚举器。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.IsFixedSize">
      <summary>当在派生类中重写时，获取一个指示字典是否具有固定大小的值。</summary>
      <returns>如果字典具有固定大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.IsReadOnly">
      <summary>当在派生类中重写时，获取一个指示字典是否可修改的值。</summary>
      <returns>如果字典是只读的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.IsSynchronized">
      <summary>当在派生类中重写时，获取一个指示字典是否同步的值。</summary>
      <returns>如果字典同步，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.Item(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>当在派生类中重写时，获取或设置指定键处的项。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，表示指定键处的项。</returns>
      <param name="key">一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，表示 <see cref="T:Microsoft.Windows.Design.Model.ModelItemDictionary" /> 中的项的键。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.Item(System.Object)">
      <summary>当在派生类中重写时，获取或设置指定键处的项。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，表示指定键处的项。</returns>
      <param name="key">一个对象，表示 <see cref="T:Microsoft.Windows.Design.Model.ModelItemDictionary" /> 中的项的键。</param>
    </member>
    <member name="F:Microsoft.Windows.Design.Model.ModelItemDictionary.KeyProperty">
      <summary>ModelItemDictionary 提供一个附加属性“Key”，它将会添加到字典中包含的所有项。 Key 属性的数据类型是“ModelItem”。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.Keys">
      <summary>当在派生类中重写时，获取字典的键。</summary>
      <returns>一个 <see cref="T:System.Collections.ICollection" />，它包含 <see cref="T:Microsoft.Windows.Design.Model.ModelItemDictionary" /> 的键。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.Remove(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>当在派生类中重写时，从字典中移除项。</summary>
      <returns>如果成功移除了该项，则为 true；否则为 false。</returns>
      <param name="key">一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，表示要移除的项的键。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.Remove(System.Object)">
      <summary>当在派生类中重写时，从字典中移除项。</summary>
      <returns>如果成功移除了该项，则为 true；否则为 false。</returns>
      <param name="key">一个对象，表示要移除的项的键。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.SyncRoot">
      <summary>当在派生类中重写时，获取用于同步此字典的对象。</summary>
      <returns>一个可用于同步字典的对象。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem})">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.Generic.ICollection`1.Add(`0)" />。</summary>
      <param name="item">要添加到集合中的键/值对。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem})">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.Generic.ICollection`1.Contains(`0)" />。</summary>
      <returns>如果在集合中找到 <paramref name="item" />，则为 true；否则为 false。</returns>
      <param name="item">要在集合中定位的键/值对。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem}[],System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)" />。</summary>
      <param name="array">作为从 <see cref="T:System.Collections.ICollection" /> 复制的元素的目标的一维 <see cref="T:System.Array" />。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="arrayIndex">
        <paramref name="array" /> 中从零开始的索引，从此索引处开始进行复制。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem})">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.Generic.ICollection`1.Remove(`0)" />。</summary>
      <returns>如果从集合中成功移除了 <paramref name="item" />，则为 true；否则为 false。 如果在原始集合中找不到 <paramref name="item" />，此方法也会返回 false。</returns>
      <param name="item">要从集合中移除的键/值对。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">作为从 <see cref="T:System.Collections.ICollection" /> 复制的元素的目标的一维 <see cref="T:System.Array" />。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此索引处开始进行复制。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#ICollection#Count">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.Count" />。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 中包含的元素个数。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#ICollection#IsSynchronized">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
      <returns>如果对 <see cref="T:System.Collections.ICollection" /> 的访问是同步的（线程安全），则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#ICollection#SyncRoot">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
      <returns>可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />。</summary>
      <param name="key">用作要添加的元素的键的 <see cref="T:System.Object" />。</param>
      <param name="value">用作要添加的元素的值的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IDictionary#Clear">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IDictionary.Clear" />。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IDictionary#Contains(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IDictionary.Contains(System.Object)" />。</summary>
      <returns>如果字典包含具有 <paramref name="key" /> 的元素，则为 true；否则为 false。</returns>
      <param name="key">要在字典中定位的键。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IDictionary#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IDictionary.GetEnumerator" />。</summary>
      <returns>一个用于 <see cref="T:System.Collections.IDictionary" /> 对象的 <see cref="T:System.Collections.IDictionaryEnumerator" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IDictionary#IsFixedSize">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IDictionary.IsFixedSize" />。</summary>
      <returns>如果 <see cref="T:System.Collections.IDictionary" /> 对象具有固定大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IDictionary#IsReadOnly">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IDictionary.IsReadOnly" />。</summary>
      <returns>如果 <see cref="T:System.Collections.IDictionary" /> 对象为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IDictionary#Item(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IDictionary.Item(System.Object)" />。</summary>
      <returns>带有指定键的元素。</returns>
      <param name="key">要获取或设置的元素的键。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IDictionary#Keys">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IDictionary.Keys" />。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 对象，它包含 <see cref="T:System.Collections.IDictionary" /> 对象的键。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IDictionary#Remove(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IDictionary.Remove(System.Object)" />。</summary>
      <param name="key">要移除的元素的键。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IDictionary#Values">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IDictionary.Values" />。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 对象，它包含 <see cref="T:System.Collections.IDictionary" /> 对象中的值。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>一个 <see cref="T:System.Collections.IEnumerator" />，可充当此字典中的项的枚举器。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.TryGetValue(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem@)">
      <summary>当在派生类中重写时，检索指定键的值。</summary>
      <returns>如果找到了与 <paramref name="key" /> 关联的值，则为 true；否则为 false。</returns>
      <param name="key">一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，表示要测试的键。</param>
      <param name="value">如果找到了 <paramref name="key" /> 的值，此 out 参数将包含检索到的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 值。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.TryGetValue(System.Object,Microsoft.Windows.Design.Model.ModelItem@)">
      <summary>当在派生类中重写时，检索指定键的值。</summary>
      <returns>如果找到了与 <paramref name="key" /> 关联的值，则为 true；否则为 false。</returns>
      <param name="key">一个表示要测试的键的对象。</param>
      <param name="value">如果找到了 <paramref name="key" /> 的值，此 out 参数将包含检索到的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 值。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.Values">
      <summary>当在派生类中重写时，获取字典的值。</summary>
      <returns>一个 <see cref="T:System.Collections.ICollection" />，包含 <see cref="T:Microsoft.Windows.Design.Model.ModelItemDictionary" /> 的项。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelItemEventArgs">
      <summary>为使用 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 实例的事件提供数据。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemEventArgs.#ctor(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Model.ModelItemEventArgs" /> 类的新实例。</summary>
      <param name="item">要包含的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemEventArgs.ModelItem">
      <summary>获取关联的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 实例。</summary>
      <returns>与当前的 <see cref="T:Microsoft.Windows.Design.Model.ModelItemEventArgs" /> 实例关联的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelMemberCollection`2">
      <summary>表示模型成员集合。</summary>
      <typeparam name="TItemType">集合所表示的项的类型。</typeparam>
      <typeparam name="TKeyType">
      </typeparam>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelMemberCollection`2.Find(System.String)">
      <summary>在集合中搜索具有指定键的项，并在找到时将它返回。</summary>
      <returns>具有指定键的 TItemType。 如果未找到，此方法将返回 null。</returns>
      <param name="name">要查找的项的键。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelMemberCollection`2.Find(System.String,System.Boolean)">
      <summary>在派生类中重写时，在集合中搜索具有指定键的项，并在找到时将它返回。</summary>
      <returns>具有指定键的 TItemType。 如果未找到，此方法将引发异常或返回 null，具体取决于传递给 <paramref name="throwOnError" /> 的值。</returns>
      <param name="name">要查找的项的键。</param>
      <param name="throwOnError">如果在未找到项时应引发异常，则为 true；否则为 false。</param>
      <exception cref="T:System.ArgumentException">找不到 <paramref name="name" />，并且 <paramref name="throwOnError" /> 为 true。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelMemberCollection`2.Find(`1)">
      <summary>在集合中搜索具有指定键的项，并在找到时将它返回。</summary>
      <returns>具有指定键的 TItemType。 如果未找到，此方法将返回 null。</returns>
      <param name="value">要查找的项的键。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelMemberCollection`2.Find(`1,System.Boolean)">
      <summary>在派生类中重写时，在集合中搜索具有指定键的项，并在找到时将它返回。</summary>
      <returns>具有指定键的 TItemType。 如果未找到，此方法将引发异常或返回 null，具体取决于传递给 <paramref name="throwOnError" /> 的值。</returns>
      <param name="value">要查找的项的键。</param>
      <param name="throwOnError">如果在未找到项时应引发异常，则为 true；否则为 false。</param>
      <exception cref="T:System.ArgumentException">找不到 <paramref name="value" />，并且 <paramref name="throwOnError" /> 为 true。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelMemberCollection`2.GetEnumerator">
      <summary>在派生类中重写时，返回一个枚举器以枚举项。</summary>
      <returns>用于枚举项的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelMemberCollection`2.Item(System.String)">
      <summary>在集合中搜索具有指定键的项，并在找到时将它返回。</summary>
      <returns>具有指定键的 TItemType。 如果未找到，此属性将引发异常。</returns>
      <param name="name">要查找的项的键。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">未找到 <paramref name="name" />。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelMemberCollection`2.Item(`1)">
      <summary>在集合中搜索具有指定键的项，并在找到时将它返回。</summary>
      <returns>具有指定键的 TItemType。 如果未找到，此属性将引发异常。</returns>
      <param name="value">要查找的项的键。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">未找到 <paramref name="value" />。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelMemberCollection`2.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>用于枚举项的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelParent">
      <summary>可用于帮助设置项的父级的类。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelParent.CanParent(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem,System.Type)">
      <summary>确定指定类型可否是指定的子类型的父级。</summary>
      <returns>如果指定的 <paramref name="parent" /> 项可以接受 <paramref name="childType" /> 的实例作为子级，则为 true；否则为 false。</returns>
      <param name="context">要使用的编辑上下文。</param>
      <param name="parent">父级。</param>
      <param name="childType">要寻找父级的项的类型。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelParent.FindParent(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>查找指定子级的可行父级以及编辑上下文。</summary>
      <returns>可接受 <paramref name="childItem" /> 的项，如果找不到可行的父级，则为 null。</returns>
      <param name="context">要使用的编辑上下文。</param>
      <param name="childItem">要寻找父级的项。</param>
      <param name="startingItem">要用作搜索起点的项。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelParent.FindParent(Microsoft.Windows.Design.EditingContext,System.Type,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>查找指定的子级类型的可行父级以及编辑上下文。</summary>
      <returns>可接受 <paramref name="childType" /> 类型的项的项，如果找不到可行的父级，则为 null。</returns>
      <param name="context">要使用的编辑上下文。</param>
      <param name="childType">要寻找父级的项的类型。</param>
      <param name="startingItem">要用作搜索起点的项。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelParent.FindParent(System.Type,Microsoft.Windows.Design.Interaction.GestureData)">
      <summary>为指定的子级类型查找可行的父级。</summary>
      <returns>可接受 <paramref name="childType" /> 类型的项的项，如果找不到可行的父级，则为 null。</returns>
      <param name="childType">要寻找父级的项的类型。</param>
      <param name="gestureData">可用于确定搜索的起始项和位置的笔势数据。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelParent.Parent(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>将指定项设置为指定子项的父级。</summary>
      <param name="context">要使用的编辑上下文。</param>
      <param name="parentItem">要接受子级的父级。</param>
      <param name="childItem">要寻找父级的子级。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelProperty">
      <summary>表示项的属性。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelProperty.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.AttachedOwnerType">
      <summary>在派生类中重写时，获取定义此属性的类型。</summary>
      <returns>如果 <see cref="P:Microsoft.Windows.Design.Model.ModelProperty.IsAttached" /> 属性返回 true，则为定义此属性的 <see cref="T:System.Type" />。 否则，返回 null。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelProperty.ClearValue">
      <summary>在派生类中重写时，清除该属性的本地值。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.Collection">
      <summary>当在派生类中重写时，获取已强制转换为 <see cref="T:Microsoft.Windows.Design.Model.ModelItemCollection" /> 的 <see cref="P:Microsoft.Windows.Design.Model.ModelProperty.Value" /> 属性。</summary>
      <returns>表示 <see cref="P:Microsoft.Windows.Design.Model.ModelProperty.Value" /> 的 <see cref="T:Microsoft.Windows.Design.Model.ModelItemCollection" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.ComputedValue">
      <summary>在派生类中重写时，获取此属性的当前计算值。</summary>
      <returns>一个 object，表示此属性的计算值。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.DefaultValue">
      <summary>在派生类中重写时，获取此属性的默认值。</summary>
      <returns>一个 object，表示此属性的默认值。 如果该属性未定义默认值，则此属性返回 null。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.Dictionary">
      <summary>当在派生类中重写时，获取已强制转换为 <see cref="T:Microsoft.Windows.Design.Model.ModelItemDictionary" /> 的 <see cref="P:Microsoft.Windows.Design.Model.ModelProperty.Value" /> 属性。</summary>
      <returns>已强制转换为 <see cref="T:Microsoft.Windows.Design.Model.ModelItemDictionary" /> 的 <see cref="P:Microsoft.Windows.Design.Model.ModelProperty.Value" />。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelProperty.Equals(System.Object)">
      <summary>确定指定的对象是否等于此 <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" /> 对象。</summary>
      <returns>如果所比较的属性相等，则为 true，否则为 false。</returns>
      <param name="obj">要测试是否相等的 object。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelProperty.GetAttributes(Microsoft.Windows.Design.Metadata.TypeIdentifier)">
      <summary>获取在此属性上声明的请求类型的特性以及此属性的属性类型。</summary>
      <returns>在此属性上声明的请求类型的特性的集合以及此属性的属性类型。</returns>
      <param name="attributeTypeIdentifier">请求类型的标识符。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelProperty.GetAttributes(System.Type)">
      <summary>获取在此属性上声明的请求类型的特性以及此属性的属性类型。</summary>
      <returns>在此属性上声明的请求类型的特性的集合以及此属性的属性类型。</returns>
      <param name="attributeType">请求的类型。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelProperty.GetHashCode">
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.IsAttached">
      <summary>在派生类中重写时，获取一个值，该值指示该属性是否表示不同类型中的附加属性。</summary>
      <returns>如果该属性表示不同类型中的附加属性，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.IsBrowsable">
      <summary>在派生类中重写时，获取一个值，该值指示该属性能否显示在属性窗口中。</summary>
      <returns>如果该属性可以显示在属性窗口中，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.IsCollection">
      <summary>在派生类中重写时，获取一个值，该值指示该属性中包含的值是否为 ItemCollection。</summary>
      <returns>如果该属性值为 ItemCollection，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.IsDictionary">
      <summary>在派生类中重写时，获取一个值，该值指示该属性中包含的值是否为 ItemDictionary。</summary>
      <returns>如果该属性值为 ItemDictionary，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelProperty.IsPropertyOfType(Microsoft.Windows.Design.Metadata.TypeIdentifier)">
      <summary>获取一个值，该值指示此属性是否属于指定类型或者是否实现指定接口。</summary>
      <returns>如果此属性属于指定类型或实现指定接口，则为 true；否则为 false。</returns>
      <param name="typeIdentifier">要测试的类型或接口的标识符。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelProperty.IsPropertyOfType(System.Type)">
      <summary>获取一个值，该值指示此属性是否属于指定类型或者是否实现指定接口。</summary>
      <returns>如果此属性属于指定类型或实现指定接口，则为 true；否则为 false。</returns>
      <param name="type">要测试的类型或接口。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.IsReadOnly">
      <summary>在派生类中重写时，获取一个值，该值指示该属性是否为只读。</summary>
      <returns>如果该属性为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.IsSet">
      <summary>在派生类中重写时，获取一个值，该值指示是否在本地设置该属性的值。</summary>
      <returns>如果在本地设置该属性的值；则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.Name">
      <summary>在派生类中重写时，获取此属性的名称。</summary>
      <returns>一个表示此属性的名称的字符串。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelProperty.op_Equality(Microsoft.Windows.Design.Model.ModelProperty,Microsoft.Windows.Design.Model.ModelProperty)">
      <summary>确定指定的两个 <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" /> 对象是否相等。</summary>
      <returns>如果所比较的属性相等，则为 true，否则为 false。</returns>
      <param name="first">要比较的 <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" />。</param>
      <param name="second">要比较的 <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelProperty.op_Inequality(Microsoft.Windows.Design.Model.ModelProperty,Microsoft.Windows.Design.Model.ModelProperty)">
      <summary>确定指定的两个 <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" /> 对象是否不相等。</summary>
      <returns>如果所比较的属性不相等，则为 true；否则为 false。</returns>
      <param name="first">要比较的 <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" />。</param>
      <param name="second">要比较的 <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" />。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.Parent">
      <summary>在派生类中重写时，获取此属性的父级。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 实例，表示此属性的父级。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.PropertyType">
      <summary>在派生类中重写时，获取该属性的数据类型。</summary>
      <returns>一个 <see cref="T:System.Type" />，表示此属性的类型。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelProperty.SetValue(System.Object)">
      <summary>在派生类中重写时，为属性设置本地值。</summary>
      <returns>如果该值已经是 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，则返回输入值。 如果该值不是 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />，则返回新建的包装该值的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</returns>
      <param name="value">一个 object，表示要设置的值。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.Value">
      <summary>在派生类中重写时，获取此属性的值。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 实例，表示此属性的值。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelPropertyCollection">
      <summary>表示属性的集合。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelPropertyCollection.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Model.ModelPropertyCollection" /> 类的新实例。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.PropertyIdentifierCollection">
      <summary>表示属性标识符的集合。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.PropertyIdentifierCollection.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Model.PropertyIdentifierCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.PropertyIdentifierCollection.Add(Microsoft.Windows.Design.Metadata.TypeIdentifier,System.String)">
      <summary>添加一个新的属性标识符。</summary>
      <param name="typeIdentifier">要添加的属性所属的类型的标识符。</param>
      <param name="name">要添加到集合中的属性的名称。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.PropertyIdentifierCollection.Add(System.Type,System.String)">
      <summary>添加一个新的属性标识符。</summary>
      <param name="ownerType">要添加的属性所属的类型。</param>
      <param name="name">要添加的属性的名称。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.PropertyIdentifierCollection.InsertItem(System.Int32,Microsoft.Windows.Design.Metadata.PropertyIdentifier)">
      <summary>在集合中插入一个新的属性标识符。</summary>
      <param name="index">将 <paramref name="item" /> 插入到的位置的索引。</param>
      <param name="item">要插入的属性标识符。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item " />已存在于集合中。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.PropertyIdentifierCollection.SetItem(System.Int32,Microsoft.Windows.Design.Metadata.PropertyIdentifier)">
      <summary>设置位于指定索引处的属性标识符。</summary>
      <param name="index">将要设置为 <paramref name="item" /> 的索引。</param>
      <param name="item">要设置的属性标识符。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item " />已存在于集合中。</exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.PropertyInvalidatedEventArgs">
      <summary>为 <see cref="E:Microsoft.Windows.Design.Services.ValueTranslationService.PropertyInvalidated" /> 事件提供数据。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.PropertyInvalidatedEventArgs.#ctor(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Metadata.PropertyIdentifier)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Model.PropertyInvalidatedEventArgs" /> 类的新实例。</summary>
      <param name="item">与无效属性关联的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</param>
      <param name="property">已无效的属性的 <see cref="T:Microsoft.Windows.Design.Metadata.PropertyIdentifier" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 或 <paramref name="property" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.PropertyInvalidatedEventArgs.InvalidatedProperty">
      <summary>获取已无效的属性的 <see cref="T:Microsoft.Windows.Design.Metadata.PropertyIdentifier" />。</summary>
      <returns>已无效的属性的 <see cref="T:Microsoft.Windows.Design.Metadata.PropertyIdentifier" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.PropertyInvalidatedEventArgs.Item">
      <summary>获取与无效属性关联的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</summary>
      <returns>与无效属性关联的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Policies.ItemPolicy">
      <summary>用于在设计器中指定一组规则的策略。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.ItemPolicy.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Policies.ItemPolicy" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Policies.ItemPolicy.Context">
      <summary>获取设计器的编辑上下文。</summary>
      <returns>设计器的 <see cref="T:Microsoft.Windows.Design.EditingContext" />。</returns>
      <exception cref="T:System.InvalidOperationException">策略尚未激活。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.ItemPolicy.GetSurrogateItems(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>返回此项的代理项的可选集合。</summary>
      <returns>要检查的代理项的枚举。 默认返回空枚举。</returns>
      <param name="item">要为其检索代理项的项。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Policies.ItemPolicy.IsSurrogate">
      <summary>获取一个值，该值指示策略是否为代理项策略。</summary>
      <returns>如果策略是代理项策略，则为 true，否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.ItemPolicy.OnActivated">
      <summary>当激活策略时调用。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.ItemPolicy.OnDeactivated">
      <summary>当停用策略时调用。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.ItemPolicy.OnPolicyItemsChanged(Microsoft.Windows.Design.Policies.PolicyItemsChangedEventArgs)">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.Policies.ItemPolicy.PolicyItemsChanged" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:Microsoft.Windows.Design.Policies.PolicyItemsChangedEventArgs" />。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Policies.ItemPolicy.PolicyItems">
      <summary>获取策略中的所有项的枚举。</summary>
      <returns>一个包含策略中的项集合的 <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
    </member>
    <member name="E:Microsoft.Windows.Design.Policies.ItemPolicy.PolicyItemsChanged">
      <summary>当策略更改时发生。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Policies.PolicyAddedEventArgs">
      <summary>为 <see cref="T:Microsoft.Windows.Design.Policies.PolicyAddedEventArgs" /> 事件提供数据。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.PolicyAddedEventArgs.#ctor(Microsoft.Windows.Design.Policies.ItemPolicy)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Policies.PolicyAddedEventArgs" /> 类的新实例。</summary>
      <param name="policy">新添加的策略。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Policies.PolicyAddedEventArgs.Policy">
      <summary>获取新添加的策略。</summary>
      <returns>新添加的 <see cref="T:Microsoft.Windows.Design.Policies.ItemPolicy" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Policies.PolicyDrivenFeatureConnector`1">
      <summary>基于项策略创建功能提供程序。</summary>
      <typeparam name="TFeatureProviderType">功能提供程序的类型。</typeparam>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.PolicyDrivenFeatureConnector`1.#ctor(Microsoft.Windows.Design.Features.FeatureManager)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Policies.PolicyDrivenFeatureConnector`1" /> 类的新实例。</summary>
      <param name="manager">可管理此连接器的功能管理器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.PolicyDrivenFeatureConnector`1.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:Microsoft.Windows.Design.Policies.PolicyDrivenFeatureConnector`1" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Policies.PolicyDrivenFeatureConnector`1.FeatureProviders">
      <summary>获取所有当前功能提供程序的枚举。</summary>
      <returns>所有当前功能提供程序的枚举。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.PolicyDrivenFeatureConnector`1.FeatureProvidersAdded(Microsoft.Windows.Design.Model.ModelItem,System.Collections.Generic.IEnumerable{`0})">
      <summary>当策略发生更改并将功能提供程序添加到活动的功能提供程序集内时，由策略功能连接器调用。</summary>
      <param name="item">用于提供功能提供程序的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</param>
      <param name="featureProviders">已添加的功能提供程序的枚举。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.PolicyDrivenFeatureConnector`1.FeatureProvidersRemoved(Microsoft.Windows.Design.Model.ModelItem,System.Collections.Generic.IEnumerable{`0})">
      <summary>当策略发生更改并将功能提供程序从活动的功能提供程序集内移除时，由策略功能连接器调用。</summary>
      <param name="item">用于提供功能提供程序的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</param>
      <param name="featureProviders">已移除的功能提供程序的枚举。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.PolicyDrivenFeatureConnector`1.IsValidProvider(Microsoft.Windows.Design.Features.FeatureProvider)">
      <summary>测试某个功能提供程序是否对调用有效。</summary>
      <returns>如果 <paramref name="featureProvider" /> 对调用有效，则为 true；否则为 false。</returns>
      <param name="featureProvider">要测试其有效性的功能提供程序。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.PolicyDrivenFeatureConnector`1.UpdateFeatureProviders">
      <summary>基于 <see cref="T:Microsoft.Windows.Design.Policies.ItemPolicy" /> 刷新功能提供程序。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Policies.PolicyDrivenFeatureConnector`1.ItemFeatureProvider">
      <summary>标识属于某个 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 实例的功能提供程序。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Policies.PolicyDrivenFeatureConnector`1.ItemFeatureProvider.FeatureProvider">
      <summary>获取该功能提供程序的类型。</summary>
      <returns>该功能提供程序的 <see cref="type" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Policies.PolicyDrivenFeatureConnector`1.ItemFeatureProvider.Item">
      <summary>获取与该功能提供程序关联的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</summary>
      <returns>与该功能提供程序关联的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Policies.PolicyItemsChangedEventArgs">
      <summary>为 <see cref="E:Microsoft.Windows.Design.Policies.ItemPolicy.PolicyItemsChanged" /> 事件提供数据。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.PolicyItemsChangedEventArgs.#ctor(Microsoft.Windows.Design.Policies.ItemPolicy,System.Collections.Generic.IEnumerable{Microsoft.Windows.Design.Model.ModelItem},System.Collections.Generic.IEnumerable{Microsoft.Windows.Design.Model.ModelItem})">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Policies.PolicyItemsChangedEventArgs" /> 类的新实例。</summary>
      <param name="policy">已更改的策略。</param>
      <param name="itemsAdded">从上一个更改事件后就已经添加到策略中的项。</param>
      <param name="itemsRemoved">从上一个更改事件后就已经从策略中删除的项。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="policy" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Policies.PolicyItemsChangedEventArgs.ItemsAdded">
      <summary>获取从上一个更改事件后就已经添加到策略中的项。</summary>
      <returns>策略更改期间已添加的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 对象的枚举。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Policies.PolicyItemsChangedEventArgs.ItemsRemoved">
      <summary>获取从上一个更改事件后就已经从策略中删除的项。</summary>
      <returns>策略更改期间已删除的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 对象的枚举。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Policies.PolicyItemsChangedEventArgs.Policy">
      <summary>获取已更改的策略。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.Policies.ItemPolicy" /> 对象，表示已更改的策略。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Policies.PrimarySelectionPolicy">
      <summary>一个指定主要选定元素的策略。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.PrimarySelectionPolicy.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Policies.PrimarySelectionPolicy" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.PrimarySelectionPolicy.GetPolicyItems(Microsoft.Windows.Design.Interaction.Selection)">
      <summary>返回表示主选择的策略项。</summary>
      <returns>主选择或者是空枚举的单一元素。</returns>
      <param name="selection">当前选定内容</param>
    </member>
    <member name="T:Microsoft.Windows.Design.Policies.SecondarySelectionPolicy">
      <summary>指定所选项目不是主要选择内容的策略。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.SecondarySelectionPolicy.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Policies.SecondarySelectionPolicy" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.SecondarySelectionPolicy.IsInPolicy(Microsoft.Windows.Design.Interaction.Selection,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>获取指示指定项是否在选择内容中并且不是主选择内容的值。</summary>
      <returns>如果 <paramref name="item" /> 不是初选，则为 true；否则为 false。</returns>
      <param name="selection">选择状态</param>
      <param name="item">要计算的项。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.Policies.SelectionParentPolicy">
      <summary>一个策略，指定当前选定项目集的唯一父级组。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.SelectionParentPolicy.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Policies.SelectionParentPolicy" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.SelectionParentPolicy.GetPolicyItems(Microsoft.Windows.Design.Interaction.Selection)">
      <summary>重写默认的 <see cref="M:Microsoft.Windows.Design.Policies.SelectionPolicy.GetPolicyItems(Microsoft.Windows.Design.Interaction.Selection)" /> 方法以返回指定选择内容的唯一父项。</summary>
      <returns>给定选择的唯一父级的枚举。</returns>
      <param name="selection">当前选定内容</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.SelectionParentPolicy.IsInPolicy(Microsoft.Windows.Design.Interaction.Selection,Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>计算指定的父项是否被包含在策略里。</summary>
      <returns>如果 <paramref name="parent" /> 将包含在政策中，则为 true；否则为 false。</returns>
      <param name="selection">选择状态</param>
      <param name="item">要计算的项。</param>
      <param name="parent">要计算的父项。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.Policies.SelectionPolicy">
      <summary>使所有项目可选的策略。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.SelectionPolicy.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Policies.SelectionPolicy" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.SelectionPolicy.GetPolicyItems(Microsoft.Windows.Design.Interaction.Selection)">
      <summary>从指定的选择中返回策略项。</summary>
      <returns>用于此策略的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 对象的枚举。</returns>
      <param name="selection">当前选定内容</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.SelectionPolicy.IsInPolicy(Microsoft.Windows.Design.Interaction.Selection,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>获取指示指定项是否被包含在策略中的值。</summary>
      <returns>如果项包含的政策中，则为 true；否则为 false。</returns>
      <param name="selection">要使用策略逻辑筛选的 <see cref="T:Microsoft.Windows.Design.Interaction.Selection" />。</param>
      <param name="item">要计算的项。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.SelectionPolicy.OnActivated">
      <summary>当激活此策略时调用。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.SelectionPolicy.OnDeactivated">
      <summary>当停用此策略时调用。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Policies.SelectionPolicy.PolicyItems">
      <summary>获取受此策略影响的对象的枚举。</summary>
      <returns>受此策略影响的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 对象的枚举。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Policies.UsesItemPolicyAttribute">
      <summary>使功能提供程序限定于指定的策略。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.UsesItemPolicyAttribute.#ctor(System.Type)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Policies.UsesItemPolicyAttribute" /> 类的新实例。</summary>
      <param name="itemPolicyType">与该扩展相关联的策略类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="itemPolicyType" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Policies.UsesItemPolicyAttribute.AllRequired">
      <summary>重写 <see cref="P:Microsoft.Windows.Design.RequirementAttribute.AllRequired" /> 属性以便返回 false 属性。</summary>
      <returns>始终为 false。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.UsesItemPolicyAttribute.CreateSubscription(Microsoft.Windows.Design.EditingContext)">
      <summary>返回当此策略可用时，用于通知的 <see cref="T:Microsoft.Windows.Design.RequirementSubscription" /> 对象。</summary>
      <returns>一个新的 <see cref="T:Microsoft.Windows.Design.RequirementSubscription" /> 对象。</returns>
      <param name="context">要检查的编辑上下文。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.UsesItemPolicyAttribute.Equals(System.Object)">
      <summary>确定指定对象是否等于该 <see cref="T:Microsoft.Windows.Design.Policies.UsesItemPolicyAttribute" />。</summary>
      <returns>如果指定的对象与此 <see cref="T:Microsoft.Windows.Design.Policies.UsesItemPolicyAttribute" /> 相等，则为 true；否则为 false。</returns>
      <param name="obj">要测试的对象。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.UsesItemPolicyAttribute.GetHashCode">
      <summary>返回此属性 (Attribute) 的哈希代码。</summary>
      <returns>此特性的哈希代码。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Policies.UsesItemPolicyAttribute.ItemPolicyType">
      <summary>获取与功能提供程序相关联的策略类型。</summary>
      <returns>一个 <see cref="T:System.Type" />，表示与功能提供程序关联的策略。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Policies.UsesItemPolicyAttribute.MeetsRequirement(Microsoft.Windows.Design.EditingContext)">
      <summary>返回一个值，该值指示指定的编辑上下文中是否包含与此特性实例关联的 <see cref="P:Microsoft.Windows.Design.Policies.UsesItemPolicyAttribute.ItemPolicyType" />。</summary>
      <returns>如果满足此要求，则为 true；否则为 false。</returns>
      <param name="context">要检查的编辑上下文。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Policies.UsesItemPolicyAttribute.TypeId">
      <summary>获取此特性的类型 ID。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.AlternateContentPropertyAttribute">
      <summary>指示应在对象树中显示非内容属性。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.AlternateContentPropertyAttribute.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.AlternateContentPropertyAttribute" /> 类的新实例。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.CategoryEditor">
      <summary>用于创建自定义类别编辑器的抽象类。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.CategoryEditor.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.CategoryEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.CategoryEditor.ConsumesProperty(Microsoft.Windows.Design.PropertyEditing.PropertyEntry)">
      <summary>当在派生类中重写时，将为类别中的每个属性调用一次，以确定此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.CategoryEditor" /> 编辑的属性。</summary>
      <returns>如果此编辑器编辑该属性，则为 true；否则为 false。</returns>
      <param name="propertyEntry">要检查的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" />，目的是查看它是否由此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.CategoryEditor" /> 编辑。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.CategoryEditor.CreateEditorAttribute(Microsoft.Windows.Design.PropertyEditing.CategoryEditor)">
      <summary>可为指定的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.CategoryEditor" /> 创建新的 <see cref="T:System.ComponentModel.EditorAttribute" /> 的实用工具方法。</summary>
      <returns>指定的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.CategoryEditor" /> 的新 <see cref="T:System.ComponentModel.EditorAttribute" />。</returns>
      <param name="editor">
        <see cref="T:Microsoft.Windows.Design.PropertyEditing.CategoryEditor" /> 实例，将为其创建新 <see cref="T:System.ComponentModel.EditorAttribute" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.CategoryEditor.CreateEditorAttribute(System.Type)">
      <summary>可为指定的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.CategoryEditor" /> 类型创建新 <see cref="T:System.ComponentModel.EditorAttribute" /> 的实用工具方法。</summary>
      <returns>指定的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.CategoryEditor" /> 类型的新 <see cref="T:System.ComponentModel.EditorAttribute" />。</returns>
      <param name="categoryEditorType">
        <see cref="T:Microsoft.Windows.Design.PropertyEditing.CategoryEditor" /> 类型，将为其创建新 <see cref="T:System.ComponentModel.EditorAttribute" />。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.CategoryEditor.EditorTemplate">
      <summary>在派生类中重写时，获取用作 <see cref="T:Microsoft.Windows.Design.PropertyEditing.CategoryEditor" /> 的 UI 的 <see cref="T:System.Windows.DataTemplate" />。</summary>
      <returns>表示编辑器模板的 <see cref="T:System.Windows.DataTemplate" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.CategoryEditor.GetImage(System.Windows.Size)">
      <summary>在派生类中重写时，将返回一个对象，宿主可以将该对象放入 <see cref="T:System.Windows.Controls.ContentControl" /> 中以显示该对象。</summary>
      <returns>一个对象，它包含类别编辑器的图标。</returns>
      <param name="desiredSize">要返回的图像的所需大小。 此方法应进行最佳尝试以匹配请求的大小，但此方法不能保证这一点。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.CategoryEditor.TargetCategory">
      <summary>在派生类中重写时，获取指示此编辑器所属类别的本地化字符串。</summary>
      <returns>一个表示此编辑器所属类别的字符串。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.CategoryEntry">
      <summary>表示一个属性类别。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.CategoryEntry.#ctor(System.String)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.CategoryEntry" /> 类的新实例。</summary>
      <param name="name">由 <see cref="T:System.ComponentModel.CategoryAttribute" /> 特性定义的类别的本地化名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为空或为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.CategoryEntry.ApplyFilter(Microsoft.Windows.Design.PropertyEditing.PropertyFilter)">
      <summary>确定 <see cref="T:Microsoft.Windows.Design.PropertyEditing.CategoryEntry" /> 是否与某筛选器匹配，并存储信息。</summary>
      <param name="filter">要比较的筛选器。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.CategoryEntry.CategoryName">
      <summary>获取类别名称。</summary>
      <returns>类别名称。</returns>
    </member>
    <member name="E:Microsoft.Windows.Design.PropertyEditing.CategoryEntry.FilterApplied">
      <summary>表示处理 <see cref="T:Microsoft.Windows.Design.PropertyEditing.CategoryEntry" /> 的 <see cref="E:Microsoft.Windows.Design.PropertyEditing.CategoryEntry.FilterApplied" /> 事件的方法。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.CategoryEntry.Item(System.String)">
      <summary>在派生类中重写时，获取指定的属性。</summary>
      <returns>由 <paramref name="propertyName" /> 指定的属性。</returns>
      <param name="propertyName">要返回的属性的名称。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.CategoryEntry.MatchesFilter">
      <summary>获取或设置一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.CategoryEntry" /> 是否与某筛选器匹配。</summary>
      <returns>如果 <see cref="T:Microsoft.Windows.Design.PropertyEditing.CategoryEntry" /> 与该筛选器匹配，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.CategoryEntry.MatchesPredicate(Microsoft.Windows.Design.PropertyEditing.PropertyFilterPredicate)">
      <summary>在派生类中重写时，指示 <see cref="T:Microsoft.Windows.Design.PropertyEditing.CategoryEntry" /> 是否与某个谓词匹配。</summary>
      <returns>如果 <see cref="T:Microsoft.Windows.Design.PropertyEditing.CategoryEntry" /> 与该谓词匹配，则为 true；否则为 false。</returns>
      <param name="predicate">要比较的谓词。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.CategoryEntry.OnFilterApplied(Microsoft.Windows.Design.PropertyEditing.PropertyFilter)">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.PropertyEditing.CategoryEntry.FilterApplied" /> 事件。</summary>
      <param name="filter">正在应用的筛选器。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.CategoryEntry.OnPropertyChanged(System.String)">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.PropertyEditing.CategoryEntry.PropertyChanged" /> 事件。</summary>
      <param name="propertyName">要更改的属性的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyName" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.CategoryEntry.Properties">
      <summary>在派生类中重写时，获取该类别中的所有属性。</summary>
      <returns>该类别中的所有属性的可枚举集合。</returns>
    </member>
    <member name="E:Microsoft.Windows.Design.PropertyEditing.CategoryEntry.PropertyChanged">
      <summary>表示处理 <see cref="T:Microsoft.Windows.Design.PropertyEditing.CategoryEntry" /> 的 <see cref="E:Microsoft.Windows.Design.PropertyEditing.CategoryEntry.PropertyChanged" /> 事件的方法。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource">
      <summary>表示一个依赖项属性值的源。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.Ambient">
      <summary>获取一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个环境属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个环境属性。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.Binding">
      <summary>获取一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个绑定属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个绑定属性。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.CustomMarkupExtension">
      <summary>获取一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个设置为自定义标记扩展的属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个设置为自定义标记扩展的属性。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.DataBound">
      <summary>获取一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个数据绑定属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个数据绑定属性。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.DefaultValue">
      <summary>获取一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个设置为其默认值的属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个设置为其默认值的属性。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.DynamicResource">
      <summary>获取一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个设置为动态资源的属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个设置为动态资源的属性。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.Inherited">
      <summary>获取一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个继承的属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个继承的属性。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.InheritedValue">
      <summary>获取一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个已有其他属性继承其值的属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个已有其他属性继承其值的属性。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.IsAmbient">
      <summary>获取一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象是否表示一个环境属性。</summary>
      <returns>如果此对象表示一个环境属性，则该值为 true；否则该值为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.IsBinding">
      <summary>获取一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 是否表示一个绑定属性。</summary>
      <returns>如果此对象表示一个绑定属性，则该值为 true；否则该值为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.IsCustomMarkupExtension">
      <summary>获取一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象是否表示一个设置为自定义标记扩展的属性。</summary>
      <returns>如果此对象表示一个设置为自定义标记扩展的属性，则该值为 true；否则该值为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.IsDataBound">
      <summary>获取一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象是否表示一个数据绑定属性。</summary>
      <returns>如果此对象表示一个数据绑定属性，则该值为 true；否则该值为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.IsDefaultValue">
      <summary>获取一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象是否表示一个设置为默认值的属性。</summary>
      <returns>如果此对象表示一个设置为其默认值的属性，则该值为 true；否则该值为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.IsDynamicResource">
      <summary>获取一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 是否表示一个设置为动态资源的属性。</summary>
      <returns>如果此对象表示一个设置为动态资源的属性，则该值为 true；否则该值为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.IsExpression">
      <summary>获取一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 是否表示一个设置为表达式的属性。</summary>
      <returns>如果此对象表示一个设置为表达式的属性，则该值为 true；否则该值为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.IsInherited">
      <summary>获取一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象是否表示一个继承的属性。</summary>
      <returns>如果此对象表示一个继承的属性，则该值为 true；否则该值为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.IsInheritedValue">
      <summary>获取一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象是否表示一个已有其他属性继承其值的属性。</summary>
      <returns>如果此对象表示一个已有其他属性继承其值的属性，则该值为 true；否则该值为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.IsLocal">
      <summary>获取一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象是否表示一个本地属性。</summary>
      <returns>如果此对象表示一个本地属性，则该值为 true；否则该值为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.IsLocalResource">
      <summary>获取一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象是否表示一个设置为本地资源的属性。</summary>
      <returns>如果此对象表示一个设置为 <see cref="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.LocalDynamicResource" /> 或 <see cref="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.LocalStaticResource" /> 的属性，则该值为 true；否则该值为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.IsLocalValue">
      <summary>获取一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象是否表示一个设置为本地值的属性。</summary>
      <returns>如果此对象表示一个设置为本地值的属性，则该值为 true；否则该值为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.IsMarkupExtension">
      <summary>获取一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象是否表示一个设置为标记扩展的属性。</summary>
      <returns>如果此对象表示一个设置为标记扩展的属性，则该值为 true；否则该值为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.IsNull">
      <summary>获取一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 是否表示一个设置为 x:Null 的属性。</summary>
      <returns>如果此对象表示一个设置为 x:Null 的属性，则该值为 true；否则该值为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.IsResource">
      <summary>获取一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象是否表示一个设置为资源的属性。</summary>
      <returns>如果此对象表示一个设置为 <see cref="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.SystemResource" />、<see cref="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.LocalDynamicResource" /> 或 <see cref="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.LocalStaticResource" /> 的属性，则该值为 true；否则该值为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.IsStatic">
      <summary>获取一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 是否表示一个设置为静态值的属性。</summary>
      <returns>如果此对象表示一个设置为静态值的属性，则该值为 true；否则该值为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.IsStaticResource">
      <summary>获取一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象是否表示一个设置为静态资源的属性。</summary>
      <returns>如果此对象表示一个设置为静态资源的属性，则该值为 true；否则该值为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.IsSystemResource">
      <summary>获取一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 是否表示一个设置为系统资源的属性。</summary>
      <returns>如果此对象表示一个设置为 <see cref="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.SystemResource" /> 的属性，则该值为 true；否则该值为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.IsTemplateBinding">
      <summary>获取一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 是否表示一个模板绑定属性。</summary>
      <returns>如果此对象表示一个模板绑定属性，则该值为 true；否则该值为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.Local">
      <summary>获取一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个本地属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个本地属性。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.LocalDynamicResource">
      <summary>获取一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个设置为本地动态资源的属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个设置为本地动态资源的属性。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.LocalStaticResource">
      <summary>获取一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个设置为本地静态资源的属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个设置为本地静态资源的属性。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.LocalValue">
      <summary>获取一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个设置为本地值的属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个设置为本地值的属性。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.Null">
      <summary>获取一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个设置为 x:Null 的属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个设置为 x:Null 的属性。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.Static">
      <summary>获取一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个设置为静态值的属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个设置为静态值的属性。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.StaticResource">
      <summary>获取一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个设置为静态资源的属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个设置为静态资源的属性。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.SystemResource">
      <summary>获取一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个设置为系统资源的属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" />，表示一个设置为系统资源的属性。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource.TemplateBinding">
      <summary>获取一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" /> 对象，该对象表示一个模板绑定属性。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DependencyPropertyValueSource" />，表示一个模板绑定属性。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.DialogPropertyValueEditor">
      <summary>
        <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 对象的所有对话框编辑逻辑的容器。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.DialogPropertyValueEditor.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DialogPropertyValueEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.DialogPropertyValueEditor.#ctor(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.DialogPropertyValueEditor" /> 类的新实例。</summary>
      <param name="dialogEditorTemplate">承载在特定于宿主的对话框中的 <see cref="T:System.Windows.DataTemplate" />，它的 <see cref="P:System.Windows.FrameworkElement.DataContext" /> 设置为与正在编辑的属性对应的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</param>
      <param name="inlineEditorTemplate">用于内联编辑器的 <see cref="T:System.Windows.DataTemplate" />。 如果使用，则它的 <see cref="P:System.Windows.FrameworkElement.DataContext" /> 将设置为与正在编辑的属性对应的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate">
      <summary>获取或设置 <see cref="T:System.Windows.DataTemplate" />，它由特定于宿主的对话框承载，并且其 <see cref="P:System.Windows.FrameworkElement.DataContext" /> 设置为 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</summary>
      <returns>作为此值编辑器的模板的 <see cref="T:System.Windows.DataTemplate" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.DialogPropertyValueEditor.ShowDialog(Microsoft.Windows.Design.PropertyEditing.PropertyValue,System.Windows.IInputElement)">
      <summary>当 <see cref="P:Microsoft.Windows.Design.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" /> 为 null 并且用户已经调用对话框时调用。</summary>
      <param name="propertyValue">正在编辑的属性的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /></param>
      <param name="commandSource">一个 <see cref="T:System.Windows.IInputElement" />，它可用作执行 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditorCommands" /> 的源。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.EditModeSwitchButton">
      <summary>允许用户在不同 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainer" /> 模式间进行切换的便捷按钮。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.EditModeSwitchButton.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.EditModeSwitchButton" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.EditModeSwitchButton.OnCreateAutomationPeer">
      <summary>创建并返回一个 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />，供自动化基础结构使用。</summary>
      <returns>此对象的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.EditModeSwitchButton.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Input.Mouse.MouseDown" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Input.MouseButtonEventArgs" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.EditModeSwitchButton.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>当此控件的任何依赖项属性更改时调用。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.EditModeSwitchButton.SyncModeToOwningContainer">
      <summary>获取或设置一个值，该值指示是否与所属容器同步。 这是一个依赖项属性。</summary>
      <returns>如果自动计算 <see cref="P:Microsoft.Windows.Design.PropertyEditing.EditModeSwitchButton.TargetEditMode" />，以匹配所属的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainer" /> 的 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ActiveEditMode" /> 属性，则为 true。 如果要切换到的模式是基于 <see cref="P:Microsoft.Windows.Design.PropertyEditing.EditModeSwitchButton.TargetEditMode" /> 属性的，则为 false。 默认值为 true。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.PropertyEditing.EditModeSwitchButton.SyncModeToOwningContainerProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.PropertyEditing.EditModeSwitchButton.SyncModeToOwningContainer" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.PropertyEditing.EditModeSwitchButton.SyncModeToOwningContainer" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.EditModeSwitchButton.TargetEditMode">
      <summary>获取或设置单击此控件时要切换到的模式。 这是一个依赖项属性。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainerEditMode" /> 对象。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.PropertyEditing.EditModeSwitchButton.TargetEditModeProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.PropertyEditing.EditModeSwitchButton.TargetEditMode" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.PropertyEditing.EditModeSwitchButton.TargetEditMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.ExtendedPropertyValueEditor">
      <summary>属性的任何和所有扩展编辑器逻辑的容器。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.ExtendedPropertyValueEditor.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.ExtendedPropertyValueEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.ExtendedPropertyValueEditor.#ctor(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>使用指定的扩展和内联编辑器 <see cref="T:System.Windows.DataTemplate" /> 对象初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.ExtendedPropertyValueEditor" /> 类的新实例。</summary>
      <param name="extendedEditorTemplate">
        <see cref="T:System.Windows.DataTemplate" />，用于在“属性”窗口中查看的弹出/固定扩展编辑器。 使用时，其 <see cref="P:System.Windows.FrameworkElement.DataContext" /> 属性将设置为 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</param>
      <param name="inlineEditorTemplate">用于内联编辑器的 <see cref="T:System.Windows.DataTemplate" />。 使用时，其 <see cref="P:System.Windows.FrameworkElement.DataContext" /> 属性将设置为 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.ExtendedPropertyValueEditor.ExtendedEditorTemplate">
      <summary>获取或设置 <see cref="T:System.Windows.DataTemplate" />，它用于弹出/固定扩展编辑器。</summary>
      <returns>一个定义编辑器的 <see cref="T:System.Windows.DataTemplate" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.IIndexableAttribute">
      <summary>针对一个特性定义索引运算符。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.IIndexableAttribute.Item(System.String)">
      <summary>获取具有指定键的特性。</summary>
      <returns>与 <paramref name="key" /> 相对应的 <see cref="T:System.Attribute" />。</returns>
      <param name="key">要为其获取对应的 <see cref="T:System.Attribute" /> 的键。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.IPropertyFilterTarget">
      <summary>处理排序和筛选功能。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.IPropertyFilterTarget.ApplyFilter(Microsoft.Windows.Design.PropertyEditing.PropertyFilter)">
      <summary>确定 <see cref="T:Microsoft.Windows.Design.PropertyEditing.IPropertyFilterTarget" /> 是否与某筛选器匹配，并存储信息。</summary>
      <param name="filter">要比较的筛选器。</param>
    </member>
    <member name="E:Microsoft.Windows.Design.PropertyEditing.IPropertyFilterTarget.FilterApplied">
      <summary>当通过对 <see cref="M:Microsoft.Windows.Design.PropertyEditing.IPropertyFilterTarget.ApplyFilter(Microsoft.Windows.Design.PropertyEditing.PropertyFilter)" /> 方法的调用更改 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyFilter" /> 时发生。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.IPropertyFilterTarget.MatchesFilter">
      <summary>获取一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.IPropertyFilterTarget" /> 是否与某筛选器匹配。</summary>
      <returns>如果 <see cref="T:Microsoft.Windows.Design.PropertyEditing.IPropertyFilterTarget" /> 与该筛选器匹配，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.IPropertyFilterTarget.MatchesPredicate(Microsoft.Windows.Design.PropertyEditing.PropertyFilterPredicate)">
      <summary>指示 <see cref="T:Microsoft.Windows.Design.PropertyEditing.IPropertyFilterTarget" /> 是否与某谓词匹配。</summary>
      <returns>如果 <see cref="T:Microsoft.Windows.Design.PropertyEditing.IPropertyFilterTarget" /> 与该谓词匹配，则为 true；否则为 false。</returns>
      <param name="predicate">要比较的谓词。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1">
      <summary>将字符串键映射到 <see cref="T:System.Attribute" /> 实例。</summary>
      <typeparam name="T">特性的类型。</typeparam>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1.#ctor(System.String,`0)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 类的新实例。</summary>
      <param name="key">要与 <paramref name="value" /> 关联的唯一字符串。</param>
      <param name="value">要与 <paramref name="key" /> 关联的 <see cref="T:System.Attribute" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1.Equals(System.Object)">
      <summary>确定指定的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 是否等于当前的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" />。</summary>
      <returns>如果指定的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 等于当前的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" />，则为 true；否则为 false。</returns>
      <param name="obj">与当前的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 进行比较的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1.GetHashCode">
      <summary>返回当前 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 的哈希代码。</summary>
      <returns>当前 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 的哈希代码。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1.Key">
      <summary>为当前的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 获取键。</summary>
      <returns>当前的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 的键。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1.op_Equality(Microsoft.Windows.Design.PropertyEditing.KeyAttributePair{`0},Microsoft.Windows.Design.PropertyEditing.KeyAttributePair{`0})">
      <summary>确定指定的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 实例是否被视为相等。</summary>
      <returns>如果 <paramref name="first" /> 等于 <paramref name="second" />，则为 true；否则为 false。</returns>
      <param name="pair1">要比较的第一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" />。</param>
      <param name="pair2">要比较的第二个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1.op_Inequality(Microsoft.Windows.Design.PropertyEditing.KeyAttributePair{`0},Microsoft.Windows.Design.PropertyEditing.KeyAttributePair{`0})">
      <summary>确定是否将指定的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 实例视为不相等。</summary>
      <returns>如果 <paramref name="first" /> 不等于 <paramref name="second" />，则为 true；否则为 false。</returns>
      <param name="pair1">要比较的第一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" />。</param>
      <param name="pair2">要比较的第二个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" />。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1.Value">
      <summary>为当前的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 获取 <see cref="T:System.Attribute" />。</summary>
      <returns>当前 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 的 <see cref="T:System.Attribute" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.NewItemFactory">
      <summary>表示用来为一个集合或一个属性值创建新项的工厂。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NewItemFactory.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NewItemFactory" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NewItemFactory.CreateInstance(System.Type)">
      <summary>创建指定 <see cref="T:System.Type" /> 的实例，该实例可添加到集合编辑器或子属性编辑器中。</summary>
      <returns>如果找到了 <paramref name="type" /> 的构造函数，则返回 <paramref name="type" /> 的实例；否则返回 null。</returns>
      <param name="type">要创建的对象的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NewItemFactory.GetDisplayName(System.Type)">
      <summary>获取指定 <see cref="T:System.Type" /> 的显示名称，该名称可添加到集合编辑器或子属性编辑器中。</summary>
      <returns>要为 <paramref name="type" /> 显示的名称。</returns>
      <param name="type">要获取其显示名称的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NewItemFactory.GetImageStream(System.Type,System.Windows.Size,System.String@)">
      <summary>获取指定 <see cref="T:System.Type" /> 的图像，该图像可在集合编辑器或子属性编辑器中用作图标。</summary>
      <returns>一个 <see cref="T:System.IO.Stream" />，表示要为 <paramref name="type" /> 显示的图像。</returns>
      <param name="type">要为其获取图像的类型。</param>
      <param name="desiredSize">请求的图像大小。</param>
      <param name="imageName">找到的图像的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 为 null。</exception>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.NewItemTypesAttribute">
      <summary>用于指定哪种对象类型可被赋予属性值或属性类型值。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NewItemTypesAttribute.#ctor(System.Type)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NewItemTypesAttribute" /> 类的新实例。</summary>
      <param name="type">一个 <see cref="T:System.Type" /> 对象，此特性将其声明为有效的新项类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NewItemTypesAttribute.#ctor(System.Type[])">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NewItemTypesAttribute" /> 类的新实例。</summary>
      <param name="types">一个 <see cref="T:System.Type" /> 对象的数组，此特性将其声明为有效的新项类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="types" /> 为 null 或为空。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.NewItemTypesAttribute.FactoryType">
      <summary>获取或设置与此属性相关的工厂类型。</summary>
      <returns>一个 <see cref="T:System.Type" /> 对象，表示与此特性关联的类型。</returns>
      <exception cref="T:System.ArgumentException">类型不从 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NewItemFactory" /> 进行派生。</exception>
      <exception cref="T:System.ArgumentNullException">类型为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.NewItemTypesAttribute.TypeId">
      <summary>获取此特性的类型 ID。</summary>
      <returns>表示类型 ID 的对象。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.NewItemTypesAttribute.Types">
      <summary>获取一个 <see cref="T:System.Type" /> 对象的数组，此特性被声明为有效的新的项类型。</summary>
      <returns>类型的枚举，此特性确保其为有效的新项类型。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute">
      <summary>存储用于编辑数值的格式信息。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute.#ctor(Microsoft.Windows.Design.PropertyEditing.KeyAttributePair{Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute}[])">
      <summary>使用指定的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 实例数组初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute" /> 类的新实例。</summary>
      <param name="mapArray">一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 实例数组。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Double})">
      <summary>使用指定的格式字符串、精度和小数位数初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute" /> 类的新实例。</summary>
      <param name="formatString">一个数字格式字符串。</param>
      <param name="maxPrecision">一个整数，表示数字编辑器可处理的最大小数位数。</param>
      <param name="scale">应用于数字显示值的小数位数。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Double},Microsoft.Windows.Design.PropertyEditing.KeyAttributePair{Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute}[])">
      <summary>使用指定的格式字符串、精度、小数位数和 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 实例初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute" /> 类的新实例。</summary>
      <param name="formatString">一个数字格式字符串。</param>
      <param name="maxPrecision">一个整数，表示数字编辑器可处理的最大小数位数。</param>
      <param name="scale">应用于数字显示值的小数位数。</param>
      <param name="mapArray">一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 实例数组。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute.Equals(System.Object)">
      <summary>确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute" />。</summary>
      <returns>如果指定的 <see cref="T:System.Object" /> 等于当前的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute" />，则为 true；否则为 false。</returns>
      <param name="obj">与当前的 <see cref="T:System.Object" /> 进行比较的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute" />。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute.FormatString">
      <summary>为当前的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute" /> 获取数字格式字符串。</summary>
      <returns>当前的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute" /> 的数字格式字符串。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute.GetHashCode">
      <summary>返回当前 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute" /> 的哈希代码。</summary>
      <returns>当前 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute" /> 的哈希代码。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute.Item(System.String)">
      <summary>使用指定的键获取 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute" />。</summary>
      <returns>与 <paramref name="key" /> 相对应的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute" />。</returns>
      <param name="key">要为其获取对应的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute" /> 的键。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute.MaxPrecision">
      <summary>获取数字编辑器可处理的最大小数位数。</summary>
      <returns>一个整数，表示数字编辑器可处理的最大小数位数。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.NumberFormatAttribute.Scale">
      <summary>获取应用于数字显示值的小数位数。</summary>
      <returns>应用于数字显示值的小数位数。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute">
      <summary>包含有关用于更改一个数值的增量的信息。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute.#ctor(Microsoft.Windows.Design.PropertyEditing.KeyAttributePair{Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute}[])">
      <summary>使用指定的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute" /> 实例初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 类的新实例。</summary>
      <param name="mapArray">一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 实例数组。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute.#ctor(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>使用指定的增量值来初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute" /> 类的新实例。</summary>
      <param name="smallChange">小增量的值。</param>
      <param name="defaultChange">默认增量的值。</param>
      <param name="largeChange">大增量的值。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute.#ctor(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},Microsoft.Windows.Design.PropertyEditing.KeyAttributePair{Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute}[])">
      <summary>使用指定的参数初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute" /> 类的新实例。</summary>
      <param name="smallChange">小增量的值。</param>
      <param name="defaultChange">默认增量的值。</param>
      <param name="largeChange">大增量的值。</param>
      <param name="mapArray">一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 实例数组。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute.DefaultChange">
      <summary>获取默认增量的值。</summary>
      <returns>一个表示默认增量的 double。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute.Equals(System.Object)">
      <summary>确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute" />。</summary>
      <returns>如果指定的 <see cref="T:System.Object" /> 等于当前的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute" />，则为 true；否则为 false。</returns>
      <param name="obj">与当前的 <see cref="T:System.Object" /> 进行比较的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute.GetHashCode">
      <summary>返回当前 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute" /> 的哈希代码。</summary>
      <returns>当前 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute" /> 的哈希代码。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute.Item(System.String)">
      <summary>使用指定的键获取 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute" />。</summary>
      <returns>与 <paramref name="key" /> 相对应的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute" />。</returns>
      <param name="key">要为其获取对应的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute" /> 的键。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute.LargeChange">
      <summary>获取大增量的值。</summary>
      <returns>一个表示大增量的 double。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.NumberIncrementsAttribute.SmallChange">
      <summary>获取小增量的值。</summary>
      <returns>一个表示小增量的 double。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute">
      <summary>利用基于数字的特性定义范围</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute.#ctor(Microsoft.Windows.Design.PropertyEditing.KeyAttributePair{Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute}[])">
      <summary>使用指定的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute" /> 实例初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 类的新实例。</summary>
      <param name="mapArray">一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 实例数组。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute.#ctor(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})">
      <summary>使用指定的硬限制值和软限制值来初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute" /> 类的新实例。</summary>
      <param name="hardMinimum">范围的最小值，或表示使用默认值的 null。</param>
      <param name="minimum">范围的软性最小值，或表示使用默认值的 null。</param>
      <param name="maximum">范围的软性最大值，或表示使用默认值的 null。</param>
      <param name="hardMaximum">范围的最大值，或表示使用默认值的 null。</param>
      <param name="canBeAuto">如果可自动设置范围，则为 true；否则为 false。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute.#ctor(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean},Microsoft.Windows.Design.PropertyEditing.KeyAttributePair{Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute}[])">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute" /> 类的新实例。</summary>
      <param name="hardMinimum">范围的最小值，或表示使用默认值的 null。</param>
      <param name="minimum">范围的软性最小值，或表示使用默认值的 null。</param>
      <param name="maximum">范围的软性最大值，或表示使用默认值的 null。</param>
      <param name="hardMaximum">范围的最大值，或表示使用默认值的 null。</param>
      <param name="canBeAuto">如果可自动设置范围，则为 true；否则为 false。</param>
      <param name="mapArray">一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.KeyAttributePair`1" /> 实例数组。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute.CanBeAuto">
      <summary>获取一个值，该值指示是否可以自动设置范围。</summary>
      <returns>如果可自动设置范围，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute.Equals(System.Object)">
      <summary>确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute" />。</summary>
      <returns>如果指定的 <see cref="T:System.Object" /> 等于当前的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute" />，则为 true；否则为 false。</returns>
      <param name="obj">与当前的 <see cref="T:System.Object" /> 进行比较的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute.GetHashCode">
      <summary>返回当前 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute" /> 的哈希代码。</summary>
      <returns>当前 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute" /> 的哈希代码。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute.HardMaximum">
      <summary>获取最大值的硬限制。</summary>
      <returns>一个表示最大值的硬限制的 double，或表示使用默认值的 null。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute.HardMinimum">
      <summary>获取最小值的硬限制。</summary>
      <returns>一个表示最小值的硬限制的 double，或表示使用默认值的 null。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute.Item(System.String)">
      <summary>使用指定键获取 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute" />。</summary>
      <returns>与 <paramref name="key" /> 相对应的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute" />。</returns>
      <param name="key">要为其获取对应的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute" /> 的键。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute.Maximum">
      <summary>获取最大值的软限制。</summary>
      <returns>一个表示最大值的软限制的 double，或表示使用默认值的 null。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.NumberRangesAttribute.Minimum">
      <summary>获取最小值的软限制。</summary>
      <returns>一个表示最小值的软限制的 double，或表示使用默认值的 null。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainer">
      <summary>用作 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 实例的图形容器。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainer" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ActiveEditMode">
      <summary>获取或设置此容器当前显示的编辑模式。</summary>
      <returns>此容器的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainerEditMode" />。</returns>
    </member>
    <member name="E:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ActiveEditModeChanged">
      <summary>当此容器的活动编辑模式更改时发生。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ActiveEditModeProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ActiveEditMode" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ActiveEditMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.DefaultPropertyValueEditor">
      <summary>获取或设置默认 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditor" />。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditor" />，表示默认属性值编辑器。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.DefaultPropertyValueEditorProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.DefaultPropertyValueEditor" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.DefaultPropertyValueEditor" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.DefaultStandardValuesPropertyValueEditor">
      <summary>获取或设置默认的标准值编辑器。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditor" />，表示默认的标准值编辑器。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.DefaultStandardValuesPropertyValueEditorProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.DefaultStandardValuesPropertyValueEditor" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.DefaultStandardValuesPropertyValueEditor" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.DialogCommandSource">
      <summary>获取或设置要作为命令源传递给 <see cref="M:Microsoft.Windows.Design.PropertyEditing.DialogPropertyValueEditor.ShowDialog(Microsoft.Windows.Design.PropertyEditing.PropertyValue,System.Windows.IInputElement)" /> 方法的 <see cref="T:System.Windows.IInputElement" />。</summary>
      <returns>要作为命令源传递给 <see cref="M:Microsoft.Windows.Design.PropertyEditing.DialogPropertyValueEditor.ShowDialog(Microsoft.Windows.Design.PropertyEditing.PropertyValue,System.Windows.IInputElement)" /> 方法的 <see cref="T:System.Windows.IInputElement" />。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.DialogCommandSourceProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.DialogCommandSource" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.DialogCommandSource" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.DialogEditorTemplate">
      <summary>获取最适合于当前的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 的 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.DialogEditorTemplate" />。</summary>
      <returns>一个 <see cref="T:System.Windows.DataTemplate" />，表示最适合于当前的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 的 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.DialogEditorTemplate" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ExtendedEditorTemplate">
      <summary>为当前的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 获取最适当的 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ExtendedEditorTemplate" />。</summary>
      <returns>一个 <see cref="T:System.Windows.DataTemplate" />，表示最适合于当前的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 的 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ExtendedEditorTemplate" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ExtendedPinnedRowTemplate">
      <summary>获取或设置此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainer" /> 的 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ExtendedPinnedRowTemplate" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.ControlTemplate" />，表示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainer" /> 的 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ExtendedPinnedRowTemplate" />。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ExtendedPinnedRowTemplateProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ExtendedPinnedRowTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ExtendedPinnedRowTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ExtendedPopupRowTemplate">
      <summary>获取或设置此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainer" /> 的 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ExtendedPopupRowTemplate" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.ControlTemplate" />，表示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainer" /> 的 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ExtendedPopupRowTemplate" />。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ExtendedPopupRowTemplateProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ExtendedPopupRowTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ExtendedPopupRowTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.GetOwningPropertyContainer(System.Windows.DependencyObject)">
      <summary>获取指定依赖项对象的 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.OwningPropertyContainer" /> 附加属性的值。</summary>
      <returns>所属 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainer" />。</returns>
      <param name="dependencyObject">从中获取该属性的 <see cref="T:System.Windows.DependencyObject" />。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.InlineEditorTemplate">
      <summary>获取最适合于当前的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 的 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.InlineEditorTemplate" />。</summary>
      <returns>一个 <see cref="T:System.Windows.DataTemplate" />，表示最适合于当前的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 的 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.InlineEditorTemplate" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.InlineRowTemplate">
      <summary>获取或设置 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainer" /> 的 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.InlineRowTemplate" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ControlTemplate" />，表示 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainer" /> 的 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.InlineRowTemplate" />。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.InlineRowTemplateProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.InlineRowTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.InlineRowTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.MatchesFilter">
      <summary>获取包含的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 中存储的 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.MatchesFilter" /> 的值。</summary>
      <returns>包含的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 中存储的 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.MatchesFilter" /> 的值。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.OnPropertyChanged(System.String)">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.PropertyChanged" /> 事件。</summary>
      <param name="propertyName">属性的名称。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.PropertyChanged" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.OpenDialogWindow">
      <summary>获取将 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ActiveEditMode" /> 属性更改为 <see cref="F:Microsoft.Windows.Design.PropertyEditing.PropertyContainerEditMode.Dialog" /> 时引发的命令。</summary>
      <returns>
        <see cref="T:System.Windows.Input.RoutedCommand" />，当 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.ActiveEditMode" /> 属性更改为 <see cref="F:Microsoft.Windows.Design.PropertyEditing.PropertyContainerEditMode.Dialog" /> 时引发。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.OwningPropertyContainer">
      <summary>获取或设置所属 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainer" />，<see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditor" /> 类型的 UI 元素可使用它来访问其父级 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainer" />。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainer" />，表示所属 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainer" />。</returns>
    </member>
    <member name="F:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.OwningPropertyContainerProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.OwningPropertyContainer" /> 附加属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.OwningPropertyContainer" /> 附加属性的标识符。</returns>
    </member>
    <member name="E:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.PropertyChanged">
      <summary>在属性更改时发生。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.PropertyEntry">
      <summary>获取或设置此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainer" /> 对其进行操作的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 实例。</summary>
      <returns>此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainer" /> 对其进行操作的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 实例。</returns>
    </member>
    <member name="E:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.PropertyEntryChanged">
      <summary>当 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.PropertyEntry" /> 属性更改时发生。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.PropertyEntryProperty">
      <summary>标识 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.PropertyEntry" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.PropertyEntry" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.SetOwningPropertyContainer(System.Windows.DependencyObject,Microsoft.Windows.Design.PropertyEditing.PropertyContainer)">
      <summary>设置指定依赖项对象的 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyContainer.OwningPropertyContainer" /> 附加属性的值。</summary>
      <param name="dependencyObject">对其设置该属性的 <see cref="T:System.Windows.DependencyObject" />。</param>
      <param name="value">所属 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainer" />。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainerEditMode">
      <summary>为 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainer" /> 定义不同的编辑模式。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.PropertyEditing.PropertyContainerEditMode.Inline">
      <summary>内联编辑器</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.PropertyEditing.PropertyContainerEditMode.ExtendedPopup">
      <summary>扩展编辑器显示“属性”窗口上。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.PropertyEditing.PropertyContainerEditMode.ExtendedPinned">
      <summary>扩展编辑器固定在“属性"窗口内。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.PropertyEditing.PropertyContainerEditMode.Dialog">
      <summary>对话框编辑器。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry">
      <summary>表示一个属性。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.#ctor(Microsoft.Windows.Design.PropertyEditing.PropertyValue)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 类的新实例，该类用作指定的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 的子属性。</summary>
      <param name="parentValue">父 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。 根属性没有父 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.ApplyFilter(Microsoft.Windows.Design.PropertyEditing.PropertyFilter)">
      <summary>确定 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 是否与某筛选器匹配，并存储信息。</summary>
      <param name="filter">要比较的筛选器。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.CategoryName">
      <summary>在派生类中重写时，获取对象所在的类别的名称。</summary>
      <returns>此属性所在的类别的名称。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.Context">
      <summary>在派生类中重写时，获取当前的 <see cref="T:Microsoft.Windows.Design.EditingContext" /> 实例。</summary>
      <returns>当前的 <see cref="T:Microsoft.Windows.Design.EditingContext" /> 实例。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.CreatePropertyValueInstance">
      <summary>当在派生类中重写时，由宿主基础结构用于创建新的特定于宿主的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 实例。</summary>
      <returns>新 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 实例。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.Description">
      <summary>当在派生类中重写时，获取封装的属性的说明。</summary>
      <returns>封装的属性的说明。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.DisplayName">
      <summary>获取属性的显示名称。</summary>
      <returns>属性的显示名称。</returns>
    </member>
    <member name="E:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.FilterApplied">
      <summary>当通过对 <see cref="M:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.ApplyFilter(Microsoft.Windows.Design.PropertyEditing.PropertyFilter)" /> 方法的调用更改 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyFilter" /> 时发生。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.HasStandardValues">
      <summary>获取一个值，该值指示此属性是否具有标准值。</summary>
      <returns>如果此属性具有标准值，则为 true，否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.Identifier">
      <summary>在派生类中重写时，获取一个用于在当前平台上唯一地标识此属性类型和名称的标识符。</summary>
      <returns>一个用于在当前平台上唯一地标识此属性类型和名称的标识符。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.IsAdvanced">
      <summary>当在派生类中重写时，获取一个值，该值指示封装的属性是否是高级属性。</summary>
      <returns>如果封装的属性是高级属性，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.IsReadOnly">
      <summary>当在派生类中重写时，获取一个值，该值指示封装的属性是否是只读属性。</summary>
      <returns>如果封装的属性是只读属性，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.MatchesFilter">
      <summary>获取或设置一个值，该值指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 是否与某筛选器匹配。</summary>
      <returns>如果 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 与该筛选器匹配，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.MatchesPredicate(Microsoft.Windows.Design.PropertyEditing.PropertyFilterPredicate)">
      <summary>指示 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 是否与某谓词匹配。</summary>
      <returns>如果 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 与该谓词匹配，则为 true；否则为 false。</returns>
      <param name="predicate">要比较的谓词。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.ModelProperties">
      <summary>在派生类中重写时，获取此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 的模型属性的集合。</summary>
      <returns>此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 的模型属性的集合。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.OnFilterApplied(Microsoft.Windows.Design.PropertyEditing.PropertyFilter)">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.PropertyEditing.IPropertyFilterTarget.FilterApplied" /> 事件。</summary>
      <param name="filter">正在应用的筛选器。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.PropertyChanged" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.OnPropertyChanged(System.String)">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.PropertyChanged" /> 事件。</summary>
      <param name="propertyName">已更改的属性的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyName" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.ParentValue">
      <summary>获取父 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</summary>
      <returns>父 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</returns>
    </member>
    <member name="E:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.PropertyChanged">
      <summary>在更改属性值时发生。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.PropertyName">
      <summary>当在派生类中重写时，获取封装的属性的名称。</summary>
      <returns>封装的属性的名称。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.PropertyType">
      <summary>当在派生类中重写时，获取封装的属性的类型。</summary>
      <returns>封装的属性的类型。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.PropertyValue">
      <summary>获取此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />（数据模型）。</summary>
      <returns>此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.PropertyValueEditor">
      <summary>当在派生类中重写时，获取将用来编辑此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditor" />。</summary>
      <returns>用于编辑此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditor" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyEntry.StandardValues">
      <summary>当在派生类中重写时，获取封装的属性支持的标准值。</summary>
      <returns>封装的属性支持的标准值的 <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntryCollection">
      <summary>表示给定 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 的子属性的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 实例的集合。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyEntryCollection.#ctor(Microsoft.Windows.Design.PropertyEditing.PropertyValue)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntryCollection" /> 类的新实例。</summary>
      <param name="parentValue">父 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentValue" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyEntryCollection.Count">
      <summary>在派生类中重写时，获取此集合中 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 实例的数目。</summary>
      <returns>此集合中 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 实例的数目。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyEntryCollection.GetEnumerator">
      <summary>在派生类中重写时，返回此集合中所有 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 实例的 <see cref="T:System.Collections.IEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyEntryCollection.Item(System.String)">
      <summary>在派生类中重写时，从此集合中获取具有指定名称的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" />。</summary>
      <returns>具有指定名称的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyEntry" /> 实例；如果该实例不存在，则为 null。</returns>
      <param name="propertyName">属性的名称。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyEntryCollection.ParentValue">
      <summary>获取父 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</summary>
      <returns>一个表示父级的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyEntryCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.PropertyFilter">
      <summary>用作属性编辑宿主可能提供的搜索和筛选功能的一部分。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyFilter.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Windows.Design.PropertyEditing.PropertyFilterPredicate})">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyFilter" /> 类的新实例。</summary>
      <param name="predicates">谓词的 <see cref="T:System.Collections.IEnumerable" /> 集合。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyFilter.#ctor(System.String)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyFilter" /> 类的新实例。</summary>
      <param name="filterText">谓词的字符串表示形式。 谓词字段是分隔的。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyFilter.IsEmpty">
      <summary>获取一个值，通过该值指示 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyFilter" /> 是否包含任何谓词。</summary>
      <returns>如果此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyFilter" /> 没有任何谓词，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyFilter.Match(Microsoft.Windows.Design.PropertyEditing.IPropertyFilterTarget)">
      <summary>将此筛选器与某个特定筛选器目标进行比较。</summary>
      <returns>如果没有谓词或者有一个或多个谓词与过滤器目标匹配，则为 true；否则为 false。</returns>
      <param name="target">要比较的目标。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 为 null。</exception>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.PropertyFilterAppliedEventArgs">
      <summary>为 <see cref="E:Microsoft.Windows.Design.PropertyEditing.IPropertyFilterTarget.FilterApplied" /> 事件提供数据。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyFilterAppliedEventArgs.#ctor(Microsoft.Windows.Design.PropertyEditing.PropertyFilter)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyFilterAppliedEventArgs" /> 类的新实例。</summary>
      <param name="filter">应用的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyFilter" />。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyFilterAppliedEventArgs.Filter">
      <summary>获取已应用的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyFilter" />。</summary>
      <returns>已应用的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyFilter" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.PropertyFilterPredicate">
      <summary>表示用来搜索和筛选的谓词。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyFilterPredicate.#ctor(System.String)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyFilterPredicate" /> 类的新实例。</summary>
      <param name="matchText">谓词字符串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matchText" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyFilterPredicate.Match(System.String)">
      <summary>返回一个值，该值指示目标字符串中是否包含谓词字符串的不区分大小写的匹配项。</summary>
      <returns>如果目标字符串中包含谓词字符串的不区分大小写的匹配项，则为 true；否则为 false。</returns>
      <param name="target">要与谓词字符串比较的目标字符串。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyFilterPredicate.MatchText">
      <summary>获取谓词字符串的一个大写版本。</summary>
      <returns>谓词字符串的一个大写版本。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.PropertyMarker">
      <summary>在属性窗口中与属性值一起显示的控件，该控件可包含有关属性值的信息。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyMarker.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyMarker" /> 类的新实例。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.PropertyOrder">
      <summary>用于设置属性在某个类别或子属性列表中的显示顺序。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyOrder.CreateAfter(Microsoft.Windows.Design.PropertyEditing.PropertyOrder)">
      <summary>创建一个添加到指定标记之后的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyOrder" /> 对象。</summary>
      <returns>一个新的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyOrder" /> 对象。</returns>
      <param name="reference">引用标记。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reference" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyOrder.CreateBefore(Microsoft.Windows.Design.PropertyEditing.PropertyOrder)">
      <summary>创建一个添加到指定标记之前的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyOrder" /> 对象。</summary>
      <returns>一个新的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyOrder" /> 对象。</returns>
      <param name="reference">引用标记。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reference" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyOrder.Default">
      <summary>获取系统定义的默认顺序位置。</summary>
      <returns>一个表示默认顺序位置的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyOrder" /> 实例。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyOrder.Early">
      <summary>获取系统定义的靠前的顺序位置。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyOrder" /> 实例，表示系统定义的靠前的顺序位置。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyOrder.Late">
      <summary>获取系统定义的靠后的顺序位置。</summary>
      <returns>一个 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyOrder" /> 实例，表示系统定义的靠后的顺序位置。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.PropertyOrderAttribute">
      <summary>此属性附加于一个属性，以指定属性浏览器中的属性排序次序。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyOrderAttribute.#ctor(Microsoft.Windows.Design.PropertyEditing.PropertyOrder)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyOrderAttribute" /> 类的新实例。</summary>
      <param name="order">分配给属性的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyOrder" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="order" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyOrderAttribute.Order">
      <summary>获取关联的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyOrder" />。</summary>
      <returns>在属性浏览器中显示属性的优先级别。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue">
      <summary>表示属性的值。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValue.#ctor(Microsoft.Windows.Design.PropertyEditing.PropertyEntry)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 类的新实例。</summary>
      <param name="parentProperty">此属性值父级的属性项。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentProperty" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.CanConvertFromString">
      <summary>在派生类中重写时，获取一个值，该值指示 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.Value" /> 是否可从字符串进行转换。</summary>
      <returns>如果 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.Value" /> 可从字符串转换而来，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.CatchExceptions">
      <summary>获取一个值以指示如何在 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.Value" /> 和 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.StringValue" /> 属性中的 get 和 set 方法过程中处理异常。</summary>
      <returns>如果应捕获异常，则为 true；如果应将异常传播到调用方，则为 false。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValue.ClearValue">
      <summary>在派生类中重写时，删除该值，以便不进行设置。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.Collection">
      <summary>在派生类中重写时，获取对象的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueCollection" />，该对象表示 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 的值。</summary>
      <returns>对象的一个集合，表示 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 的值。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValue.ConvertStringToValue(System.String)">
      <summary>在派生类中重写时，尝试将指定的 <see cref="T:System.String" /> 转换为 <see cref="T:System.Object" />。</summary>
      <returns>表示 <paramref name="value" /> 的对象。</returns>
      <param name="value">要转换的字符串。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValue.ConvertValueToString(System.Object)">
      <summary>在派生类中重写时，尝试将指定的 <see cref="T:System.Object" /> 转换为 <see cref="T:System.String" />。</summary>
      <returns>一个表示 <paramref name="value" /> 的字符串。</returns>
      <param name="value">要转换的对象。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValue.GetValueCore">
      <summary>在派生类中重写时，返回应由 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.Value" /> 属性返回的 <see cref="T:System.Object" />。</summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.Value" /> 属性应返回的对象。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.HasSubProperties">
      <summary>在派生类中重写时，获取一个值，该值指示此属性是否支持子属性。</summary>
      <returns>如果 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 支持子属性，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.IsCollection">
      <summary>当在派生类中重写时，获取一个指示此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 是否具有集合的值。</summary>
      <returns>如果 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 属于一个集合，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.IsDefaultValue">
      <summary>在派生类中重写时，获取一个值，该值指示当前 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.Value" /> 是否为属性的默认值。</summary>
      <returns>如果 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.Value" /> 是属性的默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.IsMixedValue">
      <summary>在派生类中重写时，获取一个值，该值指示此属性值是否表示具有多个值的多个对象的属性。</summary>
      <returns>如果此值表示具有多个值的多个对象的属性，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValue.NotifyRootValueChanged">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.PropertyEditing.PropertyValue.RootValueChanged" /> 事件。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValue.NotifySubPropertyChanged">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.PropertyEditing.PropertyValue.SubPropertyChanged" /> 事件。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValue.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>用指定的 <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> 引发 <see cref="E:Microsoft.Windows.Design.PropertyEditing.PropertyValue.PropertyChanged" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValue.OnPropertyChanged(System.String)">
      <summary>使用指定的字符串引发 <see cref="E:Microsoft.Windows.Design.PropertyEditing.PropertyValue.PropertyChanged" /> 事件。</summary>
      <param name="propertyName">要更改的属性的名称。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValue.OnPropertyValueException(Microsoft.Windows.Design.PropertyEditing.PropertyValueExceptionEventArgs)">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.PropertyEditing.PropertyValue.PropertyValueException" /> 事件。</summary>
      <param name="e">事件的数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.ParentProperty">
      <summary>获取此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 的父节点。</summary>
      <returns>此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 的父级。</returns>
    </member>
    <member name="E:Microsoft.Windows.Design.PropertyEditing.PropertyValue.PropertyChanged">
      <summary>表示处理 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 的 <see cref="E:Microsoft.Windows.Design.PropertyEditing.PropertyValue.PropertyChanged" /> 事件的方法。</summary>
    </member>
    <member name="E:Microsoft.Windows.Design.PropertyEditing.PropertyValue.PropertyValueException">
      <summary>表示处理 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 的 <see cref="E:Microsoft.Windows.Design.PropertyEditing.PropertyValue.PropertyValueException" /> 事件的方法。</summary>
    </member>
    <member name="E:Microsoft.Windows.Design.PropertyEditing.PropertyValue.RootValueChanged">
      <summary>表示处理 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 的 <see cref="E:Microsoft.Windows.Design.PropertyEditing.PropertyValue.RootValueChanged" /> 事件的方法。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValue.SetValueCore(System.Object)">
      <summary>在派生类中重写时，将 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.Value" /> 属性设置为指定的 <see cref="T:System.Object" />。</summary>
      <param name="value">要设置为 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.Value" /> 属性的值的对象。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.Source">
      <summary>在派生类中重写时，获取包含有关此属性值的源的信息的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueSource" />。</summary>
      <returns>与此属性值的源有关的信息。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.StringValue">
      <summary>获取或设置此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 作为 <see cref="T:System.String" /> 的值。</summary>
      <returns>一个字符串，它包含 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 的值。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.SubProperties">
      <summary>在派生类中重写时，获取此属性值的子属性。</summary>
      <returns>子属性的集合。</returns>
    </member>
    <member name="E:Microsoft.Windows.Design.PropertyEditing.PropertyValue.SubPropertyChanged">
      <summary>表示处理 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 的 <see cref="E:Microsoft.Windows.Design.PropertyEditing.PropertyValue.SubPropertyChanged" /> 事件的方法。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValue.ValidateValue(System.Object)">
      <summary>在派生类中重写时，先检查指定的 <see cref="T:System.Object" /> 是否包含有效的值，再将 <see cref="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.Value" /> 属性设置为该值。</summary>
      <param name="valueToValidate">要检查有效值的对象。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValue.Value">
      <summary>获取或设置此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 值。</summary>
      <returns>包含此 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 值的对象。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueCollection">
      <summary>表示 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 实例的集合。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValueCollection.#ctor(Microsoft.Windows.Design.PropertyEditing.PropertyValue)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueCollection" /> 类的新实例。</summary>
      <param name="parentValue">父 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。 这将是一个其类型为集合的属性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentValue" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValueCollection.Add(System.Object)">
      <summary>在派生类中重写时，向集合中添加指定对象。</summary>
      <returns>添加的对象的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</returns>
      <param name="value">要添加到集合中的对象。</param>
    </member>
    <member name="E:Microsoft.Windows.Design.PropertyEditing.PropertyValueCollection.CollectionChanged">
      <summary>当 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueCollection" /> 更改时发生。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValueCollection.Count">
      <summary>在派生类中重写时，获取集合中的项数。</summary>
      <returns>集合中的项数。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValueCollection.GetEnumerator">
      <summary>在派生类中重写时，返回 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 对象的集合的强类型 <see cref="T:System.Collections.IEnumerator" />。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 对象的枚举。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValueCollection.Insert(System.Object,System.Int32)">
      <summary>在派生类中重写时，将指定对象插入到集合中的指定索引处。</summary>
      <returns>插入的对象的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</returns>
      <param name="value">要在集合中插入的对象。</param>
      <param name="index">要插入对象的位置的索引。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValueCollection.Item(System.Int32)">
      <summary>在派生类中重写时，获取指定索引处的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</summary>
      <returns>指定索引处的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</returns>
      <param name="index">集合中 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 的索引。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValueCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.PropertyEditing.PropertyValueCollection.CollectionChanged" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValueCollection.ParentValue">
      <summary>获取父 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</summary>
      <returns>一个表示父级的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValueCollection.Remove(Microsoft.Windows.Design.PropertyEditing.PropertyValue)">
      <summary>在派生类中重写时，从集合中移除指定的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</summary>
      <returns>如果已成功移除 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />，则为 true；否则为 false。</returns>
      <param name="propertyValue">要从集合中移除的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValueCollection.RemoveAt(System.Int32)">
      <summary>在派生类中重写时，从集合中移除指定索引处的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</summary>
      <param name="index">要移除的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 的索引。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValueCollection.SetIndex(System.Int32,System.Int32)">
      <summary>在派生类中重写时，交换集合中的对象的顺序。</summary>
      <param name="currentIndex">第一个对象的索引。</param>
      <param name="newIndex">第二个对象的索引。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValueCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>
        <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 对象的枚举。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditor">
      <summary>属性的任何和所有内联编辑器逻辑的容器。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditor.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditor.#ctor(System.Windows.DataTemplate)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditor" /> 类的新实例。</summary>
      <param name="inlineEditorTemplate">用于内联编辑器的 <see cref="T:System.Windows.DataTemplate" />。 此 <see cref="T:System.Windows.DataTemplate" /> 的 <see cref="P:System.Windows.FrameworkElement.DataContext" /> 设置为 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditor.CreateEditorAttribute(Microsoft.Windows.Design.PropertyEditing.PropertyValueEditor)">
      <summary>可为指定的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditor" /> 类型创建新 <see cref="T:System.ComponentModel.EditorAttribute" /> 的实用工具方法。</summary>
      <returns>指定的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditor" /> 类型的新 <see cref="T:System.ComponentModel.EditorAttribute" />。</returns>
      <param name="editor">
        <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditor" /> 实例，将为其创建新 <see cref="T:System.ComponentModel.EditorAttribute" />。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditor.CreateEditorAttribute(System.Type)">
      <summary>可为指定的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditor" /> 类型创建新 <see cref="T:System.ComponentModel.EditorAttribute" /> 的实用工具方法。</summary>
      <returns>指定的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditor" /> 类型的新 <see cref="T:System.ComponentModel.EditorAttribute" />。</returns>
      <param name="propertyValueEditorType">
        <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditor" /> 类型，将为其创建新 <see cref="T:System.ComponentModel.EditorAttribute" />。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditor.InlineEditorTemplate">
      <summary>获取或设置用于内联编辑器的 <see cref="T:System.Windows.DataTemplate" />。</summary>
      <returns>一个定义内联编辑器的 <see cref="T:System.Windows.DataTemplate" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditorCommands">
      <summary>提供一些标准命令，这些命令在用户编辑属性时控制属性窗口的行为。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditorCommands.AbortTransaction">
      <summary>获取一个 <see cref="T:System.Windows.Input.RoutedCommand" /> 对象，该对象表示一个要取消与属性编辑关联的新事务的请求。</summary>
      <returns>一个要取消与属性编辑关联的新事务的请求。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditorCommands.BeginTransaction">
      <summary>获取一个 <see cref="T:System.Windows.Input.RoutedCommand" /> 对象，该对象表示一个要开始与属性编辑关联的新事务的请求。</summary>
      <returns>一个要开始与属性编辑关联的新事务的请求。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditorCommands.CommitTransaction">
      <summary>获取一个 <see cref="T:System.Windows.Input.RoutedCommand" /> 对象，该对象表示一个要提交与属性编辑关联的新事务的请求。</summary>
      <returns>一个要提交与属性编辑关联的新事务的请求。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditorCommands.FinishEditing">
      <summary>获取一个 <see cref="T:System.Windows.Input.RoutedCommand" /> 对象，该对象表示一个发送给主机的通知，指示已完成属性编辑。</summary>
      <returns>一个发送给主机的通知，指示已完成属性编辑。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditorCommands.ShowContextMenu">
      <summary>获取一个 <see cref="T:System.Windows.Input.RoutedCommand" /> 对象，该对象表示一个要在 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainer" /> 中显示的上下文菜单的请求。</summary>
      <returns>一个要在 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyContainer" /> 中显示上下文菜单的请求。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditorCommands.ShowDialogEditor">
      <summary>获取一个 <see cref="T:System.Windows.Input.RoutedCommand" /> 对象，该对象表示一个要为属性显示对话框编辑器的请求。</summary>
      <returns>一个要为属性显示对话框编辑器的请求。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditorCommands.ShowErrorMessage">
      <summary>获取一个 <see cref="T:System.Windows.Input.RoutedCommand" /> 对象，该对象表示一个要显示验证错误消息的请求。</summary>
      <returns>一个要显示验证错误消息的请求。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditorCommands.ShowExtendedPinnedEditor">
      <summary>获取一个 <see cref="T:System.Windows.Input.RoutedCommand" /> 对象，该对象表示一个要为属性显示固定编辑器的请求。</summary>
      <returns>一个要为属性显示固定编辑器的请求。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditorCommands.ShowExtendedPopupEditor">
      <summary>获取一个 <see cref="T:System.Windows.Input.RoutedCommand" /> 对象，该对象表示一个要为属性显示扩展编辑器的请求。</summary>
      <returns>一个要为属性显示扩展编辑器的请求。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValueEditorCommands.ShowInlineEditor">
      <summary>获取一个 <see cref="T:System.Windows.Input.RoutedCommand" /> 对象，该对象表示一个要为属性显示内联编辑器的请求。</summary>
      <returns>一个要为属性显示内联编辑器的请求。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueExceptionEventArgs">
      <summary>为 <see cref="E:Microsoft.Windows.Design.PropertyEditing.PropertyValue.PropertyValueException" /> 事件提供数据。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValueExceptionEventArgs.#ctor(System.String,Microsoft.Windows.Design.PropertyEditing.PropertyValue,Microsoft.Windows.Design.PropertyEditing.PropertyValueExceptionSource,System.Exception)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueExceptionEventArgs" /> 类的新实例。</summary>
      <param name="message">指示发生错误的消息。</param>
      <param name="value">引起异常的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</param>
      <param name="source">产生此异常的源（取得或设置）。</param>
      <param name="exception">内部异常。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValueExceptionEventArgs.Exception">
      <summary>获取包含的异常。</summary>
      <returns>作为包含的异常的 <see cref="T:System.Exception" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValueExceptionEventArgs.Message">
      <summary>获取指示发生错误的消息。</summary>
      <returns>指示发生了什么错误的消息。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValueExceptionEventArgs.PropertyValue">
      <summary>获取出现异常的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</summary>
      <returns>出现异常的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" />。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.PropertyEditing.PropertyValueExceptionEventArgs.Source">
      <summary>获取产生异常的源。</summary>
      <returns>生成异常的 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueExceptionSource" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueExceptionSource">
      <summary>指示由 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValue" /> 实例引发异常源。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.PropertyEditing.PropertyValueExceptionSource.Get">
      <summary>指示在获取操作期间发生了异常。</summary>
    </member>
    <member name="F:Microsoft.Windows.Design.PropertyEditing.PropertyValueExceptionSource.Set">
      <summary>指示在设置操作期间发生了异常。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueSource">
      <summary>表示属性值的源。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.PropertyEditing.PropertyValueSource.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.PropertyEditing.PropertyValueSource" /> 类的新实例。</summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.AdapterService">
      <summary>为指定的项提供适配器。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.AdapterService.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Services.AdapterService" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.AdapterService.GetAdapter``1(System.Type)">
      <summary>为指定的项返回指定的适配器类型的适配器。</summary>
      <returns>
        <paramref name="itemType" /> 的 <paramref name="TAdapterType" /> 类型的 <see cref="T:Microsoft.Windows.Design.Interaction.Adapter" />。</returns>
      <param name="itemType">要为其获取适配器的项。</param>
      <typeparam name="TAdapterType">适配器的类型。</typeparam>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.AdapterService.GetAdapter(System.Type,System.Type)">
      <summary>为指定的项返回指定的适配器类型的适配器。</summary>
      <returns>
        <paramref name="itemType" /> 的 <paramref name="adapterType" /> 类型的 <see cref="T:Microsoft.Windows.Design.Interaction.Adapter" />。</returns>
      <param name="adapterType">要返回的适配器的类型。</param>
      <param name="itemType">要为其获取适配器的项。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.BinaryResource">
      <summary>表示信息的二进制流，如位图。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.BinaryResource.#ctor">
      <summary>在派生类中重写时，初始化 <see cref="T:Microsoft.Windows.Design.Services.BinaryResource" /> 类的新实例。</summary>
    </member>
    <member name="E:Microsoft.Windows.Design.Services.BinaryResource.Changed">
      <summary>在派生类中重写时，当流的内容更改时发生。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.BinaryResource.FileUri">
      <summary>获取流的本地文件路径。</summary>
      <returns>一个 <see cref="T:System.Uri" />，表示流的本地文件路径；如果流无法作为本地文件引用，则为 null。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.BinaryResource.IsResourceValid">
      <summary>获取一个值，该值指示打开此资源是否为有效操作。</summary>
      <returns>如果打开此资源是有效操作，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.BinaryResource.OpenStream(System.IO.FileAccess)">
      <summary>当在派生类中重写时，打开资源上的流。</summary>
      <returns>资源上的 <see cref="T:System.IO.Stream" />。</returns>
      <param name="access">打开资源时要使用的 <see cref="T:System.IO.FileAccess" />。 例如，<see cref="F:System.IO.FileAccess.Read" /> 或 <see cref="F:System.IO.FileAccess.Write" />。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.BinaryResource.StreamUri">
      <summary>当在派生类中重写时，获取一个表示资源的 URI 的值。</summary>
      <returns>资源的 URI。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.ContextMenuService">
      <summary>用于定位上下文菜单上要显示的项的服务。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ContextMenuService.GetItems">
      <summary>获取一个菜单项列表。</summary>
      <returns>当前适用的菜单项的枚举。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.EventBindingService">
      <summary>定义用于为当前编辑上下文创建、移除、显示和查询事件处理类的内容的方法。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.EventBindingService.#ctor">
      <summary>在派生类中重写时，将初始化 <see cref="T:Microsoft.Windows.Design.Services.EventBindingService" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.EventBindingService.AddEventHandler(Microsoft.Windows.Design.Model.ModelEvent,System.String)">
      <summary>在派生类中重写时，请求声明指定的方法以处理指定事件。</summary>
      <returns>如果可以在代码隐藏文件中成功声明方法以处理给定事件，则为 true；否则为 false。</returns>
      <param name="modelEvent">要处理的事件。</param>
      <param name="methodName">要声明的方法。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.EventBindingService.AllowClassNameForMethodName">
      <summary>在派生类中重写时，确定在某种语言中创建唯一的方法名称时是否可以使用类名。</summary>
      <returns>如果在某种语言中创建唯一的方法名称时可以使用类名，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.EventBindingService.AppendStatements(Microsoft.Windows.Design.Model.ModelEvent,System.String,System.CodeDom.CodeStatementCollection)">
      <summary>将 <see cref="T:System.CodeDom.CodeStatement" /> 对象的指定集合追加到指定的事件处理程序。</summary>
      <param name="modelEvent">其处理程序将添加语句的事件定义。</param>
      <param name="methodName">事件处理程序的方法名称。</param>
      <param name="statements">要追加的 <see cref="T:System.CodeDom.CodeStatement" /> 对象的集合。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.EventBindingService.CreateMethod(Microsoft.Windows.Design.Model.ModelEvent,System.String)">
      <summary>在派生类中重写时，创建处理事件的方法。</summary>
      <returns>如果方法成功创建，则为 true；否则为 false。</returns>
      <param name="modelEvent">
        <paramref name="methodName" /> 处理的事件。</param>
      <param name="methodName">要创建的方法。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.EventBindingService.CreateUniqueMethodName(Microsoft.Windows.Design.Model.ModelEvent)">
      <summary>在派生类中重写时，返回事件处理程序的唯一方法名称。</summary>
      <returns>唯一的事件处理程序名称。 例如，Button1_Click 或 Button1_Click_1。</returns>
      <param name="modelEvent">要为其创建唯一的事件处理程序名称的事件。</param>
    </member>
    <member name="E:Microsoft.Windows.Design.Services.EventBindingService.EventHandlerGenerated">
      <summary>由于对 <see cref="M:Microsoft.Windows.Design.Services.EventBindingService.AddEventHandler(Microsoft.Windows.Design.Model.ModelEvent,System.String)" /> 方法的调用而使某方法与 <see cref="T:Microsoft.Windows.Design.Model.ModelEvent" /> 关联时发生。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.EventBindingService.GetCompatibleMethods(Microsoft.Windows.Design.Model.ModelEvent)">
      <summary>在派生类中重写时，返回与指定事件兼容的方法的名称。</summary>
      <returns>与 <paramref name="modelEvent" /> 兼容的方法的名称。</returns>
      <param name="modelEvent">与方法兼容的事件。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.EventBindingService.GetMethodHandlers(Microsoft.Windows.Design.Model.ModelEvent)">
      <summary>在派生类中重写时，列表返回处理指定事件的方法。</summary>
      <returns>处理 <paramref name="modelEvent" /> 的方法的列表。</returns>
      <param name="modelEvent">所处理的事件。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.EventBindingService.IsExistingMethodName(Microsoft.Windows.Design.Model.ModelEvent,System.String)">
      <summary>在派生类中重写时，确定处理指定事件的方法的名称是否已经存在。</summary>
      <returns>如果处理 <paramref name="modelEvent" /> 的方法的名称已经存在，则为 true；否则为 false。</returns>
      <param name="modelEvent">
        <paramref name="methodName" /> 处理的事件。</param>
      <param name="methodName">要检查的方法的名称。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.EventBindingService.OnEventHandlerGenerated(Microsoft.Windows.Design.Model.ModelEvent,System.String)">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.Services.EventBindingService.EventHandlerGenerated" /> 事件。</summary>
      <param name="modelEvent">与 <paramref name="methodName" /> 关联的 <see cref="T:Microsoft.Windows.Design.Model.ModelEvent" /> 实例。</param>
      <param name="methodName">与 <paramref name="modelEvent" /> 关联的方法处理程序。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.EventBindingService.RemoveHandle(Microsoft.Windows.Design.Model.ModelEvent,System.String)">
      <summary>在派生类中重写时，通过从 Handles 子句中移除特定事件来请求特定方法停止处理该事件。</summary>
      <returns>如果事件可以从代码隐藏文件内的方法声明中成功移除，则为 true；否则为 false。</returns>
      <param name="modelEvent">使 <paramref name="methodName" /> 停止处理的事件。</param>
      <param name="methodName">停止处理 <paramref name="modelEvent" /> 的方法。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.EventBindingService.RemoveHandlesForName(System.String)">
      <summary>移除指定元素的事件处理程序。</summary>
      <returns>如果移除了事件处理程序，则为 true；否则为 false。</returns>
      <param name="elementName">要从中移除事件处理程序的元素。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.EventBindingService.RemoveMethod(Microsoft.Windows.Design.Model.ModelEvent,System.String)">
      <summary>在派生类中重写时，通过从事件处理类中移除特定事件来请求特定方法停止处理该事件。</summary>
      <returns>如果 <paramref name="methodName" /> 从事件处理类中成功移除，则为 true；否则为 false。</returns>
      <param name="modelEvent">要停止处理的事件。</param>
      <param name="methodName">停止处理 <paramref name="modelEvent" /> 的方法。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.EventBindingService.SetClassName(System.String)">
      <summary>在派生类中重写时，标识绑定服务认为属于指定类的方法。</summary>
      <param name="className">这些方法所属的类的名称。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.EventBindingService.ShowMethod(Microsoft.Windows.Design.Model.ModelEvent,System.String)">
      <summary>在派生类中重写时，尝试向用户显示指定方法。</summary>
      <returns>如果方法成功地向用户显示，则为 true；否则为 false。</returns>
      <param name="modelEvent">
        <paramref name="methodName" /> 处理的事件。</param>
      <param name="methodName">要显示的方法。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.EventBindingService.ValidateMethodName(Microsoft.Windows.Design.Model.ModelEvent,System.String)">
      <summary>在派生类中重写时，确定方法名称是否为有效的方法名称，如果不是，则引发异常。</summary>
      <param name="modelEvent">
        <paramref name="methodName" /> 处理的事件。</param>
      <param name="methodName">要检查的方法的名称。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.EventHandlerGeneratedEventArgs">
      <summary>为 <see cref="E:Microsoft.Windows.Design.Services.EventBindingService.EventHandlerGenerated" /> 事件提供数据。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.EventHandlerGeneratedEventArgs.#ctor(Microsoft.Windows.Design.Model.ModelEvent,System.String)">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Services.EventHandlerGeneratedEventArgs" /> 类的新实例。</summary>
      <param name="modelEvent">接收到新的事件处理程序的 <see cref="T:Microsoft.Windows.Design.Model.ModelEvent" />。</param>
      <param name="methodName">与 <paramref name="modelEvent" /> 关联的事件处理程序。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.EventHandlerGeneratedEventArgs.MethodName">
      <summary>获取与 <see cref="T:Microsoft.Windows.Design.Model.ModelEvent" /> 关联的事件处理程序。</summary>
      <returns>事件处理程序方法的名称。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.EventHandlerGeneratedEventArgs.ModelEvent">
      <summary>获取接收到新的事件处理程序的 <see cref="T:Microsoft.Windows.Design.Model.ModelEvent" />。</summary>
      <returns>接收到新的事件处理程序的 <see cref="T:Microsoft.Windows.Design.Model.ModelEvent" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.ExternalMarkupService">
      <summary>定义用来将模型项转换为标记文本和将标记文本分析为模型项的方法。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ExternalMarkupService.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Services.ExternalMarkupService" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ExternalMarkupService.Load(System.String,System.Collections.Generic.IEnumerable{System.Reflection.AssemblyName})">
      <summary>当在派生类中重写时，分析指定的标记文本并返回一个表示该文本的模型项。</summary>
      <returns>一个表示该标记的模型项。</returns>
      <param name="markup">一个具有正确格式的 XML 文档。</param>
      <param name="additionalReferences">在分析 <paramref name="markup" /> 时要使用的程序集名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="markup" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ExternalMarkupService.Save(Microsoft.Windows.Design.Model.ModelItem,System.Collections.Generic.IEnumerable{System.Reflection.AssemblyName}@)">
      <summary>当在派生类中重写时，将指定的模型项序列化为表示该模型项的具有正确格式的标记文本。</summary>
      <returns>表示该模型项的标记文本。</returns>
      <param name="root">表示该文档的根的模型项。</param>
      <param name="requiredAssemblies">此子树所需的程序集引用。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="root" /> 为 null。</exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.ExternalResourceService">
      <summary>提供对标记文件外部的资源的访问。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ExternalResourceService.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Services.ExternalResourceService" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.ExternalResourceService.ApplicationModel">
      <summary>当在派生类中重写时，获取应用程序模型。</summary>
      <returns>应用程序模型，或者为 null（如果对于此上下文没有应用程序模型）。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ExternalResourceService.GetBinaryResource(System.Uri)">
      <summary>当在派生类中重写时，获取项目系统中的指定 URI，将其内容作为二进制 blob 返回。</summary>
      <returns>
        <paramref name="uri" /> 指定的资源。</returns>
      <param name="uri">要为其获取资源的 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ExternalResourceService.GetModelResource(System.Uri)">
      <summary>当在派生类中重写时，获取项目系统中的指定 URI，将其加载，并返回一个表示根的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</summary>
      <returns>
        <paramref name="uri" /> 指定的模型资源。</returns>
      <param name="uri">要为其获取资源的 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> 为 null。</exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.ExternalResourceService.ResourceUris">
      <summary>在派生类中重写时，获取 URI 值的枚举，可作为资源加载。</summary>
      <returns>URI 值的枚举。</returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ExternalResourceService.TranslateStreamUri(System.Uri)">
      <summary>在派生类中重写时，将本地 URI 转换回它的原始 URI。</summary>
      <returns>与 <paramref name="streamUri" /> 对应的 URI。</returns>
      <param name="streamUri">要转换的 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="streamUri" /> 为 null。</exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.ICodeInjectionService">
      <summary>在用户的 XAML 文件的隐藏代码中创建一个方法，并允许在该方法中追加语句。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ICodeInjectionService.AppendStatements(System.CodeDom.CodeMemberMethod,System.CodeDom.CodeStatementCollection,System.Int32)">
      <summary>将 CodeDOM 语句的集合追加到指定的事件处理程序中。</summary>
      <param name="method">要搜索的方法定义（以便向其中追加语句）。</param>
      <param name="statements">要追加到方法的末尾的 CodeDOM 语句的列表。</param>
      <param name="relativePosition">要插入语句的行号。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ICodeInjectionService.CreateMethod(System.CodeDom.CodeMemberMethod)">
      <summary>使用指定的签名创建方法。</summary>
      <returns>如果已创建方法，则该值为 true；否则该值为 false。</returns>
      <param name="method">一个指定签名的 <see cref="T:System.CodeDom.CodeMemberMethod" />。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.ModelChangedEventArgs">
      <summary>为 <see cref="E:Microsoft.Windows.Design.Services.ModelService.ModelChanged" /> 事件提供数据。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelChangedEventArgs.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Services.ModelChangedEventArgs" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.ModelChangedEventArgs.ItemsAdded">
      <summary>获取已添加到编辑模型的对象的枚举。</summary>
      <returns>已添加到编辑模型的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 对象的枚举。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.ModelChangedEventArgs.ItemsRemoved">
      <summary>获取已从编辑模型中移除的对象的枚举。</summary>
      <returns>已从编辑模型中移除的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 对象的枚举。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.ModelChangedEventArgs.PropertiesChanged">
      <summary>获取已在编辑模型中发生更改的属性的枚举。</summary>
      <returns>表示已在编辑模型中更改的属性的 <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" /> 对象的枚举。</returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.ModelChangedEventArgs.PropertyNamesChanged">
      <summary>获取已在编辑模型中发生更改的属性名称的枚举。</summary>
      <returns>表示已更改属性的名称的 <see cref="T:System.String" /> 对象的枚举。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.ModelResource">
      <summary>表示包含模型项的外部资源。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelResource.#ctor">
      <summary>在派生类中重写时，将初始化 <see cref="T:Microsoft.Windows.Design.Services.ModelResource" /> 类的新实例。</summary>
    </member>
    <member name="E:Microsoft.Windows.Design.Services.ModelResource.Changed">
      <summary>在派生类中重写时，当模型项更改时发生。</summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.ModelResource.ModelItem">
      <summary>当在派生类中重写时，获取一个表示资源的模型项的值。</summary>
      <returns>外部资源的模型项目。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.ModelService">
      <summary>提供设计器用来获取编辑模型的主入口点。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelService.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Services.ModelService" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelService.ConvertItem(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>将在另一个设计器中创建的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 转换为在此设计器使用的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</summary>
      <returns>与此设计器关联的已转换项。</returns>
      <param name="item">要转换的项。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelService.CreateItem(System.Object)">
      <summary>在派生类中重写时，创建一个属于指定实例的深层副本的模型项。</summary>
      <returns>一个新的模型项，它是现有项的克隆。</returns>
      <param name="item">要包装的项。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelService.CreateItem(System.Type,Microsoft.Windows.Design.Model.CreateOptions,System.Object[])">
      <summary>在派生类中重写时，为指定的类型创建 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> 对象。</summary>
      <returns>一个新创建的模型项。</returns>
      <param name="itemType">要创建的项类型。</param>
      <param name="options">创建选项。 可以指定是否对某个项初始化默认值。</param>
      <param name="arguments">要传递到该项的构造函数的参数数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="itemType" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)">
      <summary>在派生类中重写时，创建一个表示指定类的静态成员的值的新模型项。</summary>
      <returns>一个表示 <paramref name="type" /> 的静态成员的新建模型项。</returns>
      <param name="type">包含所引用的静态成员的类型。</param>
      <param name="memberName">所引用的静态成员的名称。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelService.Find(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Metadata.TypeIdentifier)">
      <summary>在派生类中重写时，为指定的起点查找匹配的模型项。</summary>
      <returns>与查询匹配的模型项的枚举。</returns>
      <param name="startingItem">要从其开始搜索的模型项。 层次结构中位于此项上面的项将被忽略。 此项以及层次结构中位于此项下面的任何项都将包括在搜索中。 如果此参数为 null，则使用根。</param>
      <param name="typeIdentifier">要查找的对象类型的标识符。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelService.Find(Microsoft.Windows.Design.Model.ModelItem,System.Predicate{System.Type})">
      <summary>在派生类中重写时，为指定的起点查找匹配的模型项。</summary>
      <returns>与查询匹配的模型项的枚举。</returns>
      <param name="startingItem">要从其开始搜索的模型项。 此项上面的项将被忽略。 此项以及层次结构中位于此项下面的任何项都将包括在搜索中。 如果此参数为 null，则使用根。</param>
      <param name="match">一个允许使用更复杂的类型匹配的谓词。 例如，该谓词对于 <see cref="T:System.Windows.FrameworkElement" /> 和 <see cref="T:System.Windows.FrameworkContentElement" /> 类型均会返回 true。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelService.Find(Microsoft.Windows.Design.Model.ModelItem,System.Type)">
      <summary>在派生类中重写时，为指定的起点查找匹配的模型项。</summary>
      <returns>与查询匹配的模型项的枚举。</returns>
      <param name="startingItem">要从其开始搜索的模型项。 此项上面的项将被忽略。 此项以及层次结构中位于此项下面的任何项都将包括在搜索中。 如果此参数为 null，则使用根。</param>
      <param name="type">要查找的对象的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelService.FromName(Microsoft.Windows.Design.Model.ModelItem,System.String)">
      <summary>使用指定的名称在指定范围内查找模型项。</summary>
      <returns>其名称与 <paramref name="name" /> 匹配的模型项；如果未找到匹配项，则为 null。</returns>
      <param name="scope">要搜索的可选范围。</param>
      <param name="name">要定位的项的名称。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelService.FromName(Microsoft.Windows.Design.Model.ModelItem,System.String,System.StringComparison)">
      <summary>在派生类中重写时，使用指定的名称和比较条件在指定范围内查找模型项。</summary>
      <returns>其名称与 <paramref name="name" /> 匹配的模型项；如果未找到匹配项，则为 null。</returns>
      <param name="scope">要搜索的可选范围。</param>
      <param name="name">要定位的项的名称。</param>
      <param name="comparison">指定如何比较名称。 默认为与 <see cref="P:System.StringComparer.Ordinal" /> 属性进行比较。</param>
    </member>
    <member name="E:Microsoft.Windows.Design.Services.ModelService.ModelChanged">
      <summary>在派生类中重写时，当模型中的某个项已更改时发生。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelService.ResolveType(Microsoft.Windows.Design.Metadata.TypeIdentifier)">
      <summary>将指定的 <see cref="T:System.Type" /> 解析为 <see cref="T:Microsoft.Windows.Design.Metadata.TypeIdentifier" />。</summary>
      <returns>与指定的标识符相匹配的类型；如果无法解析该标识符，则为 null。</returns>
      <param name="typeIdentifier">要解析的标识符。</param>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.ModelService.Root">
      <summary>在派生类中重写时，获取对象层次结构的根。</summary>
      <returns>表示编辑模型树的根的 <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />。</returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.ValueTranslationService">
      <summary>提供一种机制，用于捕获用户在设计器中进行的属性更改并在设计时提供新值。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ValueTranslationService.#ctor">
      <summary>在派生类中重写时，将初始化 <see cref="T:Microsoft.Windows.Design.Services.ValueTranslationService" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ValueTranslationService.GetProperties(System.Type)">
      <summary>在派生类中重写时，返回一个包含要针对指定的类型进行转换的属性的枚举。</summary>
      <returns>一个包含要针对指定的类型进行转换的属性（如果有）的枚举。</returns>
      <param name="itemType">要针对其转换属性的类型。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ValueTranslationService.HasValueTranslation(System.Type,Microsoft.Windows.Design.Metadata.PropertyIdentifier)">
      <summary>确定是否应针对指定的类型转换指定的属性。</summary>
      <returns>如果指定的属性应针对指定的类型进行转换，则该值为 true；否则该值为 false。</returns>
      <param name="itemType">在确定是否应转换 <paramref name="property" /> 时所针对的类型。</param>
      <param name="identifier">要检查的属性的标识符。</param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ValueTranslationService.InvalidateProperty(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Metadata.PropertyIdentifier)">
      <summary>引发 <see cref="E:Microsoft.Windows.Design.Services.ValueTranslationService.PropertyInvalidated" /> 事件以指示指定的属性无效。</summary>
      <param name="item">包含无效属性的项。</param>
      <param name="identifier">无效属性。</param>
    </member>
    <member name="E:Microsoft.Windows.Design.Services.ValueTranslationService.PropertyInvalidated">
      <summary>在某个属性因依赖项属性中的更改而需要使之失效时发生。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ValueTranslationService.TranslatePropertyValue(System.Type,Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Metadata.PropertyIdentifier,System.Object)">
      <summary>调用自定义逻辑以针对指定的类型和实例转换指定的属性，并指定要转换的值。</summary>
      <returns>已转换的值。</returns>
      <param name="itemType">用户在设计器中设置属性值所针对的类型。</param>
      <param name="item">包含要转换的属性的项。</param>
      <param name="identifier">要转换的属性。</param>
      <param name="value">用户在设计器中设置的值。</param>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.ViewService">
      <summary>关联可视对象和编辑模型项。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ViewService.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Windows.Design.Services.ViewService" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ViewService.GetModel(Microsoft.Windows.Design.Interaction.ViewItem)">
      <summary>在派生类中重写时，获取与指定视图相对应的模型。</summary>
      <returns>与指定视图相对应的模型；如果未找到模型，则为 null。</returns>
      <param name="view">要为其获取模型的视图。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="view" /> 为 null。</exception>
    </member>
    <member name="E:Microsoft.Windows.Design.Services.ViewService.LayoutUpdated">
      <summary>在派生类中重写时，当视图的布局已更改时发生。</summary>
    </member>
  </members>
</doc>