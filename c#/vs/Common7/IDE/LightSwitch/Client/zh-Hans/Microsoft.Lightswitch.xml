<?xml version="1.0" encoding="utf-8"?>
<doc><assembly>
    <name>Microsoft.LightSwitch</name>
  </assembly><members>
    <member name="T:Microsoft.LightSwitch.BaseServices.Notifications.INotificationService">
      <summary>
            表示发布和订阅通知的服务。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.BaseServices.Notifications.INotificationService.Publish(Microsoft.LightSwitch.BaseServices.Notifications.Notification)">
      <summary>
            向一个通知的所有订阅者发送该通知。
            </summary> <param name="notification">要发布的通知。</param>
    </member>
    <member name="M:Microsoft.LightSwitch.BaseServices.Notifications.INotificationService.Subscribe(System.Type,Microsoft.LightSwitch.BaseServices.Notifications.NotificationHandler)">
      <summary>
            为指定通知注册处理程序。
            </summary> <param name="notificationType">正在订阅的通知的类型。</param><param name="handler">发布此通知时要调用的处理程序。</param>
    </member>
    <member name="M:Microsoft.LightSwitch.BaseServices.Notifications.INotificationService.Unsubscribe(System.Type,Microsoft.LightSwitch.BaseServices.Notifications.NotificationHandler)">
      <summary>
            为指定通知取消注册处理程序。
            </summary> <param name="notificationType">正在取消订阅的通知的类型。</param><param name="handler">与通知类型相关联的处理程序。</param>
    </member>
    <member name="T:Microsoft.LightSwitch.BaseServices.Notifications.Notification">
      <summary>
             这是所有通知类型从其派生的抽象基类。
            </summary>
    </member>
    <member name="T:Microsoft.LightSwitch.BaseServices.Notifications.NotificationHandler">
      <summary>
             这是在发布通知时调用的由订阅者提供的委托。
            </summary>
    </member>
    <member name="T:Microsoft.LightSwitch.BaseServices.ResourceService.IResourceService">
      <summary>
            表示用于为 LightSwitch 应用程序查找资源的全局服务。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.BaseServices.ResourceService.IResourceService.GetResource(System.String,System.Globalization.CultureInfo)">
      <summary>
            使用全局标识符检索资源。
            </summary> <param name="globalResourceId">资源的标识符</param> <param name="cultureInfo">资源的区域性</param>
      <remarks>
            globalResourceId 的格式是 ResourceProviderId::ResourceId。某些示例：RESX::Microsoft.LightSwitch.Client.Resources:SaveCommandIcon SERVER::example.jpg Contoso.Controls.Icons::TextBoxControlImage ResourceId *不是* Uri，而是由提供程序解释的键。
            </remarks>
    </member>
    <member name="T:Microsoft.LightSwitch.BaseServices.ErrorHandler.IErrorContext">
      <summary>
            所有 ErrorContexts 的基接口，用于将特定于调用站点的信息传递给错误处理程序服务。
            </summary>
    </member>
    <member name="T:Microsoft.LightSwitch.BaseServices.ErrorHandler.IErrorHandlerService">
      <summary>
            提供一个可查找并调用错误处理程序的服务。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.BaseServices.ErrorHandler.IErrorHandlerService.TryHandle(System.Exception,Microsoft.LightSwitch.BaseServices.ErrorHandler.IErrorContext)">
      <summary>
            尝试处理错误并返回该错误是否已得到处理的信息。
            </summary> <param name="exception">要处理的错误。</param><param name="context">错误的特定于调用站点的上下文。</param><returns>如果错误已被处理，则为 true，否则为 false。</returns>
    </member>
    <member name="M:Microsoft.LightSwitch.BaseServices.ErrorHandler.IErrorHandlerService.Handle(System.Exception,Microsoft.LightSwitch.BaseServices.ErrorHandler.IErrorContext)">
      <summary>
            尝试处理错误，并在处理失败时重新引发异常。
            </summary> <param name="exception">要处理的错误。</param><param name="context">错误的特定于调用站点的上下文。</param>
    </member>
    <member name="T:Microsoft.LightSwitch.Model.INamedItem">
      <summary>
            为所有命名项提供基接口。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.INamedItem.Name">
      <summary>
            获取项名。
            </summary>
    </member>
    <member name="T:Microsoft.LightSwitch.Model.IGlobalItem">
      <summary>
            表示 LightSwitch 应用程序模型片段内的全局（顶层）模型项。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IGlobalItem.Module">
      <summary>
            返回此全局项的源模块。
            </summary>
    </member>
    <member name="T:Microsoft.LightSwitch.Model.IMethodDefinition">
      <summary>
            表示 LighSwitch 应用程序模型中的方法。
            </summary>
    </member>
    <member name="T:Microsoft.LightSwitch.Model.IContentItemDefinition">
      <summary>
            表示屏幕的可视化内容树中的内容项。
            </summary>
      <remarks>
            内容项是屏幕的可视化效果的最小单位。
            </remarks>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IContentItemDefinition.DataSource">
      <summary>
            获取主要数据值的源。
            </summary>
      <remarks>
            这可以是一个常量值，也可以是屏幕属性中的数据绑定。
            </remarks>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IContentItemDefinition.ChoicesSource">
      <summary>
            获取内容项绑定到的数据的可能值的源。
            </summary>
      <remarks>
            此属性仅对表示选择器控件的内容项有效。
            </remarks>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IContentItemDefinition.PropertySources">
      <summary>
            获取内容项属性源以初始化此内容项上的属性。
            </summary>
      <remarks>
            使用 PropertySources，将能够通过将控件属性初始化为特定值或将它们绑定到屏幕数据中的项来自定义内容项。
            </remarks>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IContentItemDefinition.CommandItems">
      <summary>
            获取此内容项的命令内容项（如果存在）。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IContentItemDefinition.IsHidden">
      <summary>
            获取可见性状态。
            </summary>
      <remarks>
            此属性指示内容项是否隐藏。如果设置为 true，则运行时中不显示内容项。
            </remarks>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IContentItemDefinition.Kind">
      <summary>
            获取指示内容项的类型的值。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IContentItemDefinition.DataType">
      <summary>
            获取此内容项上的主输入的数据类型。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IContentItemDefinition.View">
      <summary>
            获取要用于此内容项的视图。
            </summary>
      <remarks>
            如果这为 null，则内容项将根据所绑定到的数据的数据类型使用默认视图。
            </remarks>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IContentItemDefinition.Placement">
      <summary>
            获取已放入内容项的占位符。
            </summary>
      <remarks>
            此属性仅对使用智能布局控件的内容项有效。
            </remarks>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IContentItemDefinition.ChildContentItems">
      <summary>
            返回子内容项。
            </summary>
      <remarks>
            并非所有 ContentItemDefinitions 在语义上都可以具有子级。在表示集合的内容项中，子项表示要用于在运行时创建子级的模板。
            </remarks>
    </member>
    <member name="T:Microsoft.LightSwitch.Model.IPresentationViewDefinition">
      <summary>
            表示能够可视化内容项的控件的定义。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IPresentationViewDefinition.IsHidden">
      <summary>
            获取一个值，该值指示是否应在开发环境中隐藏此视图。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IPresentationViewDefinition.DesignerImageResource">
      <summary>
            获取可用于获取表示此控件的设计器图像的资源 ID。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IPresentationViewDefinition.CommandItemsSupport">
      <summary>
            获取一个值，该值指示一个视图是否支持命令项，以及哪些对象负责在 UI 中呈现它们。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IPresentationViewDefinition.ChildDescriptionInDesigner">
      <summary>
            指定在设计器中针对此视图的子级显示的可选说明。例如，行控件下的子级标记为“行”。
            </summary>
      <remarks>
            此属性的值已本地化。
            </remarks>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IPresentationViewDefinition.ParentView">
      <summary>
            返回此控件要求的父视图。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IPresentationViewDefinition.DefaultChildView">
      <summary>
            重写任何子级的默认呈现方式。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IPresentationViewDefinition.ChildView">
      <summary>
            返回此视图支持的子项的唯一类型。
            </summary>
      <remarks>
            此属性最常用于集合控件，其中，子项是项模板。
            </remarks>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IPresentationViewDefinition.CommandChildView">
      <summary>
            返回显示属于此视图的命令时应使用的视图类型。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IPresentationViewDefinition.SupportsErrorState">
      <summary>
            返回一个值，该值指示视图是否管理其自己的错误状态。
            </summary>
      <remarks>
            如果此属性为 false，LightSwitch 运行时将自动在此视图定义中描述的控件中添加错误标志符号。如果为 true，该控件将需要处理自身显示的错误标志符号。
            </remarks>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IPresentationViewDefinition.ContainerAttachedLabelSupport">
      <summary>
            获取一个值，该值指示在其子级上使用附加标签所需要的支持级别。
            </summary>
      <remarks>
            此属性仅对组控件有效。
            </remarks>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IPresentationViewDefinition.AttachedLabelSupport">
      <summary>
            获取一个值，该值指示控件是否支持附加标签。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Model.IPresentationViewDefinition.IsViewer">
      <summary>
            指定此视图是查看器控件（如标签、DateViewer 等）还是可编辑的控件（如 TextBox、DatePicker 等）。只应对从不允许编辑的控件将 IsViewer 设置为 true。所有编辑器控件（TextBox、AutoCompleteBox 等）都可处理可编辑或只读的数据，因此，对于它们，IsViewer 应为 False。
            </summary>
    </member>
    <member name="T:Microsoft.LightSwitch.Model.IModelItemResolver">
      <summary>
            表示可用于搜索和检索应用程序模型项的服务。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.Model.IModelItemResolver.LookupItem``1(System.String)">
      <summary>
            使用特定 ID 搜索模型项。
            </summary> <typeparam name="T">正在查找的项的类型。</typeparam><param name="id">要查找的 ID。</param><returns>与特定 ID 相关联的项。</returns><exception cref="T:System.Collections.Generic.KeyNotFoundException">具有特定 ID 的模型项不存在。</exception>
    </member>
    <member name="M:Microsoft.LightSwitch.Model.IModelItemResolver.LookupItem(System.String,System.Type)">
      <summary>
            使用特定 ID 搜索模型项。
            </summary> <param name="expectedType">正在查找的项的类型。</param><param name="id">要查找的 ID。</param><returns>与特定 ID 相关联的项。</returns><exception cref="T:System.Collections.Generic.KeyNotFoundException">具有特定 ID 的模型项不存在。</exception>
    </member>
    <member name="M:Microsoft.LightSwitch.Model.IModelItemResolver.TryLookupItem``1(System.String,``0@)">
      <summary>
            使用特定 ID 搜索模型项。
            </summary> <typeparam name="T">正在查找的项的类型。</typeparam><param name="id">要查找的 ID。</param><param name="item"> 当此方法返回时，如果找到该 ID，则其中包含与该指定 ID 关联的项；否则为 null。</param> <returns>如果找到该 ID，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.LightSwitch.Model.IModelItemResolver.TryLookupItem(System.String,System.Type,Microsoft.LightSwitch.Model.IModelItem@)">
      <summary>
            使用特定 ID 搜索模型项。
            </summary> <param name="expectedType">正在查找的项的类型。</param><param name="id">要查找的 ID。</param><param name="item"> 当此方法返回时，如果找到该 ID，则其中包含与该指定 ID 关联的项；否则为 null。</param> <returns>如果找到该 ID，则为 true；否则为 false。</returns>
    </member>
    <member name="T:Microsoft.LightSwitch.IApplication`1">
      <summary>
            表示正在运行的应用程序。
            </summary>
    </member>
    <member name="T:Microsoft.LightSwitch.IApplication">
      <summary>
            表示正在运行的应用程序。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.IApplication.CreateDataWorkspace">
      <summary>
            创建一个新的数据工作区。
            </summary> <returns>新数据工作区。</returns>
    </member>
    <member name="P:Microsoft.LightSwitch.IApplication.Details">
      <summary>
            获取应用程序的详细信息。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.IApplication.User">
      <summary>
            获取当前用户。该用户可用于获取身份验证信息并检查用户的权限。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.IApplication`1.CreateDataWorkspace">
      <summary>
            创建一个新的数据工作区。
            </summary> <returns>新数据工作区。</returns>
    </member>
    <member name="T:Microsoft.LightSwitch.IDataServiceQueryable">
      <summary>
            提供可针对特定数据源中包含的实体评估查询的功能。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.IDataServiceQueryable.Execute">
      <summary>
            执行在 IDataServiceQueryable 中指定的查询，并返回已筛选和/或已排序实体的列表。
            </summary> <returns>查询返回的实体的可枚举列表。</returns>
    </member>
    <member name="P:Microsoft.LightSwitch.IDataServiceQueryable.ElementType">
      <summary>
            获取正在查询的实体的类型。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.IDataServiceQueryable.Expression">
      <summary>
            获取表示由此 IDataServiceQueryable 生成的查询的 LINQ 表达式。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.IDataServiceQueryable.DataService">
      <summary>
            获取此查询将在其上执行的数据服务。
            </summary>
    </member>
    <member name="T:Microsoft.LightSwitch.IDataServiceQueryable`1">
      <summary>
            提供可针对特定数据源中包含的实体评估查询的功能。
            </summary> <typeparam name="T">查询表示的实体的类型。</typeparam>
    </member>
    <member name="M:Microsoft.LightSwitch.IDataServiceQueryable`1.Execute">
      <summary>
            执行在 IDataServiceQueryable 中指定的查询，并返回已筛选和/或已排序实体的列表。
            </summary> <returns>查询返回的实体的可枚举列表。</returns>
    </member>
    <member name="T:Microsoft.LightSwitch.IOrderedDataServiceQueryable">
      <summary>
            表示 IDataServiceQueryable 上的排序操作的结果。
            </summary>
    </member>
    <member name="T:Microsoft.LightSwitch.IOrderedDataServiceQueryable`1">
      <summary>
            表示 IDataServiceQueryable 上的排序操作的结果。
            </summary> <typeparam name="T">查询返回的实体的类型。</typeparam>
    </member>
    <member name="T:Microsoft.LightSwitch.ValidationResult">
      <summary>
            表示验证实体、属性或屏幕时的单个结果。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.ValidationResult.ToString">
      <summary>
            返回表示此验证结果的字符串。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.ValidationResult.Id">
      <summary>
            获取此验证结果的标识符。
            </summary>
      <remarks>
            ID 允许对层之间的验证结果进行编程匹配。
            </remarks>
    </member>
    <member name="P:Microsoft.LightSwitch.ValidationResult.Target">
      <summary>
            获取验证结果所应用到的项。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.ValidationResult.Property">
      <summary>
            获取验证结果所应用到的属性。如果为 null，验证结果将应用到整个目标。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.ValidationResult.Severity">
      <summary>
            获取此验证结果的严重级别。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.ValidationResult.Message">
      <summary>
            获取要向此验证结果的最终用户显示的消息。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.ValidationResult.PropertyEntry">
      <summary>
            获取验证结果所应用到的属性项。如果为 null，验证结果将应用到整个目标。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.ValidationResult.CreatedPropertyEntry">
      <summary>
            获取其验证规则创建验证结果的属性项。如果为 null，则验证结果是由整个对象验证创建。
            </summary>
      <remarks>
            这用于通知当哪些验证结果变为无效时要对其进行清除。
            </remarks>
    </member>
    <member name="T:Microsoft.LightSwitch.ValidationResults">
      <summary>
            ValidationResults 是标识验证项上的无效内容的 ValidationResult 实例的集合。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.ValidationResults.Refresh">
      <summary>
            刷新验证结果。这将导致放弃当前结果并重新执行验证。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.ValidationResults.HasErrors">
      <summary>
            获取一个值，该值指示当前验证结果中是否存在严重级别等于“错误”的任何结果。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.ValidationResults.Errors">
      <summary>
            获取当前验证结果中严重级别等于“错误”的 ValidationResult 实例的集合。
            </summary>
    </member>
    <member name="T:Microsoft.LightSwitch.Details.EntityConflict">
      <summary>
            表示尝试保存后存在冲突的实体。冲突包括读取实体后属性在服务器上发生更改或读取一个实体后在服务器上删除该实体的情况。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.Details.EntityConflict.ResolveConflicts(Microsoft.LightSwitch.Details.ConflictResolution)">
      <summary>
            使用给定的解决方法解决此实体的所有冲突。调用 ResolveConflicts 后，可重新尝试执行保存。如果解决方法是 ClientWins，则每个冲突属性的值将保留，原始值将被更新为服务器值。如果解决方法是 ServerWins，则每个冲突属性的值和原始值都将被更新为服务器值。
            </summary> <param name="resolution">实体的冲突属性所需要的解决方法。</param><exception cref="T:System.ArgumentException">当 IsDeletedOnServer 为 true 时，ClientWins 不是有效的解决方法。</exception>
    </member>
    <member name="P:Microsoft.LightSwitch.Details.EntityConflict.ConflictingProperties">
      <summary>
            获取存在冲突的属性的集合。这些属性在服务器上具有与读取实体时的值不同的值。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Details.EntityConflict.Entity">
      <summary>
            获取存在冲突的实体。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Details.EntityConflict.IsDeletedOnServer">
      <summary>
            获取一个值，该值指示该实体在服务器上是否不再存在。
            </summary>
    </member>
    <member name="T:Microsoft.LightSwitch.Details.EntityPropertyConflict">
      <summary>
            表示作为 EntityConflict 一部分的单个实体属性上的冲突。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Details.EntityPropertyConflict.EntityConflict">
      <summary>
            获取此属性冲突所属的 EntityConflict。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Details.EntityPropertyConflict.Property">
      <summary>
            获取出现冲突的属性对象。属性对象可用于获取存在冲突的属性的名称、值和特性。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Details.EntityPropertyConflict.OriginalValue">
      <summary>
            获取存在冲突的属性的原始值。最初查询实体时，原始值是属性的值。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Details.EntityPropertyConflict.ServerValue">
      <summary>
            获取存在冲突的属性的服务器值。该服务器值是发生冲突时服务器上的属性的值。
            </summary>
    </member>
    <member name="T:Microsoft.LightSwitch.Security.IUser">
      <summary>
            表示应用程序用户。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.Security.IUser.HasPermission(System.String)">
      <summary>
            返回用户是否具有指定的权限。
            </summary> <param name="permissionId">权限的 ID。</param><returns>如果该用户具有权限，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.LightSwitch.Security.IUser.DemandPermission(System.String)">
      <summary>
            确保用户是否具有指定的权限。
            </summary> <param name="permissionId">用户必须具有的权限的 ID。</param><exception cref="T:Microsoft.LightSwitch.PermissionException">用户不具有指定的权限。</exception>
    </member>
    <member name="P:Microsoft.LightSwitch.Security.IUser.AuthenticationType">
      <summary>
            获取用户的身份验证类型。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Security.IUser.FullName">
      <summary>
            获取应用程序用户表示的人员的全名。
            </summary>
    </member>
    <member name="T:Microsoft.LightSwitch.Framework.Base.EntityObject`2">
      <summary>
            提供要在其上执行业务逻辑的实体的实例。
            </summary> <typeparam name="TEntity">实体的类型。</typeparam><typeparam name="TDetails">实体的详细信息的类型。</typeparam>
    </member>
    <member name="T:Microsoft.LightSwitch.Framework.Base.ObjectWithDetails`2">
      <summary>
            表示在详细信息类中保存附加详细信息的对象。
            </summary> <typeparam name="TObject">对象的类型。</typeparam><typeparam name="TDetails">详细信息类的类型。</typeparam>
    </member>
    <member name="P:Microsoft.LightSwitch.Framework.Base.ObjectWithDetails`2.Details">
      <summary>
            获取有关此项的附加详细信息。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.Framework.Base.EntityObject`2.#ctor(Microsoft.LightSwitch.Framework.EntitySet{`0})">
      <summary>
            创建一个新实体实例。
            </summary> <param name="entitySet">在其中创建实体实例的实体集。</param>
    </member>
    <member name="M:Microsoft.LightSwitch.Framework.Base.EntityObject`2.Delete">
      <summary>
            标记要删除的实体实例。该实例将在调用 SaveChanges() 时被删除。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.Framework.Base.EntityObject`2.ToString">
      <summary>
            提供实体实例的字符串表示形式。该字符串表示形式由实体设计器中指定的 Summary 属性确定。
            </summary> <returns>实体实例的字符串表示形式。</returns>
    </member>
    <member name="T:Microsoft.LightSwitch.Details.Framework.Base.EntityDetails`2">
      <summary>
            表示实体的附加详细信息类。
            </summary> <typeparam name="TEntity">实体的类型。</typeparam><typeparam name="TDetails">详细信息类的类型。</typeparam>
    </member>
    <member name="T:Microsoft.LightSwitch.Details.Framework.Base.BusinessDetails`2">
      <summary>
            表示屏幕或实体的附加详细信息类。
            </summary> <typeparam name="TObject">屏幕或实体的类型。</typeparam><typeparam name="TDetails">详细信息类的类型。</typeparam>
    </member>
    <member name="M:Microsoft.LightSwitch.Details.Framework.Base.BusinessDetails`2.Microsoft#LightSwitch#Details#Internal#IBusinessDetailsCore#RefreshValidationResults">
      <summary>
            刷新整个对象的 ValidationResults。
            </summary>
      <remarks>
            刷新需要使对象的 ValidationResults 和所有属性的 ValidationResults 无效，然后需要重新计算结果。
            </remarks>
    </member>
    <member name="M:Microsoft.LightSwitch.Details.Framework.Base.BusinessDetails`2.Microsoft#LightSwitch#Details#Internal#IBusinessDetailsCore#RefreshPropertyValidationResults(Microsoft.LightSwitch.Details.IBusinessPropertyEntry)">
      <summary>
            刷新单个属性的 ValidationResults。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.Details.Framework.Base.BusinessDetails`2.CanHaveErrors">
      <summary>
            获取一个值，该值指示对象的当前状态是否允许它具有错误。
            </summary> <returns>如果对象可具有错误，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.LightSwitch.Details.Framework.Base.BusinessDetails`2.GetObjectValidationResults">
      <summary>
            调用此方法以检索需要由 INotifyDataErrorInfo.GetErrors() 调用返回的所有非属性验证错误。
            </summary> <returns></returns>
    </member>
    <member name="M:Microsoft.LightSwitch.Details.Framework.Base.BusinessDetails`2.EnsureValidationDependenciesAreRegistered">
      <summary>
            确保已运行设置依赖项跟踪的验证的帮助器方法。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.Details.Framework.Base.BusinessDetails`2.RemoveValidationResultsCreatedBy(Microsoft.LightSwitch.Details.IBusinessPropertyEntry)">
      <summary>
            通过验证指定的属性删除由该指定属性创建的所有验证结果。
            </summary> <param name="entry">通过验证此属性而创建的任何验证结果都将从集合中被删除。如果为 null，则通过验证整个对象创建的所有结果都将被删除。</param>
    </member>
    <member name="P:Microsoft.LightSwitch.Details.Framework.Base.BusinessDetails`2.DisplayName">
      <summary>
            获取屏幕或实体的显示名称，与设计器中所指定的一致。这是向最终用户显示的名称。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Details.Framework.Base.BusinessDetails`2.Description">
      <summary>
            获取屏幕或实体的说明，与设计器中所指定的一致。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Details.Framework.Base.BusinessDetails`2.IsValidated">
      <summary>
            获取一个值，该值指示是否已验证屏幕或实体。如果返回 true，则 ValidationResults 成员为最新。如果返回 false，则访问 ValidationResults 将会触发要执行的验证逻辑。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Details.Framework.Base.BusinessDetails`2.ValidationResults">
      <summary>
            获取屏幕或实体的验证结果。如果尚未验证屏幕或实体，则访问此属性将会触发要执行的验证逻辑。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.Details.Framework.Base.EntityDetails`2.Microsoft#LightSwitch#Details#Internal#IEntityDetailsCore#OnServerDeserialized">
      <summary>
            当实体已在服务层被反序列化后对它进行初始化。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.Details.Framework.Base.EntityDetails`2.Microsoft#LightSwitch#Details#Internal#IEntityDetailsCore#OnEntityStatePropertyChanged">
      <summary>
            用于响应实体的 EntityState 属性更改的逻辑。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.Details.Framework.Base.EntityDetails`2.SetIsChangedValue``1(Microsoft.LightSwitch.Details.Framework.Base.EntityProperty{`0,`1}.Entry,System.Func{`1,``0},System.Nullable{System.Boolean},System.Boolean@)">
      <summary>
            将 IsChanged 的值设置为指定值。
            </summary> <returns>如果应对 IsChanged 属性引发 PropertyChanged 事件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.LightSwitch.Details.Framework.Base.EntityDetails`2.CanHaveErrors">
      <summary>
            如果未尝试保存新实体，则该实体不能具有错误。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.Details.Framework.Base.EntityDetails`2.CanHavePropertyErrors">
      <summary>
            除非实体处于未修改状态，否则，实体属性可以具有错误。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.Details.Framework.Base.EntityDetails`2.InvokeChangedPartialMethod``1(Microsoft.LightSwitch.Details.Framework.EntityStorageProperty{`0,`1,``0}.Entry)">
      <summary>
            调用 EntityObject 类上的部分 XXX_Changed() 方法。
            </summary>
      <remarks>
            由于这是蒂姆的代码，因此只能在 LogicDispatcher 上运行。
            </remarks>
    </member>
    <member name="P:Microsoft.LightSwitch.Details.Framework.Base.EntityDetails`2.Name">
      <summary>
            获取实体的名称，与实体设计器中所指定的一致。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Details.Framework.Base.EntityDetails`2.Entity">
      <summary>
            获取这些详细信息应用到的实体。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Details.Framework.Base.EntityDetails`2.EntityConflict">
      <summary>
            如果此实体在 ConcurrencyException 中返回，则获取实体冲突。如果没有冲突，则返回 null。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Details.Framework.Base.EntityDetails`2.EntityState">
      <summary>
            获取实体的当前状态。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Details.Framework.Base.EntityDetails`2.EntitySet">
      <summary>
            获取包含此实体的实体集。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Details.Framework.Base.EntityDetails`2.AllowSaveWithErrors">
      <summary>
            获取一个值，该值指示是否可在实体实例具有验证错误时保存它。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Details.Framework.Base.EntityDetails`2.Microsoft#LightSwitch#Details#Internal#IEntityDetailsCore#IsMarkedForDeletion">
      <summary>
            获取一个值，该值指示是否已将实体标记为进行删除。此功能当前仅在服务层上使用（请参见 Bug 910782 以了解其他详细信息）。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Details.Framework.Base.EntityDetails`2.IsNewlyAdded">
      <summary>
            获取或设置一个值，该值指示此实体实例是新添加的实体实例，需要进行初始化。
            </summary>
      <remarks>
            初始化包括设置默认属性值、调用用户代码“_Created”等。
            </remarks>
    </member>
    <member name="M:Microsoft.LightSwitch.DataServiceQueryable.First``1(Microsoft.LightSwitch.IDataServiceQueryable{``0})">
      <summary>
            返回 IDataServiceQueryable 的结果中的第一个实体。
            </summary> <typeparam name="TSource">正在返回的实体的类型。</typeparam><param name="source">要处理的 IDataServiceQueryable。</param><returns>结果中的第一个实体。</returns><exception cref="T:System.ArgumentNullException">源为 null。</exception><exception cref="T:System.InvalidOperationException">IDataServiceQuerable 的结果中没有实体。</exception>
    </member>
    <member name="M:Microsoft.LightSwitch.DataServiceQueryable.FirstOrDefault``1(Microsoft.LightSwitch.IDataServiceQueryable{``0})">
      <summary>
            返回 IDataServiceQueryable 的结果中的第一个实体，如果该结果中不存在实体，则返回 null。
            </summary> <typeparam name="TSource">正在返回的实体的类型。</typeparam><param name="source">要处理的 IDataServiceQueryable。</param><returns>结果中的第一个实体或 null。</returns><exception cref="T:System.ArgumentNullException">源为 null。</exception>
    </member>
    <member name="M:Microsoft.LightSwitch.DataServiceQueryable.OrderBy``2(Microsoft.LightSwitch.IDataServiceQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
            根据某个键对 IDataServiceQueryable 的结果排序。
            </summary> <typeparam name="TSource">要查询的实体类型。</typeparam><typeparam name="TKey">keySelector 返回的属性的类型。</typeparam><param name="source">要处理的 IDataServiceQueryable。</param><param name="keySelector">用于从元素中提取键的函数。</param><returns>已排序的 IOrderedDataServiceQueryable。</returns><exception cref="T:System.ArgumentNullException">源为 null。</exception><exception cref="T:System.ArgumentNullException">keySelector 为 null。</exception>
    </member>
    <member name="M:Microsoft.LightSwitch.DataServiceQueryable.OrderByDescending``2(Microsoft.LightSwitch.IDataServiceQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
            根据键按降序对 IDataServiceQueryable 的结果进行排序。如果 keySelector 为 null，则引发。
            </summary> <typeparam name="TSource">要查询的实体类型。</typeparam><typeparam name="TKey">keySelector 返回的属性的类型。</typeparam><param name="source">要处理的 IDataServiceQueryable。</param><param name="keySelector">用于从元素中提取键的函数。</param><returns>已排序的 IOrderedDataServiceQueryable。</returns><exception cref="T:System.ArgumentNullException">源为 null。</exception><exception cref="T:System.ArgumentNullException">keySelector 为 null。</exception>
    </member>
    <member name="M:Microsoft.LightSwitch.DataServiceQueryable.Search``1(Microsoft.LightSwitch.IDataServiceQueryable{``0},System.String[])">
      <summary>
            在 IDataServiceQueryable 中搜索字符串属性包含指定搜索词的特定实体。
            </summary> <typeparam name="TSource">正在搜索的实体的类型。</typeparam><param name="source">要在其上进行搜索的 IDataServiceQuerable。</param><param name="searchTerms">要搜索的字符串词语的集。</param><returns>仅包含与所有搜索词匹配的实体的新 IDataServiceQuerable。</returns><exception cref="T:System.ArgumentNullException">源为 null。</exception>
    </member>
    <member name="M:Microsoft.LightSwitch.DataServiceQueryable.Search``1(Microsoft.LightSwitch.IDataServiceQueryable{``0},Microsoft.LightSwitch.SearchTerm[])">
      <summary>
            在 IDataServiceQueryable 中搜索字符串属性包含指定搜索词的特定实体。
            </summary> <typeparam name="TSource">正在搜索的实体的类型。</typeparam><param name="source">要在其上进行搜索的 IDataServiceQuerable。</param><param name="searchTerms">要搜索的搜索词的数组。</param><returns>仅包含与搜索词匹配的实体的新 IDataServiceQuerable。</returns><exception cref="T:System.ArgumentNullException">源为 null。</exception>
    </member>
    <member name="M:Microsoft.LightSwitch.DataServiceQueryable.Search``1(Microsoft.LightSwitch.IDataServiceQueryable{``0},System.Collections.Generic.IEnumerable{Microsoft.LightSwitch.SearchTerm},Microsoft.LightSwitch.SearchOptions)">
      <summary>
            在 IDataServiceQueryable 中搜索字符串属性包含指定搜索词的特定实体。
            </summary> <typeparam name="TSource">正在搜索的实体的类型。</typeparam><param name="source">要在其上进行搜索的 IDataServiceQuerable。</param><param name="searchTerms">要搜索的搜索词的数组。</param><param name="searchOptions">包含要搜索的字符串属性的搜索选项。</param><returns>仅包含与搜索词匹配的实体的新 IDataServiceQuerable。</returns><exception cref="T:System.ArgumentNullException">源为 null。</exception><exception cref="T:System.ArgumentNullException">searchTerms 为 null。</exception><exception cref="T:System.ArgumentNullException">searchOptions 为 null。</exception>
    </member>
    <member name="M:Microsoft.LightSwitch.DataServiceQueryable.Single``1(Microsoft.LightSwitch.IDataServiceQueryable{``0})">
      <summary>
            返回 IDataServiceQueryable 的结果中的唯一实体，如果结果中并非恰好包含一个实体，则引发。
            </summary> <typeparam name="TSource">正在返回的实体的类型。</typeparam><param name="source">要处理的 IDataServiceQueryable。</param><returns>结果中的实体。</returns><exception cref="T:System.ArgumentNullException">源为 null。</exception><exception cref="T:System.InvalidOperationException">IDataServiceQuerable 的结果中不是恰好包含一个实体。</exception>
    </member>
    <member name="M:Microsoft.LightSwitch.DataServiceQueryable.SingleOrDefault``1(Microsoft.LightSwitch.IDataServiceQueryable{``0})">
      <summary>
            返回 IDataServiceQueryable 的结果中的唯一实体，如果结果中并非恰好包含一个实体，则为 null。
            </summary> <typeparam name="TSource">正在返回的实体的类型。</typeparam><param name="source">要处理的 IDataServiceQueryable。</param><returns>结果中的实体或 null。</returns><exception cref="T:System.ArgumentNullException">源为 null。</exception>
    </member>
    <member name="M:Microsoft.LightSwitch.DataServiceQueryable.Skip``1(Microsoft.LightSwitch.IDataServiceQueryable{``0},System.Int32)">
      <summary>
            跳过 IDataServiceQueryable 中指定数量的实体，然后返回剩余的实体。
            </summary> <typeparam name="TSource">正在跳过的实体的类型。</typeparam><param name="source">要处理的 IDataServiceQueryable。</param><param name="count">要跳过的实体数。</param><returns>包含剩余实体的 IDataServiceQueryable。</returns><exception cref="T:System.ArgumentNullException">源为 null。</exception>
    </member>
    <member name="M:Microsoft.LightSwitch.DataServiceQueryable.Take``1(Microsoft.LightSwitch.IDataServiceQueryable{``0},System.Int32)">
      <summary>
            从 IDataServiceQueryable 的开头返回指定数量的连续实体。
            </summary> <typeparam name="TSource">实体的类型。</typeparam><param name="source">要处理的 IDataServiceQueryable。</param><param name="count">要返回的实体数量。</param><returns>包含指定数量实体的 IDataServiceQueryable。</returns><exception cref="T:System.ArgumentNullException">源为 null。</exception>
    </member>
    <member name="M:Microsoft.LightSwitch.DataServiceQueryable.ThenBy``2(Microsoft.LightSwitch.IOrderedDataServiceQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
            根据某个键按升序对 IDataServiceQueryable 中的实体执行后续排序。如果 keySelector 为 null，则引发。
            </summary> <typeparam name="TSource">要查询的实体类型。</typeparam><typeparam name="TKey">keySelector 返回的属性的类型。</typeparam><param name="source">要排序的 IDataServiceQueryable。</param><param name="keySelector">用于从元素中提取键的函数。</param><returns>已排序的 IOrderedDataServiceQueryable。</returns><exception cref="T:System.ArgumentNullException">源为 null。</exception><exception cref="T:System.ArgumentNullException">keySelector 为 null。</exception>
    </member>
    <member name="M:Microsoft.LightSwitch.DataServiceQueryable.ThenByDescending``2(Microsoft.LightSwitch.IOrderedDataServiceQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
            根据某个键按降序对 IDataServiceQueryable 中的实体执行后续排序。如果 keySelector 为 null，则引发。
            </summary> <typeparam name="TSource">要查询的实体类型。</typeparam><typeparam name="TKey">keySelector 返回的属性的类型。</typeparam><param name="source">要排序的 IDataServiceQueryable。</param><param name="keySelector">用于从元素中提取键的函数。</param><returns>已排序的 IOrderedDataServiceQueryable。</returns><exception cref="T:System.ArgumentNullException">源为 null。</exception><exception cref="T:System.ArgumentNullException">keySelector 为 null。</exception>
    </member>
    <member name="M:Microsoft.LightSwitch.DataServiceQueryable.Where``1(Microsoft.LightSwitch.IDataServiceQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>
            基于谓词筛选 IDataServiceQueryable。
            </summary> <typeparam name="TSource">正在处理的实体的类型。</typeparam><param name="source">正在筛选的 IDataServiceQueryable。</param><param name="predicate">用于测试每个实体是否满足条件的函数。</param><returns>包含满足条件的源中的实体的 IDataServiceQueryable。</returns><exception cref="T:System.ArgumentNullException">源为 null。</exception><exception cref="T:System.ArgumentNullException">谓词为 null。</exception>
    </member>
    <member name="M:Microsoft.LightSwitch.DataServiceQueryable.Include``1(Microsoft.LightSwitch.IDataServiceQueryable{``0},System.String)">
      <summary>
            指定执行 IDataServiceQueryable 时应在结果中包括的相关实体。可包括与重数一 (1) 或零或一 (0..1) 相关的任何实体。
            </summary> <typeparam name="TSource">IDataServiceQueryable 中的实体的类型。</typeparam><param name="source">要处理的 IDataServiceQueryable。</param><param name="path">要包括的相关实体的点线路径。</param><returns>执行时将返回目标实体以及指定的相关实体的 IDataServiceQueryable。</returns><exception cref="T:System.ArgumentNullException">源为 null。</exception><exception cref="T:System.ArgumentNullException">路径为 null。</exception><exception cref="T:System.ArgumentException">数据提供程序不支持包含。</exception>
    </member>
    <member name="T:Microsoft.LightSwitch.Framework.EntitySet`1">
      <summary>
            表示同一类型的实体实例集的容器。实体集具有唯一的实体键。
            </summary> <typeparam name="TEntity">包含的实体的类型。</typeparam>
    </member>
    <member name="M:Microsoft.LightSwitch.Framework.EntitySet`1.AddNew">
      <summary>
            在指定实体集中添加一个新实体。
            </summary> <returns>该新实体。</returns>
    </member>
    <member name="M:Microsoft.LightSwitch.Framework.EntitySet`1.GetEnumerator">
      <summary>
            返回循环访问实体集中实体的枚举器。
            </summary> <returns>循环访问实体集中实体的枚举器。</returns>
    </member>
    <member name="M:Microsoft.LightSwitch.Framework.EntitySet`1.GetQuery">
      <summary>
            获取表示实体集的查询。执行此查询将检索实体集中的所有实体实例。
            </summary> <returns>表示实体集的查询。</returns>
    </member>
    <member name="P:Microsoft.LightSwitch.Framework.EntitySet`1.CanRead">
      <summary>
            获取一个值，该值指示当前用户是否有权从实体集中读取实体。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Framework.EntitySet`1.CanInsert">
      <summary>
            获取一个值，该值指示当前用户是否有权在实体集中插入实体。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Framework.EntitySet`1.CanUpdate">
      <summary>
            获取一个值，该值指示当前用户是否有权更新实体集中的实体。
            </summary>
    </member>
    <member name="P:Microsoft.LightSwitch.Framework.EntitySet`1.CanDelete">
      <summary>
            获取一个值，该值指示当前用户是否有权从实体集中删除实体。
            </summary>
    </member>
    <member name="T:Microsoft.LightSwitch.EntitySetValidationResultsBuilder">
      <summary>
            EntitySetValidationResultsBuilder 为正在验证的当前实体添加新的 ValidationResult 实例。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.EntitySetValidationResultsBuilder.AddEntityError(System.String)">
      <summary>
            向结果集合中添加一个针对整个实体的验证错误。
            </summary> <param name="message">要向最终用户显示的有关新验证结果的消息。</param>
    </member>
    <member name="M:Microsoft.LightSwitch.EntitySetValidationResultsBuilder.AddEntityResult(System.String,Microsoft.LightSwitch.ValidationSeverity)">
      <summary>
            向结果集合中添加一个针对整个实体的验证结果。
            </summary> <param name="message">要向最终用户显示的有关新验证结果的消息。</param> <param name="severity"> 新验证结果的严重级别。</param>
    </member>
    <member name="M:Microsoft.LightSwitch.EntitySetValidationResultsBuilder.AddEntityResult(System.String,Microsoft.LightSwitch.ValidationSeverity,System.String)">
      <summary>
            向结果集合中添加一个针对整个实体的验证结果。
            </summary> <param name="message">要向最终用户显示的有关新验证结果的消息。</param> <param name="severity"> 新验证结果的严重级别。</param> <param name="id"> 新验证结果的字符串标识符。</param>
    </member>
    <member name="M:Microsoft.LightSwitch.EntitySetValidationResultsBuilder.AddPropertyError(System.String,Microsoft.LightSwitch.Details.IEntityProperty)">
      <summary>
            添加一个针对特定属性的属性验证错误。
            </summary> <param name="message">要向最终用户显示的有关新验证结果的消息。</param> <param name="property"> 新验证错误将应用到的属性。</param>
    </member>
    <member name="M:Microsoft.LightSwitch.EntitySetValidationResultsBuilder.AddPropertyResult(System.String,Microsoft.LightSwitch.ValidationSeverity,Microsoft.LightSwitch.Details.IEntityProperty)">
      <summary>
            添加针对特定属性的属性验证结果。
            </summary> <param name="message">要向最终用户显示的有关新验证结果的消息。</param> <param name="severity"> 新验证结果的严重级别。</param> <param name="property"> 新验证结果将应用到的属性。</param>
    </member>
    <member name="M:Microsoft.LightSwitch.EntitySetValidationResultsBuilder.AddPropertyResult(System.String,Microsoft.LightSwitch.ValidationSeverity,Microsoft.LightSwitch.Details.IEntityProperty,System.String)">
      <summary>
            添加针对特定属性的属性验证结果。
            </summary> <param name="message">要向最终用户显示的有关新验证结果的消息。</param> <param name="severity"> 新验证结果的严重级别。</param> <param name="property"> 新验证结果将应用到的属性。</param> <param name="id"> 新验证结果的字符串标识符。</param>
    </member>
    <member name="M:Microsoft.LightSwitch.EntitySetValidationResultsBuilder.GetCurrentPropertyEntry">
      <summary>
            返回范围内的当前 IBusinessPropertyEntry。
            </summary>
      <remarks>
            当前 IBusinessPropertyEntry 是当前正在验证的属性。如果正在验证整个实体，则将返回 null。
            </remarks>
    </member>
    <member name="T:Microsoft.LightSwitch.EntityValidationResultsBuilder">
      <summary>
            EntityValidationResultsBuilder 为正在验证的当前实体添加新的 ValidationResult 实例。
            </summary>
    </member>
    <member name="M:Microsoft.LightSwitch.EntityValidationResultsBuilder.AddPropertyError(System.String)">
      <summary>
            向结果集合中添加一个验证错误。根据正在验证的实体，默认值是目标和属性成员。
            </summary> <param name="message">要向最终用户显示的有关新验证结果的消息。</param>
    </member>
    <member name="M:Microsoft.LightSwitch.EntityValidationResultsBuilder.AddPropertyResult(System.String,Microsoft.LightSwitch.ValidationSeverity)">
      <summary>
            向结果集合中添加一个验证结果。根据正在验证的实体，默认值是目标和属性成员。
            </summary> <param name="message">要向最终用户显示的有关新验证结果的消息。</param> <param name="severity"> 新验证结果的严重级别。</param>
    </member>
    <member name="M:Microsoft.LightSwitch.EntityValidationResultsBuilder.AddPropertyResult(System.String,Microsoft.LightSwitch.ValidationSeverity,System.String)">
      <summary>
            向结果集合中添加一个验证结果。根据正在验证的实体，默认值是目标和属性成员。
            </summary> <param name="message">要向最终用户显示的有关新验证结果的消息。</param> <param name="severity"> 新验证结果的严重级别。</param> <param name="id"> 新验证结果的字符串标识符。</param>
    </member>
  </members></doc>